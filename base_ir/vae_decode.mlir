module @compiled_vae {
  util.global private @_params.vae.encoder.conv_in.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.conv_in.weight"> : tensor<128x3x3x3xf16>
  util.global private @_params.vae.encoder.conv_in.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.conv_in.bias"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.0.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.0.norm1.weight"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.0.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.0.norm1.bias"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.0.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.0.conv1.weight"> : tensor<128x128x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.0.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.0.conv1.bias"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.0.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.0.norm2.weight"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.0.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.0.norm2.bias"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.0.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.0.conv2.weight"> : tensor<128x128x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.0.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.0.conv2.bias"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.1.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.1.norm1.weight"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.1.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.1.norm1.bias"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.1.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.1.conv1.weight"> : tensor<128x128x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.1.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.1.conv1.bias"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.1.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.1.norm2.weight"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.1.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.1.norm2.bias"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.1.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.1.conv2.weight"> : tensor<128x128x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.0.resnets.1.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.resnets.1.conv2.bias"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.0.downsamplers.0.conv.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.downsamplers.0.conv.weight"> : tensor<128x128x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.0.downsamplers.0.conv.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.0.downsamplers.0.conv.bias"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.0.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.0.norm1.weight"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.0.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.0.norm1.bias"> : tensor<128xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.0.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.0.conv1.weight"> : tensor<256x128x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.0.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.0.conv1.bias"> : tensor<256xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.0.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.0.norm2.weight"> : tensor<256xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.0.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.0.norm2.bias"> : tensor<256xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.0.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.0.conv2.weight"> : tensor<256x256x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.0.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.0.conv2.bias"> : tensor<256xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.0.conv_shortcut.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.0.conv_shortcut.weight"> : tensor<256x128x1x1xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.0.conv_shortcut.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.0.conv_shortcut.bias"> : tensor<256xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.1.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.1.norm1.weight"> : tensor<256xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.1.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.1.norm1.bias"> : tensor<256xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.1.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.1.conv1.weight"> : tensor<256x256x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.1.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.1.conv1.bias"> : tensor<256xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.1.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.1.norm2.weight"> : tensor<256xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.1.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.1.norm2.bias"> : tensor<256xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.1.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.1.conv2.weight"> : tensor<256x256x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.1.resnets.1.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.resnets.1.conv2.bias"> : tensor<256xf16>
  util.global private @_params.vae.encoder.down_blocks.1.downsamplers.0.conv.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.downsamplers.0.conv.weight"> : tensor<256x256x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.1.downsamplers.0.conv.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.1.downsamplers.0.conv.bias"> : tensor<256xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.0.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.0.norm1.weight"> : tensor<256xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.0.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.0.norm1.bias"> : tensor<256xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.0.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.0.conv1.weight"> : tensor<512x256x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.0.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.0.conv1.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.0.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.0.norm2.weight"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.0.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.0.norm2.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.0.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.0.conv2.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.0.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.0.conv2.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.0.conv_shortcut.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.0.conv_shortcut.weight"> : tensor<512x256x1x1xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.0.conv_shortcut.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.0.conv_shortcut.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.1.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.1.norm1.weight"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.1.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.1.norm1.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.1.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.1.conv1.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.1.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.1.conv1.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.1.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.1.norm2.weight"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.1.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.1.norm2.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.1.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.1.conv2.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.2.resnets.1.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.resnets.1.conv2.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.2.downsamplers.0.conv.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.downsamplers.0.conv.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.2.downsamplers.0.conv.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.2.downsamplers.0.conv.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.0.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.0.norm1.weight"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.0.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.0.norm1.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.0.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.0.conv1.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.0.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.0.conv1.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.0.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.0.norm2.weight"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.0.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.0.norm2.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.0.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.0.conv2.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.0.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.0.conv2.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.1.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.1.norm1.weight"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.1.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.1.norm1.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.1.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.1.conv1.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.1.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.1.conv1.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.1.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.1.norm2.weight"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.1.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.1.norm2.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.1.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.1.conv2.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.encoder.down_blocks.3.resnets.1.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.down_blocks.3.resnets.1.conv2.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.attentions.0.group_norm.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.attentions.0.group_norm.weight"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.attentions.0.group_norm.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.attentions.0.group_norm.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.attentions.0.to_q.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.attentions.0.to_q.weight"> : tensor<512x512xf16>
  util.global private @_params.vae.encoder.mid_block.attentions.0.to_q.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.attentions.0.to_q.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.attentions.0.to_k.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.attentions.0.to_k.weight"> : tensor<512x512xf16>
  util.global private @_params.vae.encoder.mid_block.attentions.0.to_k.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.attentions.0.to_k.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.attentions.0.to_v.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.attentions.0.to_v.weight"> : tensor<512x512xf16>
  util.global private @_params.vae.encoder.mid_block.attentions.0.to_v.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.attentions.0.to_v.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.attentions.0.to_out.0.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.attentions.0.to_out.0.weight"> : tensor<512x512xf16>
  util.global private @_params.vae.encoder.mid_block.attentions.0.to_out.0.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.attentions.0.to_out.0.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.0.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.0.norm1.weight"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.0.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.0.norm1.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.0.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.0.conv1.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.0.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.0.conv1.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.0.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.0.norm2.weight"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.0.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.0.norm2.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.0.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.0.conv2.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.0.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.0.conv2.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.1.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.1.norm1.weight"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.1.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.1.norm1.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.1.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.1.conv1.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.1.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.1.conv1.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.1.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.1.norm2.weight"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.1.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.1.norm2.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.1.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.1.conv2.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.encoder.mid_block.resnets.1.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.mid_block.resnets.1.conv2.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.conv_norm_out.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.conv_norm_out.weight"> : tensor<512xf16>
  util.global private @_params.vae.encoder.conv_norm_out.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.conv_norm_out.bias"> : tensor<512xf16>
  util.global private @_params.vae.encoder.conv_out.weight {noinline} = #stream.parameter.named<"model"::"vae.encoder.conv_out.weight"> : tensor<8x512x3x3xf16>
  util.global private @_params.vae.encoder.conv_out.bias {noinline} = #stream.parameter.named<"model"::"vae.encoder.conv_out.bias"> : tensor<8xf16>
  util.global private @_params.vae.decoder.conv_in.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.conv_in.weight"> : tensor<512x4x3x3xf16>
  util.global private @_params.vae.decoder.conv_in.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.conv_in.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.0.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.0.norm1.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.0.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.0.norm1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.0.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.0.conv1.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.0.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.0.conv1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.0.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.0.norm2.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.0.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.0.norm2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.0.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.0.conv2.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.0.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.0.conv2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.1.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.1.norm1.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.1.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.1.norm1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.1.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.1.conv1.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.1.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.1.conv1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.1.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.1.norm2.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.1.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.1.norm2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.1.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.1.conv2.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.1.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.1.conv2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.2.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.2.norm1.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.2.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.2.norm1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.2.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.2.conv1.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.2.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.2.conv1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.2.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.2.norm2.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.2.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.2.norm2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.2.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.2.conv2.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.0.resnets.2.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.resnets.2.conv2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.0.upsamplers.0.conv.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.upsamplers.0.conv.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.0.upsamplers.0.conv.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.0.upsamplers.0.conv.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.0.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.0.norm1.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.0.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.0.norm1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.0.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.0.conv1.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.0.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.0.conv1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.0.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.0.norm2.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.0.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.0.norm2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.0.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.0.conv2.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.0.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.0.conv2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.1.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.1.norm1.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.1.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.1.norm1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.1.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.1.conv1.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.1.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.1.conv1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.1.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.1.norm2.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.1.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.1.norm2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.1.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.1.conv2.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.1.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.1.conv2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.2.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.2.norm1.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.2.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.2.norm1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.2.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.2.conv1.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.2.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.2.conv1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.2.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.2.norm2.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.2.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.2.norm2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.2.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.2.conv2.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.1.resnets.2.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.resnets.2.conv2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.1.upsamplers.0.conv.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.upsamplers.0.conv.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.1.upsamplers.0.conv.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.1.upsamplers.0.conv.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.0.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.0.norm1.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.0.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.0.norm1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.0.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.0.conv1.weight"> : tensor<256x512x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.0.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.0.conv1.bias"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.0.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.0.norm2.weight"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.0.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.0.norm2.bias"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.0.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.0.conv2.weight"> : tensor<256x256x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.0.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.0.conv2.bias"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.0.conv_shortcut.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.0.conv_shortcut.weight"> : tensor<256x512x1x1xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.0.conv_shortcut.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.0.conv_shortcut.bias"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.1.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.1.norm1.weight"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.1.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.1.norm1.bias"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.1.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.1.conv1.weight"> : tensor<256x256x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.1.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.1.conv1.bias"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.1.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.1.norm2.weight"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.1.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.1.norm2.bias"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.1.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.1.conv2.weight"> : tensor<256x256x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.1.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.1.conv2.bias"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.2.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.2.norm1.weight"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.2.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.2.norm1.bias"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.2.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.2.conv1.weight"> : tensor<256x256x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.2.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.2.conv1.bias"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.2.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.2.norm2.weight"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.2.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.2.norm2.bias"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.2.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.2.conv2.weight"> : tensor<256x256x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.2.resnets.2.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.resnets.2.conv2.bias"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.2.upsamplers.0.conv.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.upsamplers.0.conv.weight"> : tensor<256x256x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.2.upsamplers.0.conv.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.2.upsamplers.0.conv.bias"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.0.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.0.norm1.weight"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.0.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.0.norm1.bias"> : tensor<256xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.0.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.0.conv1.weight"> : tensor<128x256x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.0.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.0.conv1.bias"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.0.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.0.norm2.weight"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.0.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.0.norm2.bias"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.0.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.0.conv2.weight"> : tensor<128x128x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.0.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.0.conv2.bias"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.0.conv_shortcut.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.0.conv_shortcut.weight"> : tensor<128x256x1x1xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.0.conv_shortcut.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.0.conv_shortcut.bias"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.1.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.1.norm1.weight"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.1.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.1.norm1.bias"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.1.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.1.conv1.weight"> : tensor<128x128x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.1.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.1.conv1.bias"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.1.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.1.norm2.weight"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.1.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.1.norm2.bias"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.1.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.1.conv2.weight"> : tensor<128x128x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.1.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.1.conv2.bias"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.2.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.2.norm1.weight"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.2.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.2.norm1.bias"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.2.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.2.conv1.weight"> : tensor<128x128x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.2.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.2.conv1.bias"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.2.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.2.norm2.weight"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.2.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.2.norm2.bias"> : tensor<128xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.2.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.2.conv2.weight"> : tensor<128x128x3x3xf16>
  util.global private @_params.vae.decoder.up_blocks.3.resnets.2.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.up_blocks.3.resnets.2.conv2.bias"> : tensor<128xf16>
  util.global private @_params.vae.decoder.mid_block.attentions.0.group_norm.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.attentions.0.group_norm.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.attentions.0.group_norm.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.attentions.0.group_norm.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.attentions.0.to_q.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.attentions.0.to_q.weight"> : tensor<512x512xf16>
  util.global private @_params.vae.decoder.mid_block.attentions.0.to_q.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.attentions.0.to_q.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.attentions.0.to_k.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.attentions.0.to_k.weight"> : tensor<512x512xf16>
  util.global private @_params.vae.decoder.mid_block.attentions.0.to_k.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.attentions.0.to_k.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.attentions.0.to_v.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.attentions.0.to_v.weight"> : tensor<512x512xf16>
  util.global private @_params.vae.decoder.mid_block.attentions.0.to_v.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.attentions.0.to_v.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.attentions.0.to_out.0.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.attentions.0.to_out.0.weight"> : tensor<512x512xf16>
  util.global private @_params.vae.decoder.mid_block.attentions.0.to_out.0.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.attentions.0.to_out.0.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.0.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.0.norm1.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.0.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.0.norm1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.0.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.0.conv1.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.0.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.0.conv1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.0.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.0.norm2.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.0.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.0.norm2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.0.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.0.conv2.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.0.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.0.conv2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.1.norm1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.1.norm1.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.1.norm1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.1.norm1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.1.conv1.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.1.conv1.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.1.conv1.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.1.conv1.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.1.norm2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.1.norm2.weight"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.1.norm2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.1.norm2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.1.conv2.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.1.conv2.weight"> : tensor<512x512x3x3xf16>
  util.global private @_params.vae.decoder.mid_block.resnets.1.conv2.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.mid_block.resnets.1.conv2.bias"> : tensor<512xf16>
  util.global private @_params.vae.decoder.conv_norm_out.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.conv_norm_out.weight"> : tensor<128xf16>
  util.global private @_params.vae.decoder.conv_norm_out.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.conv_norm_out.bias"> : tensor<128xf16>
  util.global private @_params.vae.decoder.conv_out.weight {noinline} = #stream.parameter.named<"model"::"vae.decoder.conv_out.weight"> : tensor<3x128x3x3xf16>
  util.global private @_params.vae.decoder.conv_out.bias {noinline} = #stream.parameter.named<"model"::"vae.decoder.conv_out.bias"> : tensor<3xf16>
  util.global private @_params.vae.quant_conv.weight {noinline} = #stream.parameter.named<"model"::"vae.quant_conv.weight"> : tensor<8x8x1x1xf16>
  util.global private @_params.vae.quant_conv.bias {noinline} = #stream.parameter.named<"model"::"vae.quant_conv.bias"> : tensor<8xf16>
  util.global private @_params.vae.post_quant_conv.weight {noinline} = #stream.parameter.named<"model"::"vae.post_quant_conv.weight"> : tensor<4x4x1x1xf16>
  util.global private @_params.vae.post_quant_conv.bias {noinline} = #stream.parameter.named<"model"::"vae.post_quant_conv.bias"> : tensor<4xf16>
  func.func @main(%arg0: tensor<1x4x128x128xf16>) -> tensor<1x3x1024x1024xf16> attributes {torch.args_schema = "[1, {\22type\22: \22builtins.tuple\22, \22context\22: \22null\22, \22children_spec\22: [{\22type\22: \22builtins.list\22, \22context\22: \22null\22, \22children_spec\22: [{\22type\22: null, \22context\22: null, \22children_spec\22: []}]}, {\22type\22: \22builtins.dict\22, \22context\22: \22[]\22, \22children_spec\22: []}]}]", torch.return_schema = "[1, {\22type\22: null, \22context\22: null, \22children_spec\22: []}]"} {
    %0 = torch_c.from_builtin_tensor %arg0 : tensor<1x4x128x128xf16> -> !torch.vtensor<[1,4,128,128],f16>
    %1 = call @decode_inp(%0) : (!torch.vtensor<[1,4,128,128],f16>) -> !torch.vtensor<[1,3,1024,1024],f16>
    %2 = torch_c.to_builtin_tensor %1 : !torch.vtensor<[1,3,1024,1024],f16> -> tensor<1x3x1024x1024xf16>
    return %2 : tensor<1x3x1024x1024xf16>
  }
  func.func private @decode_inp(%arg0: !torch.vtensor<[1,4,128,128],f16>) -> !torch.vtensor<[1,3,1024,1024],f16> {
    %float7.677540e00 = torch.constant.float 7.6775431861804221
    %0 = torch.aten.mul.Scalar %arg0, %float7.677540e00 : !torch.vtensor<[1,4,128,128],f16>, !torch.float -> !torch.vtensor<[1,4,128,128],f16>
    %_params.vae.post_quant_conv.weight = util.global.load @_params.vae.post_quant_conv.weight : tensor<4x4x1x1xf16>
    %1 = torch_c.from_builtin_tensor %_params.vae.post_quant_conv.weight : tensor<4x4x1x1xf16> -> !torch.vtensor<[4,4,1,1],f16>
    %_params.vae.post_quant_conv.bias = util.global.load @_params.vae.post_quant_conv.bias : tensor<4xf16>
    %2 = torch_c.from_builtin_tensor %_params.vae.post_quant_conv.bias : tensor<4xf16> -> !torch.vtensor<[4],f16>
    %int1 = torch.constant.int 1
    %int1_0 = torch.constant.int 1
    %3 = torch.prim.ListConstruct %int1, %int1_0 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0 = torch.constant.int 0
    %int0_1 = torch.constant.int 0
    %4 = torch.prim.ListConstruct %int0, %int0_1 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_2 = torch.constant.int 1
    %int1_3 = torch.constant.int 1
    %5 = torch.prim.ListConstruct %int1_2, %int1_3 : (!torch.int, !torch.int) -> !torch.list<int>
    %false = torch.constant.bool false
    %int0_4 = torch.constant.int 0
    %int0_5 = torch.constant.int 0
    %6 = torch.prim.ListConstruct %int0_4, %int0_5 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_6 = torch.constant.int 1
    %7 = torch.aten.convolution %0, %1, %2, %3, %4, %5, %false, %6, %int1_6 : !torch.vtensor<[1,4,128,128],f16>, !torch.vtensor<[4,4,1,1],f16>, !torch.vtensor<[4],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,4,128,128],f16>
    %_params.vae.decoder.conv_in.weight = util.global.load @_params.vae.decoder.conv_in.weight : tensor<512x4x3x3xf16>
    %8 = torch_c.from_builtin_tensor %_params.vae.decoder.conv_in.weight : tensor<512x4x3x3xf16> -> !torch.vtensor<[512,4,3,3],f16>
    %_params.vae.decoder.conv_in.bias = util.global.load @_params.vae.decoder.conv_in.bias : tensor<512xf16>
    %9 = torch_c.from_builtin_tensor %_params.vae.decoder.conv_in.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_7 = torch.constant.int 1
    %int1_8 = torch.constant.int 1
    %10 = torch.prim.ListConstruct %int1_7, %int1_8 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_9 = torch.constant.int 1
    %int1_10 = torch.constant.int 1
    %11 = torch.prim.ListConstruct %int1_9, %int1_10 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_11 = torch.constant.int 1
    %int1_12 = torch.constant.int 1
    %12 = torch.prim.ListConstruct %int1_11, %int1_12 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_13 = torch.constant.bool false
    %int0_14 = torch.constant.int 0
    %int0_15 = torch.constant.int 0
    %13 = torch.prim.ListConstruct %int0_14, %int0_15 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_16 = torch.constant.int 1
    %14 = torch.aten.convolution %7, %8, %9, %10, %11, %12, %false_13, %13, %int1_16 : !torch.vtensor<[1,4,128,128],f16>, !torch.vtensor<[512,4,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_17 = torch.constant.int 1
    %int32 = torch.constant.int 32
    %int16 = torch.constant.int 16
    %int16384 = torch.constant.int 16384
    %15 = torch.prim.ListConstruct %int1_17, %int32, %int16, %int16384 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %16 = torch.aten.view %14, %15 : !torch.vtensor<[1,512,128,128],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,16384],f16>
    %int6 = torch.constant.int 6
    %17 = torch.prims.convert_element_type %16, %int6 : !torch.vtensor<[1,32,16,16384],f16>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %int2 = torch.constant.int 2
    %int3 = torch.constant.int 3
    %18 = torch.prim.ListConstruct %int2, %int3 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_18 = torch.constant.int 0
    %true = torch.constant.bool true
    %result0, %result1 = torch.aten.var_mean.correction %17, %18, %int0_18, %true : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07 = torch.constant.float 9.9999999999999995E-7
    %int1_19 = torch.constant.int 1
    %19 = torch.aten.add.Scalar %result0, %float9.999990e-07, %int1_19 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %20 = torch.aten.rsqrt %19 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_20 = torch.constant.int 1
    %21 = torch.aten.sub.Tensor %16, %result1, %int1_20 : !torch.vtensor<[1,32,16,16384],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %22 = torch.aten.mul.Tensor %21, %20 : !torch.vtensor<[1,32,16,16384],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,16384],f32>
    %int1_21 = torch.constant.int 1
    %int512 = torch.constant.int 512
    %int128 = torch.constant.int 128
    %int128_22 = torch.constant.int 128
    %23 = torch.prim.ListConstruct %int1_21, %int512, %int128, %int128_22 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %24 = torch.aten.view %22, %23 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int> -> !torch.vtensor<[1,512,128,128],f32>
    %_params.vae.decoder.mid_block.resnets.0.norm1.bias = util.global.load @_params.vae.decoder.mid_block.resnets.0.norm1.bias : tensor<512xf16>
    %25 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.0.norm1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_23 = torch.constant.int 0
    %26 = torch.aten.unsqueeze %25, %int0_23 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_24 = torch.constant.int 2
    %27 = torch.aten.unsqueeze %26, %int2_24 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_25 = torch.constant.int 3
    %28 = torch.aten.unsqueeze %27, %int3_25 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.mid_block.resnets.0.norm1.weight = util.global.load @_params.vae.decoder.mid_block.resnets.0.norm1.weight : tensor<512xf16>
    %29 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.0.norm1.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_26 = torch.constant.int 0
    %30 = torch.aten.unsqueeze %29, %int0_26 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_27 = torch.constant.int 2
    %31 = torch.aten.unsqueeze %30, %int2_27 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_28 = torch.constant.int 3
    %32 = torch.aten.unsqueeze %31, %int3_28 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %33 = torch.aten.mul.Tensor %24, %32 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,128,128],f32>
    %int1_29 = torch.constant.int 1
    %34 = torch.aten.add.Tensor %33, %28, %int1_29 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f32>
    %int5 = torch.constant.int 5
    %35 = torch.prims.convert_element_type %34, %int5 : !torch.vtensor<[1,512,128,128],f32>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int5_30 = torch.constant.int 5
    %36 = torch.prims.convert_element_type %result1, %int5_30 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_31 = torch.constant.int 5
    %37 = torch.prims.convert_element_type %20, %int5_31 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_32 = torch.constant.int 3
    %38 = torch.prim.ListConstruct %int3_32 : (!torch.int) -> !torch.list<int>
    %39 = torch.prims.squeeze %36, %38 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_33 = torch.constant.int 2
    %40 = torch.prim.ListConstruct %int2_33 : (!torch.int) -> !torch.list<int>
    %41 = torch.prims.squeeze %39, %40 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_34 = torch.constant.int 3
    %42 = torch.prim.ListConstruct %int3_34 : (!torch.int) -> !torch.list<int>
    %43 = torch.prims.squeeze %37, %42 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_35 = torch.constant.int 2
    %44 = torch.prim.ListConstruct %int2_35 : (!torch.int) -> !torch.list<int>
    %45 = torch.prims.squeeze %43, %44 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %46 = torch.aten.detach %41 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %47 = torch.aten.detach %45 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %48 = torch.aten.silu %35 : !torch.vtensor<[1,512,128,128],f16> -> !torch.vtensor<[1,512,128,128],f16>
    %_params.vae.decoder.mid_block.resnets.0.conv1.weight = util.global.load @_params.vae.decoder.mid_block.resnets.0.conv1.weight : tensor<512x512x3x3xf16>
    %49 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.0.conv1.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.mid_block.resnets.0.conv1.bias = util.global.load @_params.vae.decoder.mid_block.resnets.0.conv1.bias : tensor<512xf16>
    %50 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.0.conv1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_36 = torch.constant.int 1
    %int1_37 = torch.constant.int 1
    %51 = torch.prim.ListConstruct %int1_36, %int1_37 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_38 = torch.constant.int 1
    %int1_39 = torch.constant.int 1
    %52 = torch.prim.ListConstruct %int1_38, %int1_39 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_40 = torch.constant.int 1
    %int1_41 = torch.constant.int 1
    %53 = torch.prim.ListConstruct %int1_40, %int1_41 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_42 = torch.constant.bool false
    %int0_43 = torch.constant.int 0
    %int0_44 = torch.constant.int 0
    %54 = torch.prim.ListConstruct %int0_43, %int0_44 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_45 = torch.constant.int 1
    %55 = torch.aten.convolution %48, %49, %50, %51, %52, %53, %false_42, %54, %int1_45 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_46 = torch.constant.int 1
    %int32_47 = torch.constant.int 32
    %int16_48 = torch.constant.int 16
    %int16384_49 = torch.constant.int 16384
    %56 = torch.prim.ListConstruct %int1_46, %int32_47, %int16_48, %int16384_49 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %57 = torch.aten.view %55, %56 : !torch.vtensor<[1,512,128,128],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,16384],f16>
    %int6_50 = torch.constant.int 6
    %58 = torch.prims.convert_element_type %57, %int6_50 : !torch.vtensor<[1,32,16,16384],f16>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %int2_51 = torch.constant.int 2
    %int3_52 = torch.constant.int 3
    %59 = torch.prim.ListConstruct %int2_51, %int3_52 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_53 = torch.constant.int 0
    %true_54 = torch.constant.bool true
    %result0_55, %result1_56 = torch.aten.var_mean.correction %58, %59, %int0_53, %true_54 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_57 = torch.constant.float 9.9999999999999995E-7
    %int1_58 = torch.constant.int 1
    %60 = torch.aten.add.Scalar %result0_55, %float9.999990e-07_57, %int1_58 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %61 = torch.aten.rsqrt %60 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_59 = torch.constant.int 1
    %62 = torch.aten.sub.Tensor %57, %result1_56, %int1_59 : !torch.vtensor<[1,32,16,16384],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %63 = torch.aten.mul.Tensor %62, %61 : !torch.vtensor<[1,32,16,16384],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,16384],f32>
    %int1_60 = torch.constant.int 1
    %int512_61 = torch.constant.int 512
    %int128_62 = torch.constant.int 128
    %int128_63 = torch.constant.int 128
    %64 = torch.prim.ListConstruct %int1_60, %int512_61, %int128_62, %int128_63 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %65 = torch.aten.view %63, %64 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int> -> !torch.vtensor<[1,512,128,128],f32>
    %_params.vae.decoder.mid_block.resnets.0.norm2.bias = util.global.load @_params.vae.decoder.mid_block.resnets.0.norm2.bias : tensor<512xf16>
    %66 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.0.norm2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_64 = torch.constant.int 0
    %67 = torch.aten.unsqueeze %66, %int0_64 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_65 = torch.constant.int 2
    %68 = torch.aten.unsqueeze %67, %int2_65 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_66 = torch.constant.int 3
    %69 = torch.aten.unsqueeze %68, %int3_66 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.mid_block.resnets.0.norm2.weight = util.global.load @_params.vae.decoder.mid_block.resnets.0.norm2.weight : tensor<512xf16>
    %70 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.0.norm2.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_67 = torch.constant.int 0
    %71 = torch.aten.unsqueeze %70, %int0_67 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_68 = torch.constant.int 2
    %72 = torch.aten.unsqueeze %71, %int2_68 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_69 = torch.constant.int 3
    %73 = torch.aten.unsqueeze %72, %int3_69 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %74 = torch.aten.mul.Tensor %65, %73 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,128,128],f32>
    %int1_70 = torch.constant.int 1
    %75 = torch.aten.add.Tensor %74, %69, %int1_70 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f32>
    %int5_71 = torch.constant.int 5
    %76 = torch.prims.convert_element_type %75, %int5_71 : !torch.vtensor<[1,512,128,128],f32>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int5_72 = torch.constant.int 5
    %77 = torch.prims.convert_element_type %result1_56, %int5_72 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_73 = torch.constant.int 5
    %78 = torch.prims.convert_element_type %61, %int5_73 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_74 = torch.constant.int 3
    %79 = torch.prim.ListConstruct %int3_74 : (!torch.int) -> !torch.list<int>
    %80 = torch.prims.squeeze %77, %79 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_75 = torch.constant.int 2
    %81 = torch.prim.ListConstruct %int2_75 : (!torch.int) -> !torch.list<int>
    %82 = torch.prims.squeeze %80, %81 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_76 = torch.constant.int 3
    %83 = torch.prim.ListConstruct %int3_76 : (!torch.int) -> !torch.list<int>
    %84 = torch.prims.squeeze %78, %83 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_77 = torch.constant.int 2
    %85 = torch.prim.ListConstruct %int2_77 : (!torch.int) -> !torch.list<int>
    %86 = torch.prims.squeeze %84, %85 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %87 = torch.aten.detach %82 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %88 = torch.aten.detach %86 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %89 = torch.aten.silu %76 : !torch.vtensor<[1,512,128,128],f16> -> !torch.vtensor<[1,512,128,128],f16>
    %none = torch.constant.none
    %90 = torch.aten.clone %89, %none : !torch.vtensor<[1,512,128,128],f16>, !torch.none -> !torch.vtensor<[1,512,128,128],f16>
    %_params.vae.decoder.mid_block.resnets.0.conv2.weight = util.global.load @_params.vae.decoder.mid_block.resnets.0.conv2.weight : tensor<512x512x3x3xf16>
    %91 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.0.conv2.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.mid_block.resnets.0.conv2.bias = util.global.load @_params.vae.decoder.mid_block.resnets.0.conv2.bias : tensor<512xf16>
    %92 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.0.conv2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_78 = torch.constant.int 1
    %int1_79 = torch.constant.int 1
    %93 = torch.prim.ListConstruct %int1_78, %int1_79 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_80 = torch.constant.int 1
    %int1_81 = torch.constant.int 1
    %94 = torch.prim.ListConstruct %int1_80, %int1_81 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_82 = torch.constant.int 1
    %int1_83 = torch.constant.int 1
    %95 = torch.prim.ListConstruct %int1_82, %int1_83 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_84 = torch.constant.bool false
    %int0_85 = torch.constant.int 0
    %int0_86 = torch.constant.int 0
    %96 = torch.prim.ListConstruct %int0_85, %int0_86 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_87 = torch.constant.int 1
    %97 = torch.aten.convolution %90, %91, %92, %93, %94, %95, %false_84, %96, %int1_87 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_88 = torch.constant.int 1
    %98 = torch.aten.add.Tensor %14, %97, %int1_88 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_89 = torch.constant.int 1
    %99 = torch.aten.div.Scalar %98, %int1_89 : !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_90 = torch.constant.int 1
    %int512_91 = torch.constant.int 512
    %int16384_92 = torch.constant.int 16384
    %100 = torch.prim.ListConstruct %int1_90, %int512_91, %int16384_92 : (!torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %101 = torch.aten.view %99, %100 : !torch.vtensor<[1,512,128,128],f16>, !torch.list<int> -> !torch.vtensor<[1,512,16384],f16>
    %int1_93 = torch.constant.int 1
    %int2_94 = torch.constant.int 2
    %102 = torch.aten.transpose.int %101, %int1_93, %int2_94 : !torch.vtensor<[1,512,16384],f16>, !torch.int, !torch.int -> !torch.vtensor<[1,16384,512],f16>
    %int1_95 = torch.constant.int 1
    %int2_96 = torch.constant.int 2
    %103 = torch.aten.transpose.int %102, %int1_95, %int2_96 : !torch.vtensor<[1,16384,512],f16>, !torch.int, !torch.int -> !torch.vtensor<[1,512,16384],f16>
    %int1_97 = torch.constant.int 1
    %int32_98 = torch.constant.int 32
    %int16_99 = torch.constant.int 16
    %int16384_100 = torch.constant.int 16384
    %104 = torch.prim.ListConstruct %int1_97, %int32_98, %int16_99, %int16384_100 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %105 = torch.aten.view %103, %104 : !torch.vtensor<[1,512,16384],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,16384],f16>
    %int6_101 = torch.constant.int 6
    %106 = torch.prims.convert_element_type %105, %int6_101 : !torch.vtensor<[1,32,16,16384],f16>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %int2_102 = torch.constant.int 2
    %int3_103 = torch.constant.int 3
    %107 = torch.prim.ListConstruct %int2_102, %int3_103 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_104 = torch.constant.int 0
    %true_105 = torch.constant.bool true
    %result0_106, %result1_107 = torch.aten.var_mean.correction %106, %107, %int0_104, %true_105 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_108 = torch.constant.float 9.9999999999999995E-7
    %int1_109 = torch.constant.int 1
    %108 = torch.aten.add.Scalar %result0_106, %float9.999990e-07_108, %int1_109 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %109 = torch.aten.rsqrt %108 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_110 = torch.constant.int 1
    %110 = torch.aten.sub.Tensor %105, %result1_107, %int1_110 : !torch.vtensor<[1,32,16,16384],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %111 = torch.aten.mul.Tensor %110, %109 : !torch.vtensor<[1,32,16,16384],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,16384],f32>
    %int1_111 = torch.constant.int 1
    %int512_112 = torch.constant.int 512
    %int16384_113 = torch.constant.int 16384
    %112 = torch.prim.ListConstruct %int1_111, %int512_112, %int16384_113 : (!torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %113 = torch.aten.view %111, %112 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int> -> !torch.vtensor<[1,512,16384],f32>
    %_params.vae.decoder.mid_block.attentions.0.group_norm.bias = util.global.load @_params.vae.decoder.mid_block.attentions.0.group_norm.bias : tensor<512xf16>
    %114 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.attentions.0.group_norm.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_114 = torch.constant.int 0
    %115 = torch.aten.unsqueeze %114, %int0_114 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_115 = torch.constant.int 2
    %116 = torch.aten.unsqueeze %115, %int2_115 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %_params.vae.decoder.mid_block.attentions.0.group_norm.weight = util.global.load @_params.vae.decoder.mid_block.attentions.0.group_norm.weight : tensor<512xf16>
    %117 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.attentions.0.group_norm.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_116 = torch.constant.int 0
    %118 = torch.aten.unsqueeze %117, %int0_116 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_117 = torch.constant.int 2
    %119 = torch.aten.unsqueeze %118, %int2_117 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %120 = torch.aten.mul.Tensor %113, %119 : !torch.vtensor<[1,512,16384],f32>, !torch.vtensor<[1,512,1],f16> -> !torch.vtensor<[1,512,16384],f32>
    %int1_118 = torch.constant.int 1
    %121 = torch.aten.add.Tensor %120, %116, %int1_118 : !torch.vtensor<[1,512,16384],f32>, !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,16384],f32>
    %int5_119 = torch.constant.int 5
    %122 = torch.prims.convert_element_type %121, %int5_119 : !torch.vtensor<[1,512,16384],f32>, !torch.int -> !torch.vtensor<[1,512,16384],f16>
    %int5_120 = torch.constant.int 5
    %123 = torch.prims.convert_element_type %result1_107, %int5_120 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_121 = torch.constant.int 5
    %124 = torch.prims.convert_element_type %109, %int5_121 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_122 = torch.constant.int 3
    %125 = torch.prim.ListConstruct %int3_122 : (!torch.int) -> !torch.list<int>
    %126 = torch.prims.squeeze %123, %125 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_123 = torch.constant.int 2
    %127 = torch.prim.ListConstruct %int2_123 : (!torch.int) -> !torch.list<int>
    %128 = torch.prims.squeeze %126, %127 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_124 = torch.constant.int 3
    %129 = torch.prim.ListConstruct %int3_124 : (!torch.int) -> !torch.list<int>
    %130 = torch.prims.squeeze %124, %129 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_125 = torch.constant.int 2
    %131 = torch.prim.ListConstruct %int2_125 : (!torch.int) -> !torch.list<int>
    %132 = torch.prims.squeeze %130, %131 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %133 = torch.aten.detach %128 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %134 = torch.aten.detach %132 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %int1_126 = torch.constant.int 1
    %int2_127 = torch.constant.int 2
    %135 = torch.aten.transpose.int %122, %int1_126, %int2_127 : !torch.vtensor<[1,512,16384],f16>, !torch.int, !torch.int -> !torch.vtensor<[1,16384,512],f16>
    %_params.vae.decoder.mid_block.attentions.0.to_q.weight = util.global.load @_params.vae.decoder.mid_block.attentions.0.to_q.weight : tensor<512x512xf16>
    %136 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.attentions.0.to_q.weight : tensor<512x512xf16> -> !torch.vtensor<[512,512],f16>
    %int0_128 = torch.constant.int 0
    %int1_129 = torch.constant.int 1
    %137 = torch.aten.transpose.int %136, %int0_128, %int1_129 : !torch.vtensor<[512,512],f16>, !torch.int, !torch.int -> !torch.vtensor<[512,512],f16>
    %int16384_130 = torch.constant.int 16384
    %int512_131 = torch.constant.int 512
    %138 = torch.prim.ListConstruct %int16384_130, %int512_131 : (!torch.int, !torch.int) -> !torch.list<int>
    %139 = torch.aten.view %135, %138 : !torch.vtensor<[1,16384,512],f16>, !torch.list<int> -> !torch.vtensor<[16384,512],f16>
    %140 = torch.aten.mm %139, %137 : !torch.vtensor<[16384,512],f16>, !torch.vtensor<[512,512],f16> -> !torch.vtensor<[16384,512],f16>
    %int1_132 = torch.constant.int 1
    %int16384_133 = torch.constant.int 16384
    %int512_134 = torch.constant.int 512
    %141 = torch.prim.ListConstruct %int1_132, %int16384_133, %int512_134 : (!torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %142 = torch.aten.view %140, %141 : !torch.vtensor<[16384,512],f16>, !torch.list<int> -> !torch.vtensor<[1,16384,512],f16>
    %_params.vae.decoder.mid_block.attentions.0.to_q.bias = util.global.load @_params.vae.decoder.mid_block.attentions.0.to_q.bias : tensor<512xf16>
    %143 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.attentions.0.to_q.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_135 = torch.constant.int 1
    %144 = torch.aten.add.Tensor %142, %143, %int1_135 : !torch.vtensor<[1,16384,512],f16>, !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,16384,512],f16>
    %_params.vae.decoder.mid_block.attentions.0.to_k.weight = util.global.load @_params.vae.decoder.mid_block.attentions.0.to_k.weight : tensor<512x512xf16>
    %145 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.attentions.0.to_k.weight : tensor<512x512xf16> -> !torch.vtensor<[512,512],f16>
    %int0_136 = torch.constant.int 0
    %int1_137 = torch.constant.int 1
    %146 = torch.aten.transpose.int %145, %int0_136, %int1_137 : !torch.vtensor<[512,512],f16>, !torch.int, !torch.int -> !torch.vtensor<[512,512],f16>
    %int16384_138 = torch.constant.int 16384
    %int512_139 = torch.constant.int 512
    %147 = torch.prim.ListConstruct %int16384_138, %int512_139 : (!torch.int, !torch.int) -> !torch.list<int>
    %148 = torch.aten.view %135, %147 : !torch.vtensor<[1,16384,512],f16>, !torch.list<int> -> !torch.vtensor<[16384,512],f16>
    %149 = torch.aten.mm %148, %146 : !torch.vtensor<[16384,512],f16>, !torch.vtensor<[512,512],f16> -> !torch.vtensor<[16384,512],f16>
    %int1_140 = torch.constant.int 1
    %int16384_141 = torch.constant.int 16384
    %int512_142 = torch.constant.int 512
    %150 = torch.prim.ListConstruct %int1_140, %int16384_141, %int512_142 : (!torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %151 = torch.aten.view %149, %150 : !torch.vtensor<[16384,512],f16>, !torch.list<int> -> !torch.vtensor<[1,16384,512],f16>
    %_params.vae.decoder.mid_block.attentions.0.to_k.bias = util.global.load @_params.vae.decoder.mid_block.attentions.0.to_k.bias : tensor<512xf16>
    %152 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.attentions.0.to_k.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_143 = torch.constant.int 1
    %153 = torch.aten.add.Tensor %151, %152, %int1_143 : !torch.vtensor<[1,16384,512],f16>, !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,16384,512],f16>
    %_params.vae.decoder.mid_block.attentions.0.to_v.weight = util.global.load @_params.vae.decoder.mid_block.attentions.0.to_v.weight : tensor<512x512xf16>
    %154 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.attentions.0.to_v.weight : tensor<512x512xf16> -> !torch.vtensor<[512,512],f16>
    %int0_144 = torch.constant.int 0
    %int1_145 = torch.constant.int 1
    %155 = torch.aten.transpose.int %154, %int0_144, %int1_145 : !torch.vtensor<[512,512],f16>, !torch.int, !torch.int -> !torch.vtensor<[512,512],f16>
    %int16384_146 = torch.constant.int 16384
    %int512_147 = torch.constant.int 512
    %156 = torch.prim.ListConstruct %int16384_146, %int512_147 : (!torch.int, !torch.int) -> !torch.list<int>
    %157 = torch.aten.view %135, %156 : !torch.vtensor<[1,16384,512],f16>, !torch.list<int> -> !torch.vtensor<[16384,512],f16>
    %158 = torch.aten.mm %157, %155 : !torch.vtensor<[16384,512],f16>, !torch.vtensor<[512,512],f16> -> !torch.vtensor<[16384,512],f16>
    %int1_148 = torch.constant.int 1
    %int16384_149 = torch.constant.int 16384
    %int512_150 = torch.constant.int 512
    %159 = torch.prim.ListConstruct %int1_148, %int16384_149, %int512_150 : (!torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %160 = torch.aten.view %158, %159 : !torch.vtensor<[16384,512],f16>, !torch.list<int> -> !torch.vtensor<[1,16384,512],f16>
    %_params.vae.decoder.mid_block.attentions.0.to_v.bias = util.global.load @_params.vae.decoder.mid_block.attentions.0.to_v.bias : tensor<512xf16>
    %161 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.attentions.0.to_v.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_151 = torch.constant.int 1
    %162 = torch.aten.add.Tensor %160, %161, %int1_151 : !torch.vtensor<[1,16384,512],f16>, !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,16384,512],f16>
    %int1_152 = torch.constant.int 1
    %int-1 = torch.constant.int -1
    %int1_153 = torch.constant.int 1
    %int512_154 = torch.constant.int 512
    %163 = torch.prim.ListConstruct %int1_152, %int-1, %int1_153, %int512_154 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %164 = torch.aten.view %144, %163 : !torch.vtensor<[1,16384,512],f16>, !torch.list<int> -> !torch.vtensor<[1,16384,1,512],f16>
    %int1_155 = torch.constant.int 1
    %int2_156 = torch.constant.int 2
    %165 = torch.aten.transpose.int %164, %int1_155, %int2_156 : !torch.vtensor<[1,16384,1,512],f16>, !torch.int, !torch.int -> !torch.vtensor<[1,1,16384,512],f16>
    %int1_157 = torch.constant.int 1
    %int-1_158 = torch.constant.int -1
    %int1_159 = torch.constant.int 1
    %int512_160 = torch.constant.int 512
    %166 = torch.prim.ListConstruct %int1_157, %int-1_158, %int1_159, %int512_160 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %167 = torch.aten.view %153, %166 : !torch.vtensor<[1,16384,512],f16>, !torch.list<int> -> !torch.vtensor<[1,16384,1,512],f16>
    %int1_161 = torch.constant.int 1
    %int2_162 = torch.constant.int 2
    %168 = torch.aten.transpose.int %167, %int1_161, %int2_162 : !torch.vtensor<[1,16384,1,512],f16>, !torch.int, !torch.int -> !torch.vtensor<[1,1,16384,512],f16>
    %int1_163 = torch.constant.int 1
    %int-1_164 = torch.constant.int -1
    %int1_165 = torch.constant.int 1
    %int512_166 = torch.constant.int 512
    %169 = torch.prim.ListConstruct %int1_163, %int-1_164, %int1_165, %int512_166 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %170 = torch.aten.view %162, %169 : !torch.vtensor<[1,16384,512],f16>, !torch.list<int> -> !torch.vtensor<[1,16384,1,512],f16>
    %int1_167 = torch.constant.int 1
    %int2_168 = torch.constant.int 2
    %171 = torch.aten.transpose.int %170, %int1_167, %int2_168 : !torch.vtensor<[1,16384,1,512],f16>, !torch.int, !torch.int -> !torch.vtensor<[1,1,16384,512],f16>
    %float0.000000e00 = torch.constant.float 0.000000e+00
    %false_169 = torch.constant.bool false
    %none_170 = torch.constant.none
    %none_171 = torch.constant.none
    %172:2 = torch.operator "torch.aten._scaled_dot_product_flash_attention_for_cpu"(%165, %168, %171, %float0.000000e00, %false_169, %none_170, %none_171) : (!torch.vtensor<[1,1,16384,512],f16>, !torch.vtensor<[1,1,16384,512],f16>, !torch.vtensor<[1,1,16384,512],f16>, !torch.float, !torch.bool, !torch.none, !torch.none) -> (!torch.vtensor<[1,1,16384,512],f16>, !torch.vtensor<[1,1,16384],f32>)
    %173 = torch.aten.detach %172#0 : !torch.vtensor<[1,1,16384,512],f16> -> !torch.vtensor<[1,1,16384,512],f16>
    %int1_172 = torch.constant.int 1
    %int2_173 = torch.constant.int 2
    %174 = torch.aten.transpose.int %172#0, %int1_172, %int2_173 : !torch.vtensor<[1,1,16384,512],f16>, !torch.int, !torch.int -> !torch.vtensor<[1,16384,1,512],f16>
    %int1_174 = torch.constant.int 1
    %int-1_175 = torch.constant.int -1
    %int512_176 = torch.constant.int 512
    %175 = torch.prim.ListConstruct %int1_174, %int-1_175, %int512_176 : (!torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %176 = torch.aten.view %174, %175 : !torch.vtensor<[1,16384,1,512],f16>, !torch.list<int> -> !torch.vtensor<[1,16384,512],f16>
    %int16384_177 = torch.constant.int 16384
    %int512_178 = torch.constant.int 512
    %177 = torch.prim.ListConstruct %int16384_177, %int512_178 : (!torch.int, !torch.int) -> !torch.list<int>
    %178 = torch.aten.view %176, %177 : !torch.vtensor<[1,16384,512],f16>, !torch.list<int> -> !torch.vtensor<[16384,512],f16>
    %_params.vae.decoder.mid_block.attentions.0.to_out.0.weight = util.global.load @_params.vae.decoder.mid_block.attentions.0.to_out.0.weight : tensor<512x512xf16>
    %179 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.attentions.0.to_out.0.weight : tensor<512x512xf16> -> !torch.vtensor<[512,512],f16>
    %int0_179 = torch.constant.int 0
    %int1_180 = torch.constant.int 1
    %180 = torch.aten.transpose.int %179, %int0_179, %int1_180 : !torch.vtensor<[512,512],f16>, !torch.int, !torch.int -> !torch.vtensor<[512,512],f16>
    %_params.vae.decoder.mid_block.attentions.0.to_out.0.bias = util.global.load @_params.vae.decoder.mid_block.attentions.0.to_out.0.bias : tensor<512xf16>
    %181 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.attentions.0.to_out.0.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int6_181 = torch.constant.int 6
    %182 = torch.prims.convert_element_type %181, %int6_181 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[512],f32>
    %int6_182 = torch.constant.int 6
    %183 = torch.prims.convert_element_type %178, %int6_182 : !torch.vtensor<[16384,512],f16>, !torch.int -> !torch.vtensor<[16384,512],f32>
    %int6_183 = torch.constant.int 6
    %184 = torch.prims.convert_element_type %180, %int6_183 : !torch.vtensor<[512,512],f16>, !torch.int -> !torch.vtensor<[512,512],f32>
    %185 = torch.aten.mm %183, %184 : !torch.vtensor<[16384,512],f32>, !torch.vtensor<[512,512],f32> -> !torch.vtensor<[16384,512],f32>
    %int1_184 = torch.constant.int 1
    %186 = torch.aten.mul.Scalar %185, %int1_184 : !torch.vtensor<[16384,512],f32>, !torch.int -> !torch.vtensor<[16384,512],f32>
    %int1_185 = torch.constant.int 1
    %187 = torch.aten.mul.Scalar %182, %int1_185 : !torch.vtensor<[512],f32>, !torch.int -> !torch.vtensor<[512],f32>
    %int1_186 = torch.constant.int 1
    %188 = torch.aten.add.Tensor %186, %187, %int1_186 : !torch.vtensor<[16384,512],f32>, !torch.vtensor<[512],f32>, !torch.int -> !torch.vtensor<[16384,512],f32>
    %int5_187 = torch.constant.int 5
    %189 = torch.prims.convert_element_type %188, %int5_187 : !torch.vtensor<[16384,512],f32>, !torch.int -> !torch.vtensor<[16384,512],f16>
    %int1_188 = torch.constant.int 1
    %int16384_189 = torch.constant.int 16384
    %int512_190 = torch.constant.int 512
    %190 = torch.prim.ListConstruct %int1_188, %int16384_189, %int512_190 : (!torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %191 = torch.aten.view %189, %190 : !torch.vtensor<[16384,512],f16>, !torch.list<int> -> !torch.vtensor<[1,16384,512],f16>
    %none_191 = torch.constant.none
    %192 = torch.aten.clone %191, %none_191 : !torch.vtensor<[1,16384,512],f16>, !torch.none -> !torch.vtensor<[1,16384,512],f16>
    %int-1_192 = torch.constant.int -1
    %int-2 = torch.constant.int -2
    %193 = torch.aten.transpose.int %192, %int-1_192, %int-2 : !torch.vtensor<[1,16384,512],f16>, !torch.int, !torch.int -> !torch.vtensor<[1,512,16384],f16>
    %int1_193 = torch.constant.int 1
    %int512_194 = torch.constant.int 512
    %int128_195 = torch.constant.int 128
    %int128_196 = torch.constant.int 128
    %194 = torch.prim.ListConstruct %int1_193, %int512_194, %int128_195, %int128_196 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %195 = torch.aten.view %193, %194 : !torch.vtensor<[1,512,16384],f16>, !torch.list<int> -> !torch.vtensor<[1,512,128,128],f16>
    %int1_197 = torch.constant.int 1
    %196 = torch.aten.add.Tensor %195, %99, %int1_197 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_198 = torch.constant.int 1
    %197 = torch.aten.div.Scalar %196, %int1_198 : !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int2_199 = torch.constant.int 2
    %198 = torch.aten.clone %197, %int2_199 : !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_200 = torch.constant.int 1
    %int32_201 = torch.constant.int 32
    %int16_202 = torch.constant.int 16
    %int16384_203 = torch.constant.int 16384
    %199 = torch.prim.ListConstruct %int1_200, %int32_201, %int16_202, %int16384_203 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %200 = torch.aten.view %198, %199 : !torch.vtensor<[1,512,128,128],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,16384],f16>
    %int6_204 = torch.constant.int 6
    %201 = torch.prims.convert_element_type %200, %int6_204 : !torch.vtensor<[1,32,16,16384],f16>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %int2_205 = torch.constant.int 2
    %int3_206 = torch.constant.int 3
    %202 = torch.prim.ListConstruct %int2_205, %int3_206 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_207 = torch.constant.int 0
    %true_208 = torch.constant.bool true
    %result0_209, %result1_210 = torch.aten.var_mean.correction %201, %202, %int0_207, %true_208 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_211 = torch.constant.float 9.9999999999999995E-7
    %int1_212 = torch.constant.int 1
    %203 = torch.aten.add.Scalar %result0_209, %float9.999990e-07_211, %int1_212 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %204 = torch.aten.rsqrt %203 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_213 = torch.constant.int 1
    %205 = torch.aten.sub.Tensor %200, %result1_210, %int1_213 : !torch.vtensor<[1,32,16,16384],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %206 = torch.aten.mul.Tensor %205, %204 : !torch.vtensor<[1,32,16,16384],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,16384],f32>
    %int1_214 = torch.constant.int 1
    %int512_215 = torch.constant.int 512
    %int128_216 = torch.constant.int 128
    %int128_217 = torch.constant.int 128
    %207 = torch.prim.ListConstruct %int1_214, %int512_215, %int128_216, %int128_217 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %208 = torch.aten.view %206, %207 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int> -> !torch.vtensor<[1,512,128,128],f32>
    %_params.vae.decoder.mid_block.resnets.1.norm1.bias = util.global.load @_params.vae.decoder.mid_block.resnets.1.norm1.bias : tensor<512xf16>
    %209 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.1.norm1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_218 = torch.constant.int 0
    %210 = torch.aten.unsqueeze %209, %int0_218 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_219 = torch.constant.int 2
    %211 = torch.aten.unsqueeze %210, %int2_219 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_220 = torch.constant.int 3
    %212 = torch.aten.unsqueeze %211, %int3_220 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.mid_block.resnets.1.norm1.weight = util.global.load @_params.vae.decoder.mid_block.resnets.1.norm1.weight : tensor<512xf16>
    %213 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.1.norm1.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_221 = torch.constant.int 0
    %214 = torch.aten.unsqueeze %213, %int0_221 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_222 = torch.constant.int 2
    %215 = torch.aten.unsqueeze %214, %int2_222 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_223 = torch.constant.int 3
    %216 = torch.aten.unsqueeze %215, %int3_223 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %217 = torch.aten.mul.Tensor %208, %216 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,128,128],f32>
    %int1_224 = torch.constant.int 1
    %218 = torch.aten.add.Tensor %217, %212, %int1_224 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f32>
    %int5_225 = torch.constant.int 5
    %219 = torch.prims.convert_element_type %218, %int5_225 : !torch.vtensor<[1,512,128,128],f32>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int5_226 = torch.constant.int 5
    %220 = torch.prims.convert_element_type %result1_210, %int5_226 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_227 = torch.constant.int 5
    %221 = torch.prims.convert_element_type %204, %int5_227 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_228 = torch.constant.int 3
    %222 = torch.prim.ListConstruct %int3_228 : (!torch.int) -> !torch.list<int>
    %223 = torch.prims.squeeze %220, %222 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_229 = torch.constant.int 2
    %224 = torch.prim.ListConstruct %int2_229 : (!torch.int) -> !torch.list<int>
    %225 = torch.prims.squeeze %223, %224 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_230 = torch.constant.int 3
    %226 = torch.prim.ListConstruct %int3_230 : (!torch.int) -> !torch.list<int>
    %227 = torch.prims.squeeze %221, %226 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_231 = torch.constant.int 2
    %228 = torch.prim.ListConstruct %int2_231 : (!torch.int) -> !torch.list<int>
    %229 = torch.prims.squeeze %227, %228 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %230 = torch.aten.detach %225 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %231 = torch.aten.detach %229 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %232 = torch.aten.silu %219 : !torch.vtensor<[1,512,128,128],f16> -> !torch.vtensor<[1,512,128,128],f16>
    %_params.vae.decoder.mid_block.resnets.1.conv1.weight = util.global.load @_params.vae.decoder.mid_block.resnets.1.conv1.weight : tensor<512x512x3x3xf16>
    %233 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.1.conv1.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.mid_block.resnets.1.conv1.bias = util.global.load @_params.vae.decoder.mid_block.resnets.1.conv1.bias : tensor<512xf16>
    %234 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.1.conv1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_232 = torch.constant.int 1
    %int1_233 = torch.constant.int 1
    %235 = torch.prim.ListConstruct %int1_232, %int1_233 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_234 = torch.constant.int 1
    %int1_235 = torch.constant.int 1
    %236 = torch.prim.ListConstruct %int1_234, %int1_235 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_236 = torch.constant.int 1
    %int1_237 = torch.constant.int 1
    %237 = torch.prim.ListConstruct %int1_236, %int1_237 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_238 = torch.constant.bool false
    %int0_239 = torch.constant.int 0
    %int0_240 = torch.constant.int 0
    %238 = torch.prim.ListConstruct %int0_239, %int0_240 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_241 = torch.constant.int 1
    %239 = torch.aten.convolution %232, %233, %234, %235, %236, %237, %false_238, %238, %int1_241 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int2_242 = torch.constant.int 2
    %240 = torch.aten.clone %239, %int2_242 : !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_243 = torch.constant.int 1
    %int32_244 = torch.constant.int 32
    %int16_245 = torch.constant.int 16
    %int16384_246 = torch.constant.int 16384
    %241 = torch.prim.ListConstruct %int1_243, %int32_244, %int16_245, %int16384_246 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %242 = torch.aten.view %240, %241 : !torch.vtensor<[1,512,128,128],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,16384],f16>
    %int6_247 = torch.constant.int 6
    %243 = torch.prims.convert_element_type %242, %int6_247 : !torch.vtensor<[1,32,16,16384],f16>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %int2_248 = torch.constant.int 2
    %int3_249 = torch.constant.int 3
    %244 = torch.prim.ListConstruct %int2_248, %int3_249 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_250 = torch.constant.int 0
    %true_251 = torch.constant.bool true
    %result0_252, %result1_253 = torch.aten.var_mean.correction %243, %244, %int0_250, %true_251 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_254 = torch.constant.float 9.9999999999999995E-7
    %int1_255 = torch.constant.int 1
    %245 = torch.aten.add.Scalar %result0_252, %float9.999990e-07_254, %int1_255 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %246 = torch.aten.rsqrt %245 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_256 = torch.constant.int 1
    %247 = torch.aten.sub.Tensor %242, %result1_253, %int1_256 : !torch.vtensor<[1,32,16,16384],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %248 = torch.aten.mul.Tensor %247, %246 : !torch.vtensor<[1,32,16,16384],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,16384],f32>
    %int1_257 = torch.constant.int 1
    %int512_258 = torch.constant.int 512
    %int128_259 = torch.constant.int 128
    %int128_260 = torch.constant.int 128
    %249 = torch.prim.ListConstruct %int1_257, %int512_258, %int128_259, %int128_260 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %250 = torch.aten.view %248, %249 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int> -> !torch.vtensor<[1,512,128,128],f32>
    %_params.vae.decoder.mid_block.resnets.1.norm2.bias = util.global.load @_params.vae.decoder.mid_block.resnets.1.norm2.bias : tensor<512xf16>
    %251 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.1.norm2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_261 = torch.constant.int 0
    %252 = torch.aten.unsqueeze %251, %int0_261 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_262 = torch.constant.int 2
    %253 = torch.aten.unsqueeze %252, %int2_262 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_263 = torch.constant.int 3
    %254 = torch.aten.unsqueeze %253, %int3_263 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.mid_block.resnets.1.norm2.weight = util.global.load @_params.vae.decoder.mid_block.resnets.1.norm2.weight : tensor<512xf16>
    %255 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.1.norm2.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_264 = torch.constant.int 0
    %256 = torch.aten.unsqueeze %255, %int0_264 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_265 = torch.constant.int 2
    %257 = torch.aten.unsqueeze %256, %int2_265 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_266 = torch.constant.int 3
    %258 = torch.aten.unsqueeze %257, %int3_266 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %259 = torch.aten.mul.Tensor %250, %258 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,128,128],f32>
    %int1_267 = torch.constant.int 1
    %260 = torch.aten.add.Tensor %259, %254, %int1_267 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f32>
    %int5_268 = torch.constant.int 5
    %261 = torch.prims.convert_element_type %260, %int5_268 : !torch.vtensor<[1,512,128,128],f32>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int5_269 = torch.constant.int 5
    %262 = torch.prims.convert_element_type %result1_253, %int5_269 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_270 = torch.constant.int 5
    %263 = torch.prims.convert_element_type %246, %int5_270 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_271 = torch.constant.int 3
    %264 = torch.prim.ListConstruct %int3_271 : (!torch.int) -> !torch.list<int>
    %265 = torch.prims.squeeze %262, %264 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_272 = torch.constant.int 2
    %266 = torch.prim.ListConstruct %int2_272 : (!torch.int) -> !torch.list<int>
    %267 = torch.prims.squeeze %265, %266 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_273 = torch.constant.int 3
    %268 = torch.prim.ListConstruct %int3_273 : (!torch.int) -> !torch.list<int>
    %269 = torch.prims.squeeze %263, %268 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_274 = torch.constant.int 2
    %270 = torch.prim.ListConstruct %int2_274 : (!torch.int) -> !torch.list<int>
    %271 = torch.prims.squeeze %269, %270 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %272 = torch.aten.detach %267 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %273 = torch.aten.detach %271 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %274 = torch.aten.silu %261 : !torch.vtensor<[1,512,128,128],f16> -> !torch.vtensor<[1,512,128,128],f16>
    %none_275 = torch.constant.none
    %275 = torch.aten.clone %274, %none_275 : !torch.vtensor<[1,512,128,128],f16>, !torch.none -> !torch.vtensor<[1,512,128,128],f16>
    %_params.vae.decoder.mid_block.resnets.1.conv2.weight = util.global.load @_params.vae.decoder.mid_block.resnets.1.conv2.weight : tensor<512x512x3x3xf16>
    %276 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.1.conv2.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.mid_block.resnets.1.conv2.bias = util.global.load @_params.vae.decoder.mid_block.resnets.1.conv2.bias : tensor<512xf16>
    %277 = torch_c.from_builtin_tensor %_params.vae.decoder.mid_block.resnets.1.conv2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_276 = torch.constant.int 1
    %int1_277 = torch.constant.int 1
    %278 = torch.prim.ListConstruct %int1_276, %int1_277 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_278 = torch.constant.int 1
    %int1_279 = torch.constant.int 1
    %279 = torch.prim.ListConstruct %int1_278, %int1_279 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_280 = torch.constant.int 1
    %int1_281 = torch.constant.int 1
    %280 = torch.prim.ListConstruct %int1_280, %int1_281 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_282 = torch.constant.bool false
    %int0_283 = torch.constant.int 0
    %int0_284 = torch.constant.int 0
    %281 = torch.prim.ListConstruct %int0_283, %int0_284 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_285 = torch.constant.int 1
    %282 = torch.aten.convolution %275, %276, %277, %278, %279, %280, %false_282, %281, %int1_285 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_286 = torch.constant.int 1
    %283 = torch.aten.add.Tensor %197, %282, %int1_286 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_287 = torch.constant.int 1
    %284 = torch.aten.div.Scalar %283, %int1_287 : !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int2_288 = torch.constant.int 2
    %285 = torch.aten.clone %284, %int2_288 : !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_289 = torch.constant.int 1
    %int32_290 = torch.constant.int 32
    %int16_291 = torch.constant.int 16
    %int16384_292 = torch.constant.int 16384
    %286 = torch.prim.ListConstruct %int1_289, %int32_290, %int16_291, %int16384_292 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %287 = torch.aten.view %285, %286 : !torch.vtensor<[1,512,128,128],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,16384],f16>
    %int6_293 = torch.constant.int 6
    %288 = torch.prims.convert_element_type %287, %int6_293 : !torch.vtensor<[1,32,16,16384],f16>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %int2_294 = torch.constant.int 2
    %int3_295 = torch.constant.int 3
    %289 = torch.prim.ListConstruct %int2_294, %int3_295 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_296 = torch.constant.int 0
    %true_297 = torch.constant.bool true
    %result0_298, %result1_299 = torch.aten.var_mean.correction %288, %289, %int0_296, %true_297 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_300 = torch.constant.float 9.9999999999999995E-7
    %int1_301 = torch.constant.int 1
    %290 = torch.aten.add.Scalar %result0_298, %float9.999990e-07_300, %int1_301 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %291 = torch.aten.rsqrt %290 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_302 = torch.constant.int 1
    %292 = torch.aten.sub.Tensor %287, %result1_299, %int1_302 : !torch.vtensor<[1,32,16,16384],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %293 = torch.aten.mul.Tensor %292, %291 : !torch.vtensor<[1,32,16,16384],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,16384],f32>
    %int1_303 = torch.constant.int 1
    %int512_304 = torch.constant.int 512
    %int128_305 = torch.constant.int 128
    %int128_306 = torch.constant.int 128
    %294 = torch.prim.ListConstruct %int1_303, %int512_304, %int128_305, %int128_306 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %295 = torch.aten.view %293, %294 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int> -> !torch.vtensor<[1,512,128,128],f32>
    %_params.vae.decoder.up_blocks.0.resnets.0.norm1.bias = util.global.load @_params.vae.decoder.up_blocks.0.resnets.0.norm1.bias : tensor<512xf16>
    %296 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.0.norm1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_307 = torch.constant.int 0
    %297 = torch.aten.unsqueeze %296, %int0_307 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_308 = torch.constant.int 2
    %298 = torch.aten.unsqueeze %297, %int2_308 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_309 = torch.constant.int 3
    %299 = torch.aten.unsqueeze %298, %int3_309 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.up_blocks.0.resnets.0.norm1.weight = util.global.load @_params.vae.decoder.up_blocks.0.resnets.0.norm1.weight : tensor<512xf16>
    %300 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.0.norm1.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_310 = torch.constant.int 0
    %301 = torch.aten.unsqueeze %300, %int0_310 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_311 = torch.constant.int 2
    %302 = torch.aten.unsqueeze %301, %int2_311 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_312 = torch.constant.int 3
    %303 = torch.aten.unsqueeze %302, %int3_312 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %304 = torch.aten.mul.Tensor %295, %303 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,128,128],f32>
    %int1_313 = torch.constant.int 1
    %305 = torch.aten.add.Tensor %304, %299, %int1_313 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f32>
    %int5_314 = torch.constant.int 5
    %306 = torch.prims.convert_element_type %305, %int5_314 : !torch.vtensor<[1,512,128,128],f32>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int5_315 = torch.constant.int 5
    %307 = torch.prims.convert_element_type %result1_299, %int5_315 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_316 = torch.constant.int 5
    %308 = torch.prims.convert_element_type %291, %int5_316 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_317 = torch.constant.int 3
    %309 = torch.prim.ListConstruct %int3_317 : (!torch.int) -> !torch.list<int>
    %310 = torch.prims.squeeze %307, %309 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_318 = torch.constant.int 2
    %311 = torch.prim.ListConstruct %int2_318 : (!torch.int) -> !torch.list<int>
    %312 = torch.prims.squeeze %310, %311 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_319 = torch.constant.int 3
    %313 = torch.prim.ListConstruct %int3_319 : (!torch.int) -> !torch.list<int>
    %314 = torch.prims.squeeze %308, %313 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_320 = torch.constant.int 2
    %315 = torch.prim.ListConstruct %int2_320 : (!torch.int) -> !torch.list<int>
    %316 = torch.prims.squeeze %314, %315 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %317 = torch.aten.detach %312 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %318 = torch.aten.detach %316 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %319 = torch.aten.silu %306 : !torch.vtensor<[1,512,128,128],f16> -> !torch.vtensor<[1,512,128,128],f16>
    %_params.vae.decoder.up_blocks.0.resnets.0.conv1.weight = util.global.load @_params.vae.decoder.up_blocks.0.resnets.0.conv1.weight : tensor<512x512x3x3xf16>
    %320 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.0.conv1.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.up_blocks.0.resnets.0.conv1.bias = util.global.load @_params.vae.decoder.up_blocks.0.resnets.0.conv1.bias : tensor<512xf16>
    %321 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.0.conv1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_321 = torch.constant.int 1
    %int1_322 = torch.constant.int 1
    %322 = torch.prim.ListConstruct %int1_321, %int1_322 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_323 = torch.constant.int 1
    %int1_324 = torch.constant.int 1
    %323 = torch.prim.ListConstruct %int1_323, %int1_324 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_325 = torch.constant.int 1
    %int1_326 = torch.constant.int 1
    %324 = torch.prim.ListConstruct %int1_325, %int1_326 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_327 = torch.constant.bool false
    %int0_328 = torch.constant.int 0
    %int0_329 = torch.constant.int 0
    %325 = torch.prim.ListConstruct %int0_328, %int0_329 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_330 = torch.constant.int 1
    %326 = torch.aten.convolution %319, %320, %321, %322, %323, %324, %false_327, %325, %int1_330 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int2_331 = torch.constant.int 2
    %327 = torch.aten.clone %326, %int2_331 : !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_332 = torch.constant.int 1
    %int32_333 = torch.constant.int 32
    %int16_334 = torch.constant.int 16
    %int16384_335 = torch.constant.int 16384
    %328 = torch.prim.ListConstruct %int1_332, %int32_333, %int16_334, %int16384_335 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %329 = torch.aten.view %327, %328 : !torch.vtensor<[1,512,128,128],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,16384],f16>
    %int6_336 = torch.constant.int 6
    %330 = torch.prims.convert_element_type %329, %int6_336 : !torch.vtensor<[1,32,16,16384],f16>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %int2_337 = torch.constant.int 2
    %int3_338 = torch.constant.int 3
    %331 = torch.prim.ListConstruct %int2_337, %int3_338 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_339 = torch.constant.int 0
    %true_340 = torch.constant.bool true
    %result0_341, %result1_342 = torch.aten.var_mean.correction %330, %331, %int0_339, %true_340 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_343 = torch.constant.float 9.9999999999999995E-7
    %int1_344 = torch.constant.int 1
    %332 = torch.aten.add.Scalar %result0_341, %float9.999990e-07_343, %int1_344 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %333 = torch.aten.rsqrt %332 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_345 = torch.constant.int 1
    %334 = torch.aten.sub.Tensor %329, %result1_342, %int1_345 : !torch.vtensor<[1,32,16,16384],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %335 = torch.aten.mul.Tensor %334, %333 : !torch.vtensor<[1,32,16,16384],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,16384],f32>
    %int1_346 = torch.constant.int 1
    %int512_347 = torch.constant.int 512
    %int128_348 = torch.constant.int 128
    %int128_349 = torch.constant.int 128
    %336 = torch.prim.ListConstruct %int1_346, %int512_347, %int128_348, %int128_349 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %337 = torch.aten.view %335, %336 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int> -> !torch.vtensor<[1,512,128,128],f32>
    %_params.vae.decoder.up_blocks.0.resnets.0.norm2.bias = util.global.load @_params.vae.decoder.up_blocks.0.resnets.0.norm2.bias : tensor<512xf16>
    %338 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.0.norm2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_350 = torch.constant.int 0
    %339 = torch.aten.unsqueeze %338, %int0_350 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_351 = torch.constant.int 2
    %340 = torch.aten.unsqueeze %339, %int2_351 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_352 = torch.constant.int 3
    %341 = torch.aten.unsqueeze %340, %int3_352 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.up_blocks.0.resnets.0.norm2.weight = util.global.load @_params.vae.decoder.up_blocks.0.resnets.0.norm2.weight : tensor<512xf16>
    %342 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.0.norm2.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_353 = torch.constant.int 0
    %343 = torch.aten.unsqueeze %342, %int0_353 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_354 = torch.constant.int 2
    %344 = torch.aten.unsqueeze %343, %int2_354 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_355 = torch.constant.int 3
    %345 = torch.aten.unsqueeze %344, %int3_355 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %346 = torch.aten.mul.Tensor %337, %345 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,128,128],f32>
    %int1_356 = torch.constant.int 1
    %347 = torch.aten.add.Tensor %346, %341, %int1_356 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f32>
    %int5_357 = torch.constant.int 5
    %348 = torch.prims.convert_element_type %347, %int5_357 : !torch.vtensor<[1,512,128,128],f32>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int5_358 = torch.constant.int 5
    %349 = torch.prims.convert_element_type %result1_342, %int5_358 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_359 = torch.constant.int 5
    %350 = torch.prims.convert_element_type %333, %int5_359 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_360 = torch.constant.int 3
    %351 = torch.prim.ListConstruct %int3_360 : (!torch.int) -> !torch.list<int>
    %352 = torch.prims.squeeze %349, %351 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_361 = torch.constant.int 2
    %353 = torch.prim.ListConstruct %int2_361 : (!torch.int) -> !torch.list<int>
    %354 = torch.prims.squeeze %352, %353 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_362 = torch.constant.int 3
    %355 = torch.prim.ListConstruct %int3_362 : (!torch.int) -> !torch.list<int>
    %356 = torch.prims.squeeze %350, %355 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_363 = torch.constant.int 2
    %357 = torch.prim.ListConstruct %int2_363 : (!torch.int) -> !torch.list<int>
    %358 = torch.prims.squeeze %356, %357 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %359 = torch.aten.detach %354 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %360 = torch.aten.detach %358 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %361 = torch.aten.silu %348 : !torch.vtensor<[1,512,128,128],f16> -> !torch.vtensor<[1,512,128,128],f16>
    %none_364 = torch.constant.none
    %362 = torch.aten.clone %361, %none_364 : !torch.vtensor<[1,512,128,128],f16>, !torch.none -> !torch.vtensor<[1,512,128,128],f16>
    %_params.vae.decoder.up_blocks.0.resnets.0.conv2.weight = util.global.load @_params.vae.decoder.up_blocks.0.resnets.0.conv2.weight : tensor<512x512x3x3xf16>
    %363 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.0.conv2.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.up_blocks.0.resnets.0.conv2.bias = util.global.load @_params.vae.decoder.up_blocks.0.resnets.0.conv2.bias : tensor<512xf16>
    %364 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.0.conv2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_365 = torch.constant.int 1
    %int1_366 = torch.constant.int 1
    %365 = torch.prim.ListConstruct %int1_365, %int1_366 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_367 = torch.constant.int 1
    %int1_368 = torch.constant.int 1
    %366 = torch.prim.ListConstruct %int1_367, %int1_368 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_369 = torch.constant.int 1
    %int1_370 = torch.constant.int 1
    %367 = torch.prim.ListConstruct %int1_369, %int1_370 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_371 = torch.constant.bool false
    %int0_372 = torch.constant.int 0
    %int0_373 = torch.constant.int 0
    %368 = torch.prim.ListConstruct %int0_372, %int0_373 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_374 = torch.constant.int 1
    %369 = torch.aten.convolution %362, %363, %364, %365, %366, %367, %false_371, %368, %int1_374 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_375 = torch.constant.int 1
    %370 = torch.aten.add.Tensor %284, %369, %int1_375 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %float1.000000e00 = torch.constant.float 1.000000e+00
    %371 = torch.aten.div.Scalar %370, %float1.000000e00 : !torch.vtensor<[1,512,128,128],f16>, !torch.float -> !torch.vtensor<[1,512,128,128],f16>
    %int2_376 = torch.constant.int 2
    %372 = torch.aten.clone %371, %int2_376 : !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_377 = torch.constant.int 1
    %int32_378 = torch.constant.int 32
    %int16_379 = torch.constant.int 16
    %int16384_380 = torch.constant.int 16384
    %373 = torch.prim.ListConstruct %int1_377, %int32_378, %int16_379, %int16384_380 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %374 = torch.aten.view %372, %373 : !torch.vtensor<[1,512,128,128],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,16384],f16>
    %int6_381 = torch.constant.int 6
    %375 = torch.prims.convert_element_type %374, %int6_381 : !torch.vtensor<[1,32,16,16384],f16>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %int2_382 = torch.constant.int 2
    %int3_383 = torch.constant.int 3
    %376 = torch.prim.ListConstruct %int2_382, %int3_383 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_384 = torch.constant.int 0
    %true_385 = torch.constant.bool true
    %result0_386, %result1_387 = torch.aten.var_mean.correction %375, %376, %int0_384, %true_385 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_388 = torch.constant.float 9.9999999999999995E-7
    %int1_389 = torch.constant.int 1
    %377 = torch.aten.add.Scalar %result0_386, %float9.999990e-07_388, %int1_389 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %378 = torch.aten.rsqrt %377 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_390 = torch.constant.int 1
    %379 = torch.aten.sub.Tensor %374, %result1_387, %int1_390 : !torch.vtensor<[1,32,16,16384],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %380 = torch.aten.mul.Tensor %379, %378 : !torch.vtensor<[1,32,16,16384],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,16384],f32>
    %int1_391 = torch.constant.int 1
    %int512_392 = torch.constant.int 512
    %int128_393 = torch.constant.int 128
    %int128_394 = torch.constant.int 128
    %381 = torch.prim.ListConstruct %int1_391, %int512_392, %int128_393, %int128_394 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %382 = torch.aten.view %380, %381 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int> -> !torch.vtensor<[1,512,128,128],f32>
    %_params.vae.decoder.up_blocks.0.resnets.1.norm1.bias = util.global.load @_params.vae.decoder.up_blocks.0.resnets.1.norm1.bias : tensor<512xf16>
    %383 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.1.norm1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_395 = torch.constant.int 0
    %384 = torch.aten.unsqueeze %383, %int0_395 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_396 = torch.constant.int 2
    %385 = torch.aten.unsqueeze %384, %int2_396 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_397 = torch.constant.int 3
    %386 = torch.aten.unsqueeze %385, %int3_397 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.up_blocks.0.resnets.1.norm1.weight = util.global.load @_params.vae.decoder.up_blocks.0.resnets.1.norm1.weight : tensor<512xf16>
    %387 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.1.norm1.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_398 = torch.constant.int 0
    %388 = torch.aten.unsqueeze %387, %int0_398 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_399 = torch.constant.int 2
    %389 = torch.aten.unsqueeze %388, %int2_399 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_400 = torch.constant.int 3
    %390 = torch.aten.unsqueeze %389, %int3_400 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %391 = torch.aten.mul.Tensor %382, %390 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,128,128],f32>
    %int1_401 = torch.constant.int 1
    %392 = torch.aten.add.Tensor %391, %386, %int1_401 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f32>
    %int5_402 = torch.constant.int 5
    %393 = torch.prims.convert_element_type %392, %int5_402 : !torch.vtensor<[1,512,128,128],f32>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int5_403 = torch.constant.int 5
    %394 = torch.prims.convert_element_type %result1_387, %int5_403 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_404 = torch.constant.int 5
    %395 = torch.prims.convert_element_type %378, %int5_404 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_405 = torch.constant.int 3
    %396 = torch.prim.ListConstruct %int3_405 : (!torch.int) -> !torch.list<int>
    %397 = torch.prims.squeeze %394, %396 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_406 = torch.constant.int 2
    %398 = torch.prim.ListConstruct %int2_406 : (!torch.int) -> !torch.list<int>
    %399 = torch.prims.squeeze %397, %398 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_407 = torch.constant.int 3
    %400 = torch.prim.ListConstruct %int3_407 : (!torch.int) -> !torch.list<int>
    %401 = torch.prims.squeeze %395, %400 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_408 = torch.constant.int 2
    %402 = torch.prim.ListConstruct %int2_408 : (!torch.int) -> !torch.list<int>
    %403 = torch.prims.squeeze %401, %402 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %404 = torch.aten.detach %399 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %405 = torch.aten.detach %403 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %406 = torch.aten.silu %393 : !torch.vtensor<[1,512,128,128],f16> -> !torch.vtensor<[1,512,128,128],f16>
    %_params.vae.decoder.up_blocks.0.resnets.1.conv1.weight = util.global.load @_params.vae.decoder.up_blocks.0.resnets.1.conv1.weight : tensor<512x512x3x3xf16>
    %407 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.1.conv1.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.up_blocks.0.resnets.1.conv1.bias = util.global.load @_params.vae.decoder.up_blocks.0.resnets.1.conv1.bias : tensor<512xf16>
    %408 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.1.conv1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_409 = torch.constant.int 1
    %int1_410 = torch.constant.int 1
    %409 = torch.prim.ListConstruct %int1_409, %int1_410 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_411 = torch.constant.int 1
    %int1_412 = torch.constant.int 1
    %410 = torch.prim.ListConstruct %int1_411, %int1_412 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_413 = torch.constant.int 1
    %int1_414 = torch.constant.int 1
    %411 = torch.prim.ListConstruct %int1_413, %int1_414 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_415 = torch.constant.bool false
    %int0_416 = torch.constant.int 0
    %int0_417 = torch.constant.int 0
    %412 = torch.prim.ListConstruct %int0_416, %int0_417 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_418 = torch.constant.int 1
    %413 = torch.aten.convolution %406, %407, %408, %409, %410, %411, %false_415, %412, %int1_418 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int2_419 = torch.constant.int 2
    %414 = torch.aten.clone %413, %int2_419 : !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_420 = torch.constant.int 1
    %int32_421 = torch.constant.int 32
    %int16_422 = torch.constant.int 16
    %int16384_423 = torch.constant.int 16384
    %415 = torch.prim.ListConstruct %int1_420, %int32_421, %int16_422, %int16384_423 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %416 = torch.aten.view %414, %415 : !torch.vtensor<[1,512,128,128],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,16384],f16>
    %int6_424 = torch.constant.int 6
    %417 = torch.prims.convert_element_type %416, %int6_424 : !torch.vtensor<[1,32,16,16384],f16>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %int2_425 = torch.constant.int 2
    %int3_426 = torch.constant.int 3
    %418 = torch.prim.ListConstruct %int2_425, %int3_426 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_427 = torch.constant.int 0
    %true_428 = torch.constant.bool true
    %result0_429, %result1_430 = torch.aten.var_mean.correction %417, %418, %int0_427, %true_428 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_431 = torch.constant.float 9.9999999999999995E-7
    %int1_432 = torch.constant.int 1
    %419 = torch.aten.add.Scalar %result0_429, %float9.999990e-07_431, %int1_432 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %420 = torch.aten.rsqrt %419 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_433 = torch.constant.int 1
    %421 = torch.aten.sub.Tensor %416, %result1_430, %int1_433 : !torch.vtensor<[1,32,16,16384],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %422 = torch.aten.mul.Tensor %421, %420 : !torch.vtensor<[1,32,16,16384],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,16384],f32>
    %int1_434 = torch.constant.int 1
    %int512_435 = torch.constant.int 512
    %int128_436 = torch.constant.int 128
    %int128_437 = torch.constant.int 128
    %423 = torch.prim.ListConstruct %int1_434, %int512_435, %int128_436, %int128_437 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %424 = torch.aten.view %422, %423 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int> -> !torch.vtensor<[1,512,128,128],f32>
    %_params.vae.decoder.up_blocks.0.resnets.1.norm2.bias = util.global.load @_params.vae.decoder.up_blocks.0.resnets.1.norm2.bias : tensor<512xf16>
    %425 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.1.norm2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_438 = torch.constant.int 0
    %426 = torch.aten.unsqueeze %425, %int0_438 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_439 = torch.constant.int 2
    %427 = torch.aten.unsqueeze %426, %int2_439 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_440 = torch.constant.int 3
    %428 = torch.aten.unsqueeze %427, %int3_440 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.up_blocks.0.resnets.1.norm2.weight = util.global.load @_params.vae.decoder.up_blocks.0.resnets.1.norm2.weight : tensor<512xf16>
    %429 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.1.norm2.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_441 = torch.constant.int 0
    %430 = torch.aten.unsqueeze %429, %int0_441 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_442 = torch.constant.int 2
    %431 = torch.aten.unsqueeze %430, %int2_442 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_443 = torch.constant.int 3
    %432 = torch.aten.unsqueeze %431, %int3_443 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %433 = torch.aten.mul.Tensor %424, %432 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,128,128],f32>
    %int1_444 = torch.constant.int 1
    %434 = torch.aten.add.Tensor %433, %428, %int1_444 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f32>
    %int5_445 = torch.constant.int 5
    %435 = torch.prims.convert_element_type %434, %int5_445 : !torch.vtensor<[1,512,128,128],f32>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int5_446 = torch.constant.int 5
    %436 = torch.prims.convert_element_type %result1_430, %int5_446 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_447 = torch.constant.int 5
    %437 = torch.prims.convert_element_type %420, %int5_447 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_448 = torch.constant.int 3
    %438 = torch.prim.ListConstruct %int3_448 : (!torch.int) -> !torch.list<int>
    %439 = torch.prims.squeeze %436, %438 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_449 = torch.constant.int 2
    %440 = torch.prim.ListConstruct %int2_449 : (!torch.int) -> !torch.list<int>
    %441 = torch.prims.squeeze %439, %440 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_450 = torch.constant.int 3
    %442 = torch.prim.ListConstruct %int3_450 : (!torch.int) -> !torch.list<int>
    %443 = torch.prims.squeeze %437, %442 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_451 = torch.constant.int 2
    %444 = torch.prim.ListConstruct %int2_451 : (!torch.int) -> !torch.list<int>
    %445 = torch.prims.squeeze %443, %444 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %446 = torch.aten.detach %441 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %447 = torch.aten.detach %445 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %448 = torch.aten.silu %435 : !torch.vtensor<[1,512,128,128],f16> -> !torch.vtensor<[1,512,128,128],f16>
    %none_452 = torch.constant.none
    %449 = torch.aten.clone %448, %none_452 : !torch.vtensor<[1,512,128,128],f16>, !torch.none -> !torch.vtensor<[1,512,128,128],f16>
    %_params.vae.decoder.up_blocks.0.resnets.1.conv2.weight = util.global.load @_params.vae.decoder.up_blocks.0.resnets.1.conv2.weight : tensor<512x512x3x3xf16>
    %450 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.1.conv2.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.up_blocks.0.resnets.1.conv2.bias = util.global.load @_params.vae.decoder.up_blocks.0.resnets.1.conv2.bias : tensor<512xf16>
    %451 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.1.conv2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_453 = torch.constant.int 1
    %int1_454 = torch.constant.int 1
    %452 = torch.prim.ListConstruct %int1_453, %int1_454 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_455 = torch.constant.int 1
    %int1_456 = torch.constant.int 1
    %453 = torch.prim.ListConstruct %int1_455, %int1_456 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_457 = torch.constant.int 1
    %int1_458 = torch.constant.int 1
    %454 = torch.prim.ListConstruct %int1_457, %int1_458 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_459 = torch.constant.bool false
    %int0_460 = torch.constant.int 0
    %int0_461 = torch.constant.int 0
    %455 = torch.prim.ListConstruct %int0_460, %int0_461 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_462 = torch.constant.int 1
    %456 = torch.aten.convolution %449, %450, %451, %452, %453, %454, %false_459, %455, %int1_462 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_463 = torch.constant.int 1
    %457 = torch.aten.add.Tensor %371, %456, %int1_463 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %float1.000000e00_464 = torch.constant.float 1.000000e+00
    %458 = torch.aten.div.Scalar %457, %float1.000000e00_464 : !torch.vtensor<[1,512,128,128],f16>, !torch.float -> !torch.vtensor<[1,512,128,128],f16>
    %int2_465 = torch.constant.int 2
    %459 = torch.aten.clone %458, %int2_465 : !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_466 = torch.constant.int 1
    %int32_467 = torch.constant.int 32
    %int16_468 = torch.constant.int 16
    %int16384_469 = torch.constant.int 16384
    %460 = torch.prim.ListConstruct %int1_466, %int32_467, %int16_468, %int16384_469 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %461 = torch.aten.view %459, %460 : !torch.vtensor<[1,512,128,128],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,16384],f16>
    %int6_470 = torch.constant.int 6
    %462 = torch.prims.convert_element_type %461, %int6_470 : !torch.vtensor<[1,32,16,16384],f16>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %int2_471 = torch.constant.int 2
    %int3_472 = torch.constant.int 3
    %463 = torch.prim.ListConstruct %int2_471, %int3_472 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_473 = torch.constant.int 0
    %true_474 = torch.constant.bool true
    %result0_475, %result1_476 = torch.aten.var_mean.correction %462, %463, %int0_473, %true_474 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_477 = torch.constant.float 9.9999999999999995E-7
    %int1_478 = torch.constant.int 1
    %464 = torch.aten.add.Scalar %result0_475, %float9.999990e-07_477, %int1_478 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %465 = torch.aten.rsqrt %464 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_479 = torch.constant.int 1
    %466 = torch.aten.sub.Tensor %461, %result1_476, %int1_479 : !torch.vtensor<[1,32,16,16384],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %467 = torch.aten.mul.Tensor %466, %465 : !torch.vtensor<[1,32,16,16384],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,16384],f32>
    %int1_480 = torch.constant.int 1
    %int512_481 = torch.constant.int 512
    %int128_482 = torch.constant.int 128
    %int128_483 = torch.constant.int 128
    %468 = torch.prim.ListConstruct %int1_480, %int512_481, %int128_482, %int128_483 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %469 = torch.aten.view %467, %468 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int> -> !torch.vtensor<[1,512,128,128],f32>
    %_params.vae.decoder.up_blocks.0.resnets.2.norm1.bias = util.global.load @_params.vae.decoder.up_blocks.0.resnets.2.norm1.bias : tensor<512xf16>
    %470 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.2.norm1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_484 = torch.constant.int 0
    %471 = torch.aten.unsqueeze %470, %int0_484 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_485 = torch.constant.int 2
    %472 = torch.aten.unsqueeze %471, %int2_485 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_486 = torch.constant.int 3
    %473 = torch.aten.unsqueeze %472, %int3_486 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.up_blocks.0.resnets.2.norm1.weight = util.global.load @_params.vae.decoder.up_blocks.0.resnets.2.norm1.weight : tensor<512xf16>
    %474 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.2.norm1.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_487 = torch.constant.int 0
    %475 = torch.aten.unsqueeze %474, %int0_487 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_488 = torch.constant.int 2
    %476 = torch.aten.unsqueeze %475, %int2_488 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_489 = torch.constant.int 3
    %477 = torch.aten.unsqueeze %476, %int3_489 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %478 = torch.aten.mul.Tensor %469, %477 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,128,128],f32>
    %int1_490 = torch.constant.int 1
    %479 = torch.aten.add.Tensor %478, %473, %int1_490 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f32>
    %int5_491 = torch.constant.int 5
    %480 = torch.prims.convert_element_type %479, %int5_491 : !torch.vtensor<[1,512,128,128],f32>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int5_492 = torch.constant.int 5
    %481 = torch.prims.convert_element_type %result1_476, %int5_492 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_493 = torch.constant.int 5
    %482 = torch.prims.convert_element_type %465, %int5_493 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_494 = torch.constant.int 3
    %483 = torch.prim.ListConstruct %int3_494 : (!torch.int) -> !torch.list<int>
    %484 = torch.prims.squeeze %481, %483 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_495 = torch.constant.int 2
    %485 = torch.prim.ListConstruct %int2_495 : (!torch.int) -> !torch.list<int>
    %486 = torch.prims.squeeze %484, %485 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_496 = torch.constant.int 3
    %487 = torch.prim.ListConstruct %int3_496 : (!torch.int) -> !torch.list<int>
    %488 = torch.prims.squeeze %482, %487 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_497 = torch.constant.int 2
    %489 = torch.prim.ListConstruct %int2_497 : (!torch.int) -> !torch.list<int>
    %490 = torch.prims.squeeze %488, %489 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %491 = torch.aten.detach %486 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %492 = torch.aten.detach %490 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %493 = torch.aten.silu %480 : !torch.vtensor<[1,512,128,128],f16> -> !torch.vtensor<[1,512,128,128],f16>
    %_params.vae.decoder.up_blocks.0.resnets.2.conv1.weight = util.global.load @_params.vae.decoder.up_blocks.0.resnets.2.conv1.weight : tensor<512x512x3x3xf16>
    %494 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.2.conv1.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.up_blocks.0.resnets.2.conv1.bias = util.global.load @_params.vae.decoder.up_blocks.0.resnets.2.conv1.bias : tensor<512xf16>
    %495 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.2.conv1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_498 = torch.constant.int 1
    %int1_499 = torch.constant.int 1
    %496 = torch.prim.ListConstruct %int1_498, %int1_499 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_500 = torch.constant.int 1
    %int1_501 = torch.constant.int 1
    %497 = torch.prim.ListConstruct %int1_500, %int1_501 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_502 = torch.constant.int 1
    %int1_503 = torch.constant.int 1
    %498 = torch.prim.ListConstruct %int1_502, %int1_503 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_504 = torch.constant.bool false
    %int0_505 = torch.constant.int 0
    %int0_506 = torch.constant.int 0
    %499 = torch.prim.ListConstruct %int0_505, %int0_506 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_507 = torch.constant.int 1
    %500 = torch.aten.convolution %493, %494, %495, %496, %497, %498, %false_504, %499, %int1_507 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int2_508 = torch.constant.int 2
    %501 = torch.aten.clone %500, %int2_508 : !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_509 = torch.constant.int 1
    %int32_510 = torch.constant.int 32
    %int16_511 = torch.constant.int 16
    %int16384_512 = torch.constant.int 16384
    %502 = torch.prim.ListConstruct %int1_509, %int32_510, %int16_511, %int16384_512 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %503 = torch.aten.view %501, %502 : !torch.vtensor<[1,512,128,128],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,16384],f16>
    %int6_513 = torch.constant.int 6
    %504 = torch.prims.convert_element_type %503, %int6_513 : !torch.vtensor<[1,32,16,16384],f16>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %int2_514 = torch.constant.int 2
    %int3_515 = torch.constant.int 3
    %505 = torch.prim.ListConstruct %int2_514, %int3_515 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_516 = torch.constant.int 0
    %true_517 = torch.constant.bool true
    %result0_518, %result1_519 = torch.aten.var_mean.correction %504, %505, %int0_516, %true_517 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_520 = torch.constant.float 9.9999999999999995E-7
    %int1_521 = torch.constant.int 1
    %506 = torch.aten.add.Scalar %result0_518, %float9.999990e-07_520, %int1_521 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %507 = torch.aten.rsqrt %506 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_522 = torch.constant.int 1
    %508 = torch.aten.sub.Tensor %503, %result1_519, %int1_522 : !torch.vtensor<[1,32,16,16384],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,16384],f32>
    %509 = torch.aten.mul.Tensor %508, %507 : !torch.vtensor<[1,32,16,16384],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,16384],f32>
    %int1_523 = torch.constant.int 1
    %int512_524 = torch.constant.int 512
    %int128_525 = torch.constant.int 128
    %int128_526 = torch.constant.int 128
    %510 = torch.prim.ListConstruct %int1_523, %int512_524, %int128_525, %int128_526 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %511 = torch.aten.view %509, %510 : !torch.vtensor<[1,32,16,16384],f32>, !torch.list<int> -> !torch.vtensor<[1,512,128,128],f32>
    %_params.vae.decoder.up_blocks.0.resnets.2.norm2.bias = util.global.load @_params.vae.decoder.up_blocks.0.resnets.2.norm2.bias : tensor<512xf16>
    %512 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.2.norm2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_527 = torch.constant.int 0
    %513 = torch.aten.unsqueeze %512, %int0_527 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_528 = torch.constant.int 2
    %514 = torch.aten.unsqueeze %513, %int2_528 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_529 = torch.constant.int 3
    %515 = torch.aten.unsqueeze %514, %int3_529 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.up_blocks.0.resnets.2.norm2.weight = util.global.load @_params.vae.decoder.up_blocks.0.resnets.2.norm2.weight : tensor<512xf16>
    %516 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.2.norm2.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_530 = torch.constant.int 0
    %517 = torch.aten.unsqueeze %516, %int0_530 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_531 = torch.constant.int 2
    %518 = torch.aten.unsqueeze %517, %int2_531 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_532 = torch.constant.int 3
    %519 = torch.aten.unsqueeze %518, %int3_532 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %520 = torch.aten.mul.Tensor %511, %519 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,128,128],f32>
    %int1_533 = torch.constant.int 1
    %521 = torch.aten.add.Tensor %520, %515, %int1_533 : !torch.vtensor<[1,512,128,128],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f32>
    %int5_534 = torch.constant.int 5
    %522 = torch.prims.convert_element_type %521, %int5_534 : !torch.vtensor<[1,512,128,128],f32>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int5_535 = torch.constant.int 5
    %523 = torch.prims.convert_element_type %result1_519, %int5_535 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_536 = torch.constant.int 5
    %524 = torch.prims.convert_element_type %507, %int5_536 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_537 = torch.constant.int 3
    %525 = torch.prim.ListConstruct %int3_537 : (!torch.int) -> !torch.list<int>
    %526 = torch.prims.squeeze %523, %525 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_538 = torch.constant.int 2
    %527 = torch.prim.ListConstruct %int2_538 : (!torch.int) -> !torch.list<int>
    %528 = torch.prims.squeeze %526, %527 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_539 = torch.constant.int 3
    %529 = torch.prim.ListConstruct %int3_539 : (!torch.int) -> !torch.list<int>
    %530 = torch.prims.squeeze %524, %529 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_540 = torch.constant.int 2
    %531 = torch.prim.ListConstruct %int2_540 : (!torch.int) -> !torch.list<int>
    %532 = torch.prims.squeeze %530, %531 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %533 = torch.aten.detach %528 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %534 = torch.aten.detach %532 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %535 = torch.aten.silu %522 : !torch.vtensor<[1,512,128,128],f16> -> !torch.vtensor<[1,512,128,128],f16>
    %none_541 = torch.constant.none
    %536 = torch.aten.clone %535, %none_541 : !torch.vtensor<[1,512,128,128],f16>, !torch.none -> !torch.vtensor<[1,512,128,128],f16>
    %_params.vae.decoder.up_blocks.0.resnets.2.conv2.weight = util.global.load @_params.vae.decoder.up_blocks.0.resnets.2.conv2.weight : tensor<512x512x3x3xf16>
    %537 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.2.conv2.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.up_blocks.0.resnets.2.conv2.bias = util.global.load @_params.vae.decoder.up_blocks.0.resnets.2.conv2.bias : tensor<512xf16>
    %538 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.resnets.2.conv2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_542 = torch.constant.int 1
    %int1_543 = torch.constant.int 1
    %539 = torch.prim.ListConstruct %int1_542, %int1_543 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_544 = torch.constant.int 1
    %int1_545 = torch.constant.int 1
    %540 = torch.prim.ListConstruct %int1_544, %int1_545 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_546 = torch.constant.int 1
    %int1_547 = torch.constant.int 1
    %541 = torch.prim.ListConstruct %int1_546, %int1_547 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_548 = torch.constant.bool false
    %int0_549 = torch.constant.int 0
    %int0_550 = torch.constant.int 0
    %542 = torch.prim.ListConstruct %int0_549, %int0_550 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_551 = torch.constant.int 1
    %543 = torch.aten.convolution %536, %537, %538, %539, %540, %541, %false_548, %542, %int1_551 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %int1_552 = torch.constant.int 1
    %544 = torch.aten.add.Tensor %458, %543, %int1_552 : !torch.vtensor<[1,512,128,128],f16>, !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f16>
    %float1.000000e00_553 = torch.constant.float 1.000000e+00
    %545 = torch.aten.div.Scalar %544, %float1.000000e00_553 : !torch.vtensor<[1,512,128,128],f16>, !torch.float -> !torch.vtensor<[1,512,128,128],f16>
    %int6_554 = torch.constant.int 6
    %546 = torch.prims.convert_element_type %545, %int6_554 : !torch.vtensor<[1,512,128,128],f16>, !torch.int -> !torch.vtensor<[1,512,128,128],f32>
    %int256 = torch.constant.int 256
    %int6_555 = torch.constant.int 6
    %none_556 = torch.constant.none
    %cpu = torch.constant.device "cpu"
    %false_557 = torch.constant.bool false
    %547 = torch.aten.arange %int256, %int6_555, %none_556, %cpu, %false_557 : !torch.int, !torch.int, !torch.none, !torch.Device, !torch.bool -> !torch.vtensor<[256],f32>
    %float0.000000e00_558 = torch.constant.float 0.000000e+00
    %int1_559 = torch.constant.int 1
    %548 = torch.aten.add.Scalar %547, %float0.000000e00_558, %int1_559 : !torch.vtensor<[256],f32>, !torch.float, !torch.int -> !torch.vtensor<[256],f32>
    %float5.000000e-01 = torch.constant.float 5.000000e-01
    %549 = torch.aten.mul.Scalar %548, %float5.000000e-01 : !torch.vtensor<[256],f32>, !torch.float -> !torch.vtensor<[256],f32>
    %int4 = torch.constant.int 4
    %550 = torch.prims.convert_element_type %549, %int4 : !torch.vtensor<[256],f32>, !torch.int -> !torch.vtensor<[256],si64>
    %int-1_560 = torch.constant.int -1
    %551 = torch.aten.unsqueeze %550, %int-1_560 : !torch.vtensor<[256],si64>, !torch.int -> !torch.vtensor<[256,1],si64>
    %int256_561 = torch.constant.int 256
    %int6_562 = torch.constant.int 6
    %none_563 = torch.constant.none
    %cpu_564 = torch.constant.device "cpu"
    %false_565 = torch.constant.bool false
    %552 = torch.aten.arange %int256_561, %int6_562, %none_563, %cpu_564, %false_565 : !torch.int, !torch.int, !torch.none, !torch.Device, !torch.bool -> !torch.vtensor<[256],f32>
    %float0.000000e00_566 = torch.constant.float 0.000000e+00
    %int1_567 = torch.constant.int 1
    %553 = torch.aten.add.Scalar %552, %float0.000000e00_566, %int1_567 : !torch.vtensor<[256],f32>, !torch.float, !torch.int -> !torch.vtensor<[256],f32>
    %float5.000000e-01_568 = torch.constant.float 5.000000e-01
    %554 = torch.aten.mul.Scalar %553, %float5.000000e-01_568 : !torch.vtensor<[256],f32>, !torch.float -> !torch.vtensor<[256],f32>
    %int4_569 = torch.constant.int 4
    %555 = torch.prims.convert_element_type %554, %int4_569 : !torch.vtensor<[256],f32>, !torch.int -> !torch.vtensor<[256],si64>
    %none_570 = torch.constant.none
    %none_571 = torch.constant.none
    %556 = torch.prim.ListConstruct %none_570, %none_571, %551, %555 : (!torch.none, !torch.none, !torch.vtensor<[256,1],si64>, !torch.vtensor<[256],si64>) -> !torch.list<optional<vtensor>>
    %557 = torch.aten.index.Tensor %546, %556 : !torch.vtensor<[1,512,128,128],f32>, !torch.list<optional<vtensor>> -> !torch.vtensor<[1,512,256,256],f32>
    %int2_572 = torch.constant.int 2
    %558 = torch.aten.clone %557, %int2_572 : !torch.vtensor<[1,512,256,256],f32>, !torch.int -> !torch.vtensor<[1,512,256,256],f32>
    %int5_573 = torch.constant.int 5
    %559 = torch.prims.convert_element_type %558, %int5_573 : !torch.vtensor<[1,512,256,256],f32>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %_params.vae.decoder.up_blocks.0.upsamplers.0.conv.weight = util.global.load @_params.vae.decoder.up_blocks.0.upsamplers.0.conv.weight : tensor<512x512x3x3xf16>
    %560 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.upsamplers.0.conv.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.up_blocks.0.upsamplers.0.conv.bias = util.global.load @_params.vae.decoder.up_blocks.0.upsamplers.0.conv.bias : tensor<512xf16>
    %561 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.0.upsamplers.0.conv.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_574 = torch.constant.int 1
    %int1_575 = torch.constant.int 1
    %562 = torch.prim.ListConstruct %int1_574, %int1_575 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_576 = torch.constant.int 1
    %int1_577 = torch.constant.int 1
    %563 = torch.prim.ListConstruct %int1_576, %int1_577 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_578 = torch.constant.int 1
    %int1_579 = torch.constant.int 1
    %564 = torch.prim.ListConstruct %int1_578, %int1_579 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_580 = torch.constant.bool false
    %int0_581 = torch.constant.int 0
    %int0_582 = torch.constant.int 0
    %565 = torch.prim.ListConstruct %int0_581, %int0_582 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_583 = torch.constant.int 1
    %566 = torch.aten.convolution %559, %560, %561, %562, %563, %564, %false_580, %565, %int1_583 : !torch.vtensor<[1,512,256,256],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int2_584 = torch.constant.int 2
    %567 = torch.aten.clone %566, %int2_584 : !torch.vtensor<[1,512,256,256],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int1_585 = torch.constant.int 1
    %int32_586 = torch.constant.int 32
    %int16_587 = torch.constant.int 16
    %int65536 = torch.constant.int 65536
    %568 = torch.prim.ListConstruct %int1_585, %int32_586, %int16_587, %int65536 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %569 = torch.aten.view %567, %568 : !torch.vtensor<[1,512,256,256],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,65536],f16>
    %int6_588 = torch.constant.int 6
    %570 = torch.prims.convert_element_type %569, %int6_588 : !torch.vtensor<[1,32,16,65536],f16>, !torch.int -> !torch.vtensor<[1,32,16,65536],f32>
    %int2_589 = torch.constant.int 2
    %int3_590 = torch.constant.int 3
    %571 = torch.prim.ListConstruct %int2_589, %int3_590 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_591 = torch.constant.int 0
    %true_592 = torch.constant.bool true
    %result0_593, %result1_594 = torch.aten.var_mean.correction %570, %571, %int0_591, %true_592 : !torch.vtensor<[1,32,16,65536],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_595 = torch.constant.float 9.9999999999999995E-7
    %int1_596 = torch.constant.int 1
    %572 = torch.aten.add.Scalar %result0_593, %float9.999990e-07_595, %int1_596 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %573 = torch.aten.rsqrt %572 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_597 = torch.constant.int 1
    %574 = torch.aten.sub.Tensor %569, %result1_594, %int1_597 : !torch.vtensor<[1,32,16,65536],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,65536],f32>
    %575 = torch.aten.mul.Tensor %574, %573 : !torch.vtensor<[1,32,16,65536],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,65536],f32>
    %int1_598 = torch.constant.int 1
    %int512_599 = torch.constant.int 512
    %int256_600 = torch.constant.int 256
    %int256_601 = torch.constant.int 256
    %576 = torch.prim.ListConstruct %int1_598, %int512_599, %int256_600, %int256_601 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %577 = torch.aten.view %575, %576 : !torch.vtensor<[1,32,16,65536],f32>, !torch.list<int> -> !torch.vtensor<[1,512,256,256],f32>
    %_params.vae.decoder.up_blocks.1.resnets.0.norm1.bias = util.global.load @_params.vae.decoder.up_blocks.1.resnets.0.norm1.bias : tensor<512xf16>
    %578 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.0.norm1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_602 = torch.constant.int 0
    %579 = torch.aten.unsqueeze %578, %int0_602 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_603 = torch.constant.int 2
    %580 = torch.aten.unsqueeze %579, %int2_603 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_604 = torch.constant.int 3
    %581 = torch.aten.unsqueeze %580, %int3_604 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.up_blocks.1.resnets.0.norm1.weight = util.global.load @_params.vae.decoder.up_blocks.1.resnets.0.norm1.weight : tensor<512xf16>
    %582 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.0.norm1.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_605 = torch.constant.int 0
    %583 = torch.aten.unsqueeze %582, %int0_605 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_606 = torch.constant.int 2
    %584 = torch.aten.unsqueeze %583, %int2_606 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_607 = torch.constant.int 3
    %585 = torch.aten.unsqueeze %584, %int3_607 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %586 = torch.aten.mul.Tensor %577, %585 : !torch.vtensor<[1,512,256,256],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,256,256],f32>
    %int1_608 = torch.constant.int 1
    %587 = torch.aten.add.Tensor %586, %581, %int1_608 : !torch.vtensor<[1,512,256,256],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f32>
    %int5_609 = torch.constant.int 5
    %588 = torch.prims.convert_element_type %587, %int5_609 : !torch.vtensor<[1,512,256,256],f32>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int5_610 = torch.constant.int 5
    %589 = torch.prims.convert_element_type %result1_594, %int5_610 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_611 = torch.constant.int 5
    %590 = torch.prims.convert_element_type %573, %int5_611 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_612 = torch.constant.int 3
    %591 = torch.prim.ListConstruct %int3_612 : (!torch.int) -> !torch.list<int>
    %592 = torch.prims.squeeze %589, %591 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_613 = torch.constant.int 2
    %593 = torch.prim.ListConstruct %int2_613 : (!torch.int) -> !torch.list<int>
    %594 = torch.prims.squeeze %592, %593 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_614 = torch.constant.int 3
    %595 = torch.prim.ListConstruct %int3_614 : (!torch.int) -> !torch.list<int>
    %596 = torch.prims.squeeze %590, %595 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_615 = torch.constant.int 2
    %597 = torch.prim.ListConstruct %int2_615 : (!torch.int) -> !torch.list<int>
    %598 = torch.prims.squeeze %596, %597 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %599 = torch.aten.detach %594 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %600 = torch.aten.detach %598 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %601 = torch.aten.silu %588 : !torch.vtensor<[1,512,256,256],f16> -> !torch.vtensor<[1,512,256,256],f16>
    %_params.vae.decoder.up_blocks.1.resnets.0.conv1.weight = util.global.load @_params.vae.decoder.up_blocks.1.resnets.0.conv1.weight : tensor<512x512x3x3xf16>
    %602 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.0.conv1.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.up_blocks.1.resnets.0.conv1.bias = util.global.load @_params.vae.decoder.up_blocks.1.resnets.0.conv1.bias : tensor<512xf16>
    %603 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.0.conv1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_616 = torch.constant.int 1
    %int1_617 = torch.constant.int 1
    %604 = torch.prim.ListConstruct %int1_616, %int1_617 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_618 = torch.constant.int 1
    %int1_619 = torch.constant.int 1
    %605 = torch.prim.ListConstruct %int1_618, %int1_619 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_620 = torch.constant.int 1
    %int1_621 = torch.constant.int 1
    %606 = torch.prim.ListConstruct %int1_620, %int1_621 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_622 = torch.constant.bool false
    %int0_623 = torch.constant.int 0
    %int0_624 = torch.constant.int 0
    %607 = torch.prim.ListConstruct %int0_623, %int0_624 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_625 = torch.constant.int 1
    %608 = torch.aten.convolution %601, %602, %603, %604, %605, %606, %false_622, %607, %int1_625 : !torch.vtensor<[1,512,256,256],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int2_626 = torch.constant.int 2
    %609 = torch.aten.clone %608, %int2_626 : !torch.vtensor<[1,512,256,256],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int1_627 = torch.constant.int 1
    %int32_628 = torch.constant.int 32
    %int16_629 = torch.constant.int 16
    %int65536_630 = torch.constant.int 65536
    %610 = torch.prim.ListConstruct %int1_627, %int32_628, %int16_629, %int65536_630 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %611 = torch.aten.view %609, %610 : !torch.vtensor<[1,512,256,256],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,65536],f16>
    %int6_631 = torch.constant.int 6
    %612 = torch.prims.convert_element_type %611, %int6_631 : !torch.vtensor<[1,32,16,65536],f16>, !torch.int -> !torch.vtensor<[1,32,16,65536],f32>
    %int2_632 = torch.constant.int 2
    %int3_633 = torch.constant.int 3
    %613 = torch.prim.ListConstruct %int2_632, %int3_633 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_634 = torch.constant.int 0
    %true_635 = torch.constant.bool true
    %result0_636, %result1_637 = torch.aten.var_mean.correction %612, %613, %int0_634, %true_635 : !torch.vtensor<[1,32,16,65536],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_638 = torch.constant.float 9.9999999999999995E-7
    %int1_639 = torch.constant.int 1
    %614 = torch.aten.add.Scalar %result0_636, %float9.999990e-07_638, %int1_639 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %615 = torch.aten.rsqrt %614 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_640 = torch.constant.int 1
    %616 = torch.aten.sub.Tensor %611, %result1_637, %int1_640 : !torch.vtensor<[1,32,16,65536],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,65536],f32>
    %617 = torch.aten.mul.Tensor %616, %615 : !torch.vtensor<[1,32,16,65536],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,65536],f32>
    %int1_641 = torch.constant.int 1
    %int512_642 = torch.constant.int 512
    %int256_643 = torch.constant.int 256
    %int256_644 = torch.constant.int 256
    %618 = torch.prim.ListConstruct %int1_641, %int512_642, %int256_643, %int256_644 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %619 = torch.aten.view %617, %618 : !torch.vtensor<[1,32,16,65536],f32>, !torch.list<int> -> !torch.vtensor<[1,512,256,256],f32>
    %_params.vae.decoder.up_blocks.1.resnets.0.norm2.bias = util.global.load @_params.vae.decoder.up_blocks.1.resnets.0.norm2.bias : tensor<512xf16>
    %620 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.0.norm2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_645 = torch.constant.int 0
    %621 = torch.aten.unsqueeze %620, %int0_645 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_646 = torch.constant.int 2
    %622 = torch.aten.unsqueeze %621, %int2_646 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_647 = torch.constant.int 3
    %623 = torch.aten.unsqueeze %622, %int3_647 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.up_blocks.1.resnets.0.norm2.weight = util.global.load @_params.vae.decoder.up_blocks.1.resnets.0.norm2.weight : tensor<512xf16>
    %624 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.0.norm2.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_648 = torch.constant.int 0
    %625 = torch.aten.unsqueeze %624, %int0_648 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_649 = torch.constant.int 2
    %626 = torch.aten.unsqueeze %625, %int2_649 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_650 = torch.constant.int 3
    %627 = torch.aten.unsqueeze %626, %int3_650 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %628 = torch.aten.mul.Tensor %619, %627 : !torch.vtensor<[1,512,256,256],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,256,256],f32>
    %int1_651 = torch.constant.int 1
    %629 = torch.aten.add.Tensor %628, %623, %int1_651 : !torch.vtensor<[1,512,256,256],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f32>
    %int5_652 = torch.constant.int 5
    %630 = torch.prims.convert_element_type %629, %int5_652 : !torch.vtensor<[1,512,256,256],f32>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int5_653 = torch.constant.int 5
    %631 = torch.prims.convert_element_type %result1_637, %int5_653 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_654 = torch.constant.int 5
    %632 = torch.prims.convert_element_type %615, %int5_654 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_655 = torch.constant.int 3
    %633 = torch.prim.ListConstruct %int3_655 : (!torch.int) -> !torch.list<int>
    %634 = torch.prims.squeeze %631, %633 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_656 = torch.constant.int 2
    %635 = torch.prim.ListConstruct %int2_656 : (!torch.int) -> !torch.list<int>
    %636 = torch.prims.squeeze %634, %635 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_657 = torch.constant.int 3
    %637 = torch.prim.ListConstruct %int3_657 : (!torch.int) -> !torch.list<int>
    %638 = torch.prims.squeeze %632, %637 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_658 = torch.constant.int 2
    %639 = torch.prim.ListConstruct %int2_658 : (!torch.int) -> !torch.list<int>
    %640 = torch.prims.squeeze %638, %639 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %641 = torch.aten.detach %636 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %642 = torch.aten.detach %640 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %643 = torch.aten.silu %630 : !torch.vtensor<[1,512,256,256],f16> -> !torch.vtensor<[1,512,256,256],f16>
    %none_659 = torch.constant.none
    %644 = torch.aten.clone %643, %none_659 : !torch.vtensor<[1,512,256,256],f16>, !torch.none -> !torch.vtensor<[1,512,256,256],f16>
    %_params.vae.decoder.up_blocks.1.resnets.0.conv2.weight = util.global.load @_params.vae.decoder.up_blocks.1.resnets.0.conv2.weight : tensor<512x512x3x3xf16>
    %645 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.0.conv2.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.up_blocks.1.resnets.0.conv2.bias = util.global.load @_params.vae.decoder.up_blocks.1.resnets.0.conv2.bias : tensor<512xf16>
    %646 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.0.conv2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_660 = torch.constant.int 1
    %int1_661 = torch.constant.int 1
    %647 = torch.prim.ListConstruct %int1_660, %int1_661 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_662 = torch.constant.int 1
    %int1_663 = torch.constant.int 1
    %648 = torch.prim.ListConstruct %int1_662, %int1_663 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_664 = torch.constant.int 1
    %int1_665 = torch.constant.int 1
    %649 = torch.prim.ListConstruct %int1_664, %int1_665 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_666 = torch.constant.bool false
    %int0_667 = torch.constant.int 0
    %int0_668 = torch.constant.int 0
    %650 = torch.prim.ListConstruct %int0_667, %int0_668 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_669 = torch.constant.int 1
    %651 = torch.aten.convolution %644, %645, %646, %647, %648, %649, %false_666, %650, %int1_669 : !torch.vtensor<[1,512,256,256],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int1_670 = torch.constant.int 1
    %652 = torch.aten.add.Tensor %566, %651, %int1_670 : !torch.vtensor<[1,512,256,256],f16>, !torch.vtensor<[1,512,256,256],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %float1.000000e00_671 = torch.constant.float 1.000000e+00
    %653 = torch.aten.div.Scalar %652, %float1.000000e00_671 : !torch.vtensor<[1,512,256,256],f16>, !torch.float -> !torch.vtensor<[1,512,256,256],f16>
    %int2_672 = torch.constant.int 2
    %654 = torch.aten.clone %653, %int2_672 : !torch.vtensor<[1,512,256,256],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int1_673 = torch.constant.int 1
    %int32_674 = torch.constant.int 32
    %int16_675 = torch.constant.int 16
    %int65536_676 = torch.constant.int 65536
    %655 = torch.prim.ListConstruct %int1_673, %int32_674, %int16_675, %int65536_676 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %656 = torch.aten.view %654, %655 : !torch.vtensor<[1,512,256,256],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,65536],f16>
    %int6_677 = torch.constant.int 6
    %657 = torch.prims.convert_element_type %656, %int6_677 : !torch.vtensor<[1,32,16,65536],f16>, !torch.int -> !torch.vtensor<[1,32,16,65536],f32>
    %int2_678 = torch.constant.int 2
    %int3_679 = torch.constant.int 3
    %658 = torch.prim.ListConstruct %int2_678, %int3_679 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_680 = torch.constant.int 0
    %true_681 = torch.constant.bool true
    %result0_682, %result1_683 = torch.aten.var_mean.correction %657, %658, %int0_680, %true_681 : !torch.vtensor<[1,32,16,65536],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_684 = torch.constant.float 9.9999999999999995E-7
    %int1_685 = torch.constant.int 1
    %659 = torch.aten.add.Scalar %result0_682, %float9.999990e-07_684, %int1_685 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %660 = torch.aten.rsqrt %659 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_686 = torch.constant.int 1
    %661 = torch.aten.sub.Tensor %656, %result1_683, %int1_686 : !torch.vtensor<[1,32,16,65536],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,65536],f32>
    %662 = torch.aten.mul.Tensor %661, %660 : !torch.vtensor<[1,32,16,65536],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,65536],f32>
    %int1_687 = torch.constant.int 1
    %int512_688 = torch.constant.int 512
    %int256_689 = torch.constant.int 256
    %int256_690 = torch.constant.int 256
    %663 = torch.prim.ListConstruct %int1_687, %int512_688, %int256_689, %int256_690 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %664 = torch.aten.view %662, %663 : !torch.vtensor<[1,32,16,65536],f32>, !torch.list<int> -> !torch.vtensor<[1,512,256,256],f32>
    %_params.vae.decoder.up_blocks.1.resnets.1.norm1.bias = util.global.load @_params.vae.decoder.up_blocks.1.resnets.1.norm1.bias : tensor<512xf16>
    %665 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.1.norm1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_691 = torch.constant.int 0
    %666 = torch.aten.unsqueeze %665, %int0_691 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_692 = torch.constant.int 2
    %667 = torch.aten.unsqueeze %666, %int2_692 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_693 = torch.constant.int 3
    %668 = torch.aten.unsqueeze %667, %int3_693 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.up_blocks.1.resnets.1.norm1.weight = util.global.load @_params.vae.decoder.up_blocks.1.resnets.1.norm1.weight : tensor<512xf16>
    %669 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.1.norm1.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_694 = torch.constant.int 0
    %670 = torch.aten.unsqueeze %669, %int0_694 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_695 = torch.constant.int 2
    %671 = torch.aten.unsqueeze %670, %int2_695 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_696 = torch.constant.int 3
    %672 = torch.aten.unsqueeze %671, %int3_696 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %673 = torch.aten.mul.Tensor %664, %672 : !torch.vtensor<[1,512,256,256],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,256,256],f32>
    %int1_697 = torch.constant.int 1
    %674 = torch.aten.add.Tensor %673, %668, %int1_697 : !torch.vtensor<[1,512,256,256],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f32>
    %int5_698 = torch.constant.int 5
    %675 = torch.prims.convert_element_type %674, %int5_698 : !torch.vtensor<[1,512,256,256],f32>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int5_699 = torch.constant.int 5
    %676 = torch.prims.convert_element_type %result1_683, %int5_699 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_700 = torch.constant.int 5
    %677 = torch.prims.convert_element_type %660, %int5_700 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_701 = torch.constant.int 3
    %678 = torch.prim.ListConstruct %int3_701 : (!torch.int) -> !torch.list<int>
    %679 = torch.prims.squeeze %676, %678 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_702 = torch.constant.int 2
    %680 = torch.prim.ListConstruct %int2_702 : (!torch.int) -> !torch.list<int>
    %681 = torch.prims.squeeze %679, %680 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_703 = torch.constant.int 3
    %682 = torch.prim.ListConstruct %int3_703 : (!torch.int) -> !torch.list<int>
    %683 = torch.prims.squeeze %677, %682 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_704 = torch.constant.int 2
    %684 = torch.prim.ListConstruct %int2_704 : (!torch.int) -> !torch.list<int>
    %685 = torch.prims.squeeze %683, %684 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %686 = torch.aten.detach %681 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %687 = torch.aten.detach %685 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %688 = torch.aten.silu %675 : !torch.vtensor<[1,512,256,256],f16> -> !torch.vtensor<[1,512,256,256],f16>
    %_params.vae.decoder.up_blocks.1.resnets.1.conv1.weight = util.global.load @_params.vae.decoder.up_blocks.1.resnets.1.conv1.weight : tensor<512x512x3x3xf16>
    %689 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.1.conv1.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.up_blocks.1.resnets.1.conv1.bias = util.global.load @_params.vae.decoder.up_blocks.1.resnets.1.conv1.bias : tensor<512xf16>
    %690 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.1.conv1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_705 = torch.constant.int 1
    %int1_706 = torch.constant.int 1
    %691 = torch.prim.ListConstruct %int1_705, %int1_706 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_707 = torch.constant.int 1
    %int1_708 = torch.constant.int 1
    %692 = torch.prim.ListConstruct %int1_707, %int1_708 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_709 = torch.constant.int 1
    %int1_710 = torch.constant.int 1
    %693 = torch.prim.ListConstruct %int1_709, %int1_710 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_711 = torch.constant.bool false
    %int0_712 = torch.constant.int 0
    %int0_713 = torch.constant.int 0
    %694 = torch.prim.ListConstruct %int0_712, %int0_713 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_714 = torch.constant.int 1
    %695 = torch.aten.convolution %688, %689, %690, %691, %692, %693, %false_711, %694, %int1_714 : !torch.vtensor<[1,512,256,256],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int2_715 = torch.constant.int 2
    %696 = torch.aten.clone %695, %int2_715 : !torch.vtensor<[1,512,256,256],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int1_716 = torch.constant.int 1
    %int32_717 = torch.constant.int 32
    %int16_718 = torch.constant.int 16
    %int65536_719 = torch.constant.int 65536
    %697 = torch.prim.ListConstruct %int1_716, %int32_717, %int16_718, %int65536_719 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %698 = torch.aten.view %696, %697 : !torch.vtensor<[1,512,256,256],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,65536],f16>
    %int6_720 = torch.constant.int 6
    %699 = torch.prims.convert_element_type %698, %int6_720 : !torch.vtensor<[1,32,16,65536],f16>, !torch.int -> !torch.vtensor<[1,32,16,65536],f32>
    %int2_721 = torch.constant.int 2
    %int3_722 = torch.constant.int 3
    %700 = torch.prim.ListConstruct %int2_721, %int3_722 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_723 = torch.constant.int 0
    %true_724 = torch.constant.bool true
    %result0_725, %result1_726 = torch.aten.var_mean.correction %699, %700, %int0_723, %true_724 : !torch.vtensor<[1,32,16,65536],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_727 = torch.constant.float 9.9999999999999995E-7
    %int1_728 = torch.constant.int 1
    %701 = torch.aten.add.Scalar %result0_725, %float9.999990e-07_727, %int1_728 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %702 = torch.aten.rsqrt %701 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_729 = torch.constant.int 1
    %703 = torch.aten.sub.Tensor %698, %result1_726, %int1_729 : !torch.vtensor<[1,32,16,65536],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,65536],f32>
    %704 = torch.aten.mul.Tensor %703, %702 : !torch.vtensor<[1,32,16,65536],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,65536],f32>
    %int1_730 = torch.constant.int 1
    %int512_731 = torch.constant.int 512
    %int256_732 = torch.constant.int 256
    %int256_733 = torch.constant.int 256
    %705 = torch.prim.ListConstruct %int1_730, %int512_731, %int256_732, %int256_733 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %706 = torch.aten.view %704, %705 : !torch.vtensor<[1,32,16,65536],f32>, !torch.list<int> -> !torch.vtensor<[1,512,256,256],f32>
    %_params.vae.decoder.up_blocks.1.resnets.1.norm2.bias = util.global.load @_params.vae.decoder.up_blocks.1.resnets.1.norm2.bias : tensor<512xf16>
    %707 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.1.norm2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_734 = torch.constant.int 0
    %708 = torch.aten.unsqueeze %707, %int0_734 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_735 = torch.constant.int 2
    %709 = torch.aten.unsqueeze %708, %int2_735 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_736 = torch.constant.int 3
    %710 = torch.aten.unsqueeze %709, %int3_736 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.up_blocks.1.resnets.1.norm2.weight = util.global.load @_params.vae.decoder.up_blocks.1.resnets.1.norm2.weight : tensor<512xf16>
    %711 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.1.norm2.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_737 = torch.constant.int 0
    %712 = torch.aten.unsqueeze %711, %int0_737 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_738 = torch.constant.int 2
    %713 = torch.aten.unsqueeze %712, %int2_738 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_739 = torch.constant.int 3
    %714 = torch.aten.unsqueeze %713, %int3_739 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %715 = torch.aten.mul.Tensor %706, %714 : !torch.vtensor<[1,512,256,256],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,256,256],f32>
    %int1_740 = torch.constant.int 1
    %716 = torch.aten.add.Tensor %715, %710, %int1_740 : !torch.vtensor<[1,512,256,256],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f32>
    %int5_741 = torch.constant.int 5
    %717 = torch.prims.convert_element_type %716, %int5_741 : !torch.vtensor<[1,512,256,256],f32>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int5_742 = torch.constant.int 5
    %718 = torch.prims.convert_element_type %result1_726, %int5_742 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_743 = torch.constant.int 5
    %719 = torch.prims.convert_element_type %702, %int5_743 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_744 = torch.constant.int 3
    %720 = torch.prim.ListConstruct %int3_744 : (!torch.int) -> !torch.list<int>
    %721 = torch.prims.squeeze %718, %720 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_745 = torch.constant.int 2
    %722 = torch.prim.ListConstruct %int2_745 : (!torch.int) -> !torch.list<int>
    %723 = torch.prims.squeeze %721, %722 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_746 = torch.constant.int 3
    %724 = torch.prim.ListConstruct %int3_746 : (!torch.int) -> !torch.list<int>
    %725 = torch.prims.squeeze %719, %724 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_747 = torch.constant.int 2
    %726 = torch.prim.ListConstruct %int2_747 : (!torch.int) -> !torch.list<int>
    %727 = torch.prims.squeeze %725, %726 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %728 = torch.aten.detach %723 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %729 = torch.aten.detach %727 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %730 = torch.aten.silu %717 : !torch.vtensor<[1,512,256,256],f16> -> !torch.vtensor<[1,512,256,256],f16>
    %none_748 = torch.constant.none
    %731 = torch.aten.clone %730, %none_748 : !torch.vtensor<[1,512,256,256],f16>, !torch.none -> !torch.vtensor<[1,512,256,256],f16>
    %_params.vae.decoder.up_blocks.1.resnets.1.conv2.weight = util.global.load @_params.vae.decoder.up_blocks.1.resnets.1.conv2.weight : tensor<512x512x3x3xf16>
    %732 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.1.conv2.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.up_blocks.1.resnets.1.conv2.bias = util.global.load @_params.vae.decoder.up_blocks.1.resnets.1.conv2.bias : tensor<512xf16>
    %733 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.1.conv2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_749 = torch.constant.int 1
    %int1_750 = torch.constant.int 1
    %734 = torch.prim.ListConstruct %int1_749, %int1_750 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_751 = torch.constant.int 1
    %int1_752 = torch.constant.int 1
    %735 = torch.prim.ListConstruct %int1_751, %int1_752 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_753 = torch.constant.int 1
    %int1_754 = torch.constant.int 1
    %736 = torch.prim.ListConstruct %int1_753, %int1_754 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_755 = torch.constant.bool false
    %int0_756 = torch.constant.int 0
    %int0_757 = torch.constant.int 0
    %737 = torch.prim.ListConstruct %int0_756, %int0_757 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_758 = torch.constant.int 1
    %738 = torch.aten.convolution %731, %732, %733, %734, %735, %736, %false_755, %737, %int1_758 : !torch.vtensor<[1,512,256,256],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int1_759 = torch.constant.int 1
    %739 = torch.aten.add.Tensor %653, %738, %int1_759 : !torch.vtensor<[1,512,256,256],f16>, !torch.vtensor<[1,512,256,256],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %float1.000000e00_760 = torch.constant.float 1.000000e+00
    %740 = torch.aten.div.Scalar %739, %float1.000000e00_760 : !torch.vtensor<[1,512,256,256],f16>, !torch.float -> !torch.vtensor<[1,512,256,256],f16>
    %int2_761 = torch.constant.int 2
    %741 = torch.aten.clone %740, %int2_761 : !torch.vtensor<[1,512,256,256],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int1_762 = torch.constant.int 1
    %int32_763 = torch.constant.int 32
    %int16_764 = torch.constant.int 16
    %int65536_765 = torch.constant.int 65536
    %742 = torch.prim.ListConstruct %int1_762, %int32_763, %int16_764, %int65536_765 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %743 = torch.aten.view %741, %742 : !torch.vtensor<[1,512,256,256],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,65536],f16>
    %int6_766 = torch.constant.int 6
    %744 = torch.prims.convert_element_type %743, %int6_766 : !torch.vtensor<[1,32,16,65536],f16>, !torch.int -> !torch.vtensor<[1,32,16,65536],f32>
    %int2_767 = torch.constant.int 2
    %int3_768 = torch.constant.int 3
    %745 = torch.prim.ListConstruct %int2_767, %int3_768 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_769 = torch.constant.int 0
    %true_770 = torch.constant.bool true
    %result0_771, %result1_772 = torch.aten.var_mean.correction %744, %745, %int0_769, %true_770 : !torch.vtensor<[1,32,16,65536],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_773 = torch.constant.float 9.9999999999999995E-7
    %int1_774 = torch.constant.int 1
    %746 = torch.aten.add.Scalar %result0_771, %float9.999990e-07_773, %int1_774 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %747 = torch.aten.rsqrt %746 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_775 = torch.constant.int 1
    %748 = torch.aten.sub.Tensor %743, %result1_772, %int1_775 : !torch.vtensor<[1,32,16,65536],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,65536],f32>
    %749 = torch.aten.mul.Tensor %748, %747 : !torch.vtensor<[1,32,16,65536],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,65536],f32>
    %int1_776 = torch.constant.int 1
    %int512_777 = torch.constant.int 512
    %int256_778 = torch.constant.int 256
    %int256_779 = torch.constant.int 256
    %750 = torch.prim.ListConstruct %int1_776, %int512_777, %int256_778, %int256_779 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %751 = torch.aten.view %749, %750 : !torch.vtensor<[1,32,16,65536],f32>, !torch.list<int> -> !torch.vtensor<[1,512,256,256],f32>
    %_params.vae.decoder.up_blocks.1.resnets.2.norm1.bias = util.global.load @_params.vae.decoder.up_blocks.1.resnets.2.norm1.bias : tensor<512xf16>
    %752 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.2.norm1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_780 = torch.constant.int 0
    %753 = torch.aten.unsqueeze %752, %int0_780 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_781 = torch.constant.int 2
    %754 = torch.aten.unsqueeze %753, %int2_781 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_782 = torch.constant.int 3
    %755 = torch.aten.unsqueeze %754, %int3_782 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.up_blocks.1.resnets.2.norm1.weight = util.global.load @_params.vae.decoder.up_blocks.1.resnets.2.norm1.weight : tensor<512xf16>
    %756 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.2.norm1.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_783 = torch.constant.int 0
    %757 = torch.aten.unsqueeze %756, %int0_783 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_784 = torch.constant.int 2
    %758 = torch.aten.unsqueeze %757, %int2_784 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_785 = torch.constant.int 3
    %759 = torch.aten.unsqueeze %758, %int3_785 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %760 = torch.aten.mul.Tensor %751, %759 : !torch.vtensor<[1,512,256,256],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,256,256],f32>
    %int1_786 = torch.constant.int 1
    %761 = torch.aten.add.Tensor %760, %755, %int1_786 : !torch.vtensor<[1,512,256,256],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f32>
    %int5_787 = torch.constant.int 5
    %762 = torch.prims.convert_element_type %761, %int5_787 : !torch.vtensor<[1,512,256,256],f32>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int5_788 = torch.constant.int 5
    %763 = torch.prims.convert_element_type %result1_772, %int5_788 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_789 = torch.constant.int 5
    %764 = torch.prims.convert_element_type %747, %int5_789 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_790 = torch.constant.int 3
    %765 = torch.prim.ListConstruct %int3_790 : (!torch.int) -> !torch.list<int>
    %766 = torch.prims.squeeze %763, %765 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_791 = torch.constant.int 2
    %767 = torch.prim.ListConstruct %int2_791 : (!torch.int) -> !torch.list<int>
    %768 = torch.prims.squeeze %766, %767 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_792 = torch.constant.int 3
    %769 = torch.prim.ListConstruct %int3_792 : (!torch.int) -> !torch.list<int>
    %770 = torch.prims.squeeze %764, %769 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_793 = torch.constant.int 2
    %771 = torch.prim.ListConstruct %int2_793 : (!torch.int) -> !torch.list<int>
    %772 = torch.prims.squeeze %770, %771 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %773 = torch.aten.detach %768 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %774 = torch.aten.detach %772 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %775 = torch.aten.silu %762 : !torch.vtensor<[1,512,256,256],f16> -> !torch.vtensor<[1,512,256,256],f16>
    %_params.vae.decoder.up_blocks.1.resnets.2.conv1.weight = util.global.load @_params.vae.decoder.up_blocks.1.resnets.2.conv1.weight : tensor<512x512x3x3xf16>
    %776 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.2.conv1.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.up_blocks.1.resnets.2.conv1.bias = util.global.load @_params.vae.decoder.up_blocks.1.resnets.2.conv1.bias : tensor<512xf16>
    %777 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.2.conv1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_794 = torch.constant.int 1
    %int1_795 = torch.constant.int 1
    %778 = torch.prim.ListConstruct %int1_794, %int1_795 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_796 = torch.constant.int 1
    %int1_797 = torch.constant.int 1
    %779 = torch.prim.ListConstruct %int1_796, %int1_797 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_798 = torch.constant.int 1
    %int1_799 = torch.constant.int 1
    %780 = torch.prim.ListConstruct %int1_798, %int1_799 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_800 = torch.constant.bool false
    %int0_801 = torch.constant.int 0
    %int0_802 = torch.constant.int 0
    %781 = torch.prim.ListConstruct %int0_801, %int0_802 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_803 = torch.constant.int 1
    %782 = torch.aten.convolution %775, %776, %777, %778, %779, %780, %false_800, %781, %int1_803 : !torch.vtensor<[1,512,256,256],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int2_804 = torch.constant.int 2
    %783 = torch.aten.clone %782, %int2_804 : !torch.vtensor<[1,512,256,256],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int1_805 = torch.constant.int 1
    %int32_806 = torch.constant.int 32
    %int16_807 = torch.constant.int 16
    %int65536_808 = torch.constant.int 65536
    %784 = torch.prim.ListConstruct %int1_805, %int32_806, %int16_807, %int65536_808 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %785 = torch.aten.view %783, %784 : !torch.vtensor<[1,512,256,256],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,65536],f16>
    %int6_809 = torch.constant.int 6
    %786 = torch.prims.convert_element_type %785, %int6_809 : !torch.vtensor<[1,32,16,65536],f16>, !torch.int -> !torch.vtensor<[1,32,16,65536],f32>
    %int2_810 = torch.constant.int 2
    %int3_811 = torch.constant.int 3
    %787 = torch.prim.ListConstruct %int2_810, %int3_811 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_812 = torch.constant.int 0
    %true_813 = torch.constant.bool true
    %result0_814, %result1_815 = torch.aten.var_mean.correction %786, %787, %int0_812, %true_813 : !torch.vtensor<[1,32,16,65536],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_816 = torch.constant.float 9.9999999999999995E-7
    %int1_817 = torch.constant.int 1
    %788 = torch.aten.add.Scalar %result0_814, %float9.999990e-07_816, %int1_817 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %789 = torch.aten.rsqrt %788 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_818 = torch.constant.int 1
    %790 = torch.aten.sub.Tensor %785, %result1_815, %int1_818 : !torch.vtensor<[1,32,16,65536],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,65536],f32>
    %791 = torch.aten.mul.Tensor %790, %789 : !torch.vtensor<[1,32,16,65536],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,65536],f32>
    %int1_819 = torch.constant.int 1
    %int512_820 = torch.constant.int 512
    %int256_821 = torch.constant.int 256
    %int256_822 = torch.constant.int 256
    %792 = torch.prim.ListConstruct %int1_819, %int512_820, %int256_821, %int256_822 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %793 = torch.aten.view %791, %792 : !torch.vtensor<[1,32,16,65536],f32>, !torch.list<int> -> !torch.vtensor<[1,512,256,256],f32>
    %_params.vae.decoder.up_blocks.1.resnets.2.norm2.bias = util.global.load @_params.vae.decoder.up_blocks.1.resnets.2.norm2.bias : tensor<512xf16>
    %794 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.2.norm2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_823 = torch.constant.int 0
    %795 = torch.aten.unsqueeze %794, %int0_823 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_824 = torch.constant.int 2
    %796 = torch.aten.unsqueeze %795, %int2_824 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_825 = torch.constant.int 3
    %797 = torch.aten.unsqueeze %796, %int3_825 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.up_blocks.1.resnets.2.norm2.weight = util.global.load @_params.vae.decoder.up_blocks.1.resnets.2.norm2.weight : tensor<512xf16>
    %798 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.2.norm2.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_826 = torch.constant.int 0
    %799 = torch.aten.unsqueeze %798, %int0_826 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_827 = torch.constant.int 2
    %800 = torch.aten.unsqueeze %799, %int2_827 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_828 = torch.constant.int 3
    %801 = torch.aten.unsqueeze %800, %int3_828 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %802 = torch.aten.mul.Tensor %793, %801 : !torch.vtensor<[1,512,256,256],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,256,256],f32>
    %int1_829 = torch.constant.int 1
    %803 = torch.aten.add.Tensor %802, %797, %int1_829 : !torch.vtensor<[1,512,256,256],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f32>
    %int5_830 = torch.constant.int 5
    %804 = torch.prims.convert_element_type %803, %int5_830 : !torch.vtensor<[1,512,256,256],f32>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int5_831 = torch.constant.int 5
    %805 = torch.prims.convert_element_type %result1_815, %int5_831 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_832 = torch.constant.int 5
    %806 = torch.prims.convert_element_type %789, %int5_832 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_833 = torch.constant.int 3
    %807 = torch.prim.ListConstruct %int3_833 : (!torch.int) -> !torch.list<int>
    %808 = torch.prims.squeeze %805, %807 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_834 = torch.constant.int 2
    %809 = torch.prim.ListConstruct %int2_834 : (!torch.int) -> !torch.list<int>
    %810 = torch.prims.squeeze %808, %809 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_835 = torch.constant.int 3
    %811 = torch.prim.ListConstruct %int3_835 : (!torch.int) -> !torch.list<int>
    %812 = torch.prims.squeeze %806, %811 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_836 = torch.constant.int 2
    %813 = torch.prim.ListConstruct %int2_836 : (!torch.int) -> !torch.list<int>
    %814 = torch.prims.squeeze %812, %813 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %815 = torch.aten.detach %810 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %816 = torch.aten.detach %814 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %817 = torch.aten.silu %804 : !torch.vtensor<[1,512,256,256],f16> -> !torch.vtensor<[1,512,256,256],f16>
    %none_837 = torch.constant.none
    %818 = torch.aten.clone %817, %none_837 : !torch.vtensor<[1,512,256,256],f16>, !torch.none -> !torch.vtensor<[1,512,256,256],f16>
    %_params.vae.decoder.up_blocks.1.resnets.2.conv2.weight = util.global.load @_params.vae.decoder.up_blocks.1.resnets.2.conv2.weight : tensor<512x512x3x3xf16>
    %819 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.2.conv2.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.up_blocks.1.resnets.2.conv2.bias = util.global.load @_params.vae.decoder.up_blocks.1.resnets.2.conv2.bias : tensor<512xf16>
    %820 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.resnets.2.conv2.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_838 = torch.constant.int 1
    %int1_839 = torch.constant.int 1
    %821 = torch.prim.ListConstruct %int1_838, %int1_839 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_840 = torch.constant.int 1
    %int1_841 = torch.constant.int 1
    %822 = torch.prim.ListConstruct %int1_840, %int1_841 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_842 = torch.constant.int 1
    %int1_843 = torch.constant.int 1
    %823 = torch.prim.ListConstruct %int1_842, %int1_843 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_844 = torch.constant.bool false
    %int0_845 = torch.constant.int 0
    %int0_846 = torch.constant.int 0
    %824 = torch.prim.ListConstruct %int0_845, %int0_846 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_847 = torch.constant.int 1
    %825 = torch.aten.convolution %818, %819, %820, %821, %822, %823, %false_844, %824, %int1_847 : !torch.vtensor<[1,512,256,256],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %int1_848 = torch.constant.int 1
    %826 = torch.aten.add.Tensor %740, %825, %int1_848 : !torch.vtensor<[1,512,256,256],f16>, !torch.vtensor<[1,512,256,256],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f16>
    %float1.000000e00_849 = torch.constant.float 1.000000e+00
    %827 = torch.aten.div.Scalar %826, %float1.000000e00_849 : !torch.vtensor<[1,512,256,256],f16>, !torch.float -> !torch.vtensor<[1,512,256,256],f16>
    %int6_850 = torch.constant.int 6
    %828 = torch.prims.convert_element_type %827, %int6_850 : !torch.vtensor<[1,512,256,256],f16>, !torch.int -> !torch.vtensor<[1,512,256,256],f32>
    %int512_851 = torch.constant.int 512
    %int6_852 = torch.constant.int 6
    %none_853 = torch.constant.none
    %cpu_854 = torch.constant.device "cpu"
    %false_855 = torch.constant.bool false
    %829 = torch.aten.arange %int512_851, %int6_852, %none_853, %cpu_854, %false_855 : !torch.int, !torch.int, !torch.none, !torch.Device, !torch.bool -> !torch.vtensor<[512],f32>
    %float0.000000e00_856 = torch.constant.float 0.000000e+00
    %int1_857 = torch.constant.int 1
    %830 = torch.aten.add.Scalar %829, %float0.000000e00_856, %int1_857 : !torch.vtensor<[512],f32>, !torch.float, !torch.int -> !torch.vtensor<[512],f32>
    %float5.000000e-01_858 = torch.constant.float 5.000000e-01
    %831 = torch.aten.mul.Scalar %830, %float5.000000e-01_858 : !torch.vtensor<[512],f32>, !torch.float -> !torch.vtensor<[512],f32>
    %int4_859 = torch.constant.int 4
    %832 = torch.prims.convert_element_type %831, %int4_859 : !torch.vtensor<[512],f32>, !torch.int -> !torch.vtensor<[512],si64>
    %int-1_860 = torch.constant.int -1
    %833 = torch.aten.unsqueeze %832, %int-1_860 : !torch.vtensor<[512],si64>, !torch.int -> !torch.vtensor<[512,1],si64>
    %int512_861 = torch.constant.int 512
    %int6_862 = torch.constant.int 6
    %none_863 = torch.constant.none
    %cpu_864 = torch.constant.device "cpu"
    %false_865 = torch.constant.bool false
    %834 = torch.aten.arange %int512_861, %int6_862, %none_863, %cpu_864, %false_865 : !torch.int, !torch.int, !torch.none, !torch.Device, !torch.bool -> !torch.vtensor<[512],f32>
    %float0.000000e00_866 = torch.constant.float 0.000000e+00
    %int1_867 = torch.constant.int 1
    %835 = torch.aten.add.Scalar %834, %float0.000000e00_866, %int1_867 : !torch.vtensor<[512],f32>, !torch.float, !torch.int -> !torch.vtensor<[512],f32>
    %float5.000000e-01_868 = torch.constant.float 5.000000e-01
    %836 = torch.aten.mul.Scalar %835, %float5.000000e-01_868 : !torch.vtensor<[512],f32>, !torch.float -> !torch.vtensor<[512],f32>
    %int4_869 = torch.constant.int 4
    %837 = torch.prims.convert_element_type %836, %int4_869 : !torch.vtensor<[512],f32>, !torch.int -> !torch.vtensor<[512],si64>
    %none_870 = torch.constant.none
    %none_871 = torch.constant.none
    %838 = torch.prim.ListConstruct %none_870, %none_871, %833, %837 : (!torch.none, !torch.none, !torch.vtensor<[512,1],si64>, !torch.vtensor<[512],si64>) -> !torch.list<optional<vtensor>>
    %839 = torch.aten.index.Tensor %828, %838 : !torch.vtensor<[1,512,256,256],f32>, !torch.list<optional<vtensor>> -> !torch.vtensor<[1,512,512,512],f32>
    %int2_872 = torch.constant.int 2
    %840 = torch.aten.clone %839, %int2_872 : !torch.vtensor<[1,512,512,512],f32>, !torch.int -> !torch.vtensor<[1,512,512,512],f32>
    %int5_873 = torch.constant.int 5
    %841 = torch.prims.convert_element_type %840, %int5_873 : !torch.vtensor<[1,512,512,512],f32>, !torch.int -> !torch.vtensor<[1,512,512,512],f16>
    %_params.vae.decoder.up_blocks.1.upsamplers.0.conv.weight = util.global.load @_params.vae.decoder.up_blocks.1.upsamplers.0.conv.weight : tensor<512x512x3x3xf16>
    %842 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.upsamplers.0.conv.weight : tensor<512x512x3x3xf16> -> !torch.vtensor<[512,512,3,3],f16>
    %_params.vae.decoder.up_blocks.1.upsamplers.0.conv.bias = util.global.load @_params.vae.decoder.up_blocks.1.upsamplers.0.conv.bias : tensor<512xf16>
    %843 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.1.upsamplers.0.conv.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int1_874 = torch.constant.int 1
    %int1_875 = torch.constant.int 1
    %844 = torch.prim.ListConstruct %int1_874, %int1_875 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_876 = torch.constant.int 1
    %int1_877 = torch.constant.int 1
    %845 = torch.prim.ListConstruct %int1_876, %int1_877 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_878 = torch.constant.int 1
    %int1_879 = torch.constant.int 1
    %846 = torch.prim.ListConstruct %int1_878, %int1_879 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_880 = torch.constant.bool false
    %int0_881 = torch.constant.int 0
    %int0_882 = torch.constant.int 0
    %847 = torch.prim.ListConstruct %int0_881, %int0_882 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_883 = torch.constant.int 1
    %848 = torch.aten.convolution %841, %842, %843, %844, %845, %846, %false_880, %847, %int1_883 : !torch.vtensor<[1,512,512,512],f16>, !torch.vtensor<[512,512,3,3],f16>, !torch.vtensor<[512],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,512,512,512],f16>
    %int2_884 = torch.constant.int 2
    %849 = torch.aten.clone %848, %int2_884 : !torch.vtensor<[1,512,512,512],f16>, !torch.int -> !torch.vtensor<[1,512,512,512],f16>
    %int1_885 = torch.constant.int 1
    %int32_886 = torch.constant.int 32
    %int16_887 = torch.constant.int 16
    %int262144 = torch.constant.int 262144
    %850 = torch.prim.ListConstruct %int1_885, %int32_886, %int16_887, %int262144 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %851 = torch.aten.view %849, %850 : !torch.vtensor<[1,512,512,512],f16>, !torch.list<int> -> !torch.vtensor<[1,32,16,262144],f16>
    %int6_888 = torch.constant.int 6
    %852 = torch.prims.convert_element_type %851, %int6_888 : !torch.vtensor<[1,32,16,262144],f16>, !torch.int -> !torch.vtensor<[1,32,16,262144],f32>
    %int2_889 = torch.constant.int 2
    %int3_890 = torch.constant.int 3
    %853 = torch.prim.ListConstruct %int2_889, %int3_890 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_891 = torch.constant.int 0
    %true_892 = torch.constant.bool true
    %result0_893, %result1_894 = torch.aten.var_mean.correction %852, %853, %int0_891, %true_892 : !torch.vtensor<[1,32,16,262144],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_895 = torch.constant.float 9.9999999999999995E-7
    %int1_896 = torch.constant.int 1
    %854 = torch.aten.add.Scalar %result0_893, %float9.999990e-07_895, %int1_896 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %855 = torch.aten.rsqrt %854 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_897 = torch.constant.int 1
    %856 = torch.aten.sub.Tensor %851, %result1_894, %int1_897 : !torch.vtensor<[1,32,16,262144],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,16,262144],f32>
    %857 = torch.aten.mul.Tensor %856, %855 : !torch.vtensor<[1,32,16,262144],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,16,262144],f32>
    %int1_898 = torch.constant.int 1
    %int512_899 = torch.constant.int 512
    %int512_900 = torch.constant.int 512
    %int512_901 = torch.constant.int 512
    %858 = torch.prim.ListConstruct %int1_898, %int512_899, %int512_900, %int512_901 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %859 = torch.aten.view %857, %858 : !torch.vtensor<[1,32,16,262144],f32>, !torch.list<int> -> !torch.vtensor<[1,512,512,512],f32>
    %_params.vae.decoder.up_blocks.2.resnets.0.norm1.bias = util.global.load @_params.vae.decoder.up_blocks.2.resnets.0.norm1.bias : tensor<512xf16>
    %860 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.0.norm1.bias : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_902 = torch.constant.int 0
    %861 = torch.aten.unsqueeze %860, %int0_902 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_903 = torch.constant.int 2
    %862 = torch.aten.unsqueeze %861, %int2_903 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_904 = torch.constant.int 3
    %863 = torch.aten.unsqueeze %862, %int3_904 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %_params.vae.decoder.up_blocks.2.resnets.0.norm1.weight = util.global.load @_params.vae.decoder.up_blocks.2.resnets.0.norm1.weight : tensor<512xf16>
    %864 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.0.norm1.weight : tensor<512xf16> -> !torch.vtensor<[512],f16>
    %int0_905 = torch.constant.int 0
    %865 = torch.aten.unsqueeze %864, %int0_905 : !torch.vtensor<[512],f16>, !torch.int -> !torch.vtensor<[1,512],f16>
    %int2_906 = torch.constant.int 2
    %866 = torch.aten.unsqueeze %865, %int2_906 : !torch.vtensor<[1,512],f16>, !torch.int -> !torch.vtensor<[1,512,1],f16>
    %int3_907 = torch.constant.int 3
    %867 = torch.aten.unsqueeze %866, %int3_907 : !torch.vtensor<[1,512,1],f16>, !torch.int -> !torch.vtensor<[1,512,1,1],f16>
    %868 = torch.aten.mul.Tensor %859, %867 : !torch.vtensor<[1,512,512,512],f32>, !torch.vtensor<[1,512,1,1],f16> -> !torch.vtensor<[1,512,512,512],f32>
    %int1_908 = torch.constant.int 1
    %869 = torch.aten.add.Tensor %868, %863, %int1_908 : !torch.vtensor<[1,512,512,512],f32>, !torch.vtensor<[1,512,1,1],f16>, !torch.int -> !torch.vtensor<[1,512,512,512],f32>
    %int5_909 = torch.constant.int 5
    %870 = torch.prims.convert_element_type %869, %int5_909 : !torch.vtensor<[1,512,512,512],f32>, !torch.int -> !torch.vtensor<[1,512,512,512],f16>
    %int5_910 = torch.constant.int 5
    %871 = torch.prims.convert_element_type %result1_894, %int5_910 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_911 = torch.constant.int 5
    %872 = torch.prims.convert_element_type %855, %int5_911 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_912 = torch.constant.int 3
    %873 = torch.prim.ListConstruct %int3_912 : (!torch.int) -> !torch.list<int>
    %874 = torch.prims.squeeze %871, %873 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_913 = torch.constant.int 2
    %875 = torch.prim.ListConstruct %int2_913 : (!torch.int) -> !torch.list<int>
    %876 = torch.prims.squeeze %874, %875 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_914 = torch.constant.int 3
    %877 = torch.prim.ListConstruct %int3_914 : (!torch.int) -> !torch.list<int>
    %878 = torch.prims.squeeze %872, %877 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_915 = torch.constant.int 2
    %879 = torch.prim.ListConstruct %int2_915 : (!torch.int) -> !torch.list<int>
    %880 = torch.prims.squeeze %878, %879 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %881 = torch.aten.detach %876 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %882 = torch.aten.detach %880 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %883 = torch.aten.silu %870 : !torch.vtensor<[1,512,512,512],f16> -> !torch.vtensor<[1,512,512,512],f16>
    %_params.vae.decoder.up_blocks.2.resnets.0.conv1.weight = util.global.load @_params.vae.decoder.up_blocks.2.resnets.0.conv1.weight : tensor<256x512x3x3xf16>
    %884 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.0.conv1.weight : tensor<256x512x3x3xf16> -> !torch.vtensor<[256,512,3,3],f16>
    %_params.vae.decoder.up_blocks.2.resnets.0.conv1.bias = util.global.load @_params.vae.decoder.up_blocks.2.resnets.0.conv1.bias : tensor<256xf16>
    %885 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.0.conv1.bias : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int1_916 = torch.constant.int 1
    %int1_917 = torch.constant.int 1
    %886 = torch.prim.ListConstruct %int1_916, %int1_917 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_918 = torch.constant.int 1
    %int1_919 = torch.constant.int 1
    %887 = torch.prim.ListConstruct %int1_918, %int1_919 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_920 = torch.constant.int 1
    %int1_921 = torch.constant.int 1
    %888 = torch.prim.ListConstruct %int1_920, %int1_921 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_922 = torch.constant.bool false
    %int0_923 = torch.constant.int 0
    %int0_924 = torch.constant.int 0
    %889 = torch.prim.ListConstruct %int0_923, %int0_924 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_925 = torch.constant.int 1
    %890 = torch.aten.convolution %883, %884, %885, %886, %887, %888, %false_922, %889, %int1_925 : !torch.vtensor<[1,512,512,512],f16>, !torch.vtensor<[256,512,3,3],f16>, !torch.vtensor<[256],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int2_926 = torch.constant.int 2
    %891 = torch.aten.clone %890, %int2_926 : !torch.vtensor<[1,256,512,512],f16>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int1_927 = torch.constant.int 1
    %int32_928 = torch.constant.int 32
    %int8 = torch.constant.int 8
    %int262144_929 = torch.constant.int 262144
    %892 = torch.prim.ListConstruct %int1_927, %int32_928, %int8, %int262144_929 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %893 = torch.aten.view %891, %892 : !torch.vtensor<[1,256,512,512],f16>, !torch.list<int> -> !torch.vtensor<[1,32,8,262144],f16>
    %int6_930 = torch.constant.int 6
    %894 = torch.prims.convert_element_type %893, %int6_930 : !torch.vtensor<[1,32,8,262144],f16>, !torch.int -> !torch.vtensor<[1,32,8,262144],f32>
    %int2_931 = torch.constant.int 2
    %int3_932 = torch.constant.int 3
    %895 = torch.prim.ListConstruct %int2_931, %int3_932 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_933 = torch.constant.int 0
    %true_934 = torch.constant.bool true
    %result0_935, %result1_936 = torch.aten.var_mean.correction %894, %895, %int0_933, %true_934 : !torch.vtensor<[1,32,8,262144],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_937 = torch.constant.float 9.9999999999999995E-7
    %int1_938 = torch.constant.int 1
    %896 = torch.aten.add.Scalar %result0_935, %float9.999990e-07_937, %int1_938 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %897 = torch.aten.rsqrt %896 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_939 = torch.constant.int 1
    %898 = torch.aten.sub.Tensor %893, %result1_936, %int1_939 : !torch.vtensor<[1,32,8,262144],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,8,262144],f32>
    %899 = torch.aten.mul.Tensor %898, %897 : !torch.vtensor<[1,32,8,262144],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,8,262144],f32>
    %int1_940 = torch.constant.int 1
    %int256_941 = torch.constant.int 256
    %int512_942 = torch.constant.int 512
    %int512_943 = torch.constant.int 512
    %900 = torch.prim.ListConstruct %int1_940, %int256_941, %int512_942, %int512_943 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %901 = torch.aten.view %899, %900 : !torch.vtensor<[1,32,8,262144],f32>, !torch.list<int> -> !torch.vtensor<[1,256,512,512],f32>
    %_params.vae.decoder.up_blocks.2.resnets.0.norm2.bias = util.global.load @_params.vae.decoder.up_blocks.2.resnets.0.norm2.bias : tensor<256xf16>
    %902 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.0.norm2.bias : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int0_944 = torch.constant.int 0
    %903 = torch.aten.unsqueeze %902, %int0_944 : !torch.vtensor<[256],f16>, !torch.int -> !torch.vtensor<[1,256],f16>
    %int2_945 = torch.constant.int 2
    %904 = torch.aten.unsqueeze %903, %int2_945 : !torch.vtensor<[1,256],f16>, !torch.int -> !torch.vtensor<[1,256,1],f16>
    %int3_946 = torch.constant.int 3
    %905 = torch.aten.unsqueeze %904, %int3_946 : !torch.vtensor<[1,256,1],f16>, !torch.int -> !torch.vtensor<[1,256,1,1],f16>
    %_params.vae.decoder.up_blocks.2.resnets.0.norm2.weight = util.global.load @_params.vae.decoder.up_blocks.2.resnets.0.norm2.weight : tensor<256xf16>
    %906 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.0.norm2.weight : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int0_947 = torch.constant.int 0
    %907 = torch.aten.unsqueeze %906, %int0_947 : !torch.vtensor<[256],f16>, !torch.int -> !torch.vtensor<[1,256],f16>
    %int2_948 = torch.constant.int 2
    %908 = torch.aten.unsqueeze %907, %int2_948 : !torch.vtensor<[1,256],f16>, !torch.int -> !torch.vtensor<[1,256,1],f16>
    %int3_949 = torch.constant.int 3
    %909 = torch.aten.unsqueeze %908, %int3_949 : !torch.vtensor<[1,256,1],f16>, !torch.int -> !torch.vtensor<[1,256,1,1],f16>
    %910 = torch.aten.mul.Tensor %901, %909 : !torch.vtensor<[1,256,512,512],f32>, !torch.vtensor<[1,256,1,1],f16> -> !torch.vtensor<[1,256,512,512],f32>
    %int1_950 = torch.constant.int 1
    %911 = torch.aten.add.Tensor %910, %905, %int1_950 : !torch.vtensor<[1,256,512,512],f32>, !torch.vtensor<[1,256,1,1],f16>, !torch.int -> !torch.vtensor<[1,256,512,512],f32>
    %int5_951 = torch.constant.int 5
    %912 = torch.prims.convert_element_type %911, %int5_951 : !torch.vtensor<[1,256,512,512],f32>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int5_952 = torch.constant.int 5
    %913 = torch.prims.convert_element_type %result1_936, %int5_952 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_953 = torch.constant.int 5
    %914 = torch.prims.convert_element_type %897, %int5_953 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_954 = torch.constant.int 3
    %915 = torch.prim.ListConstruct %int3_954 : (!torch.int) -> !torch.list<int>
    %916 = torch.prims.squeeze %913, %915 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_955 = torch.constant.int 2
    %917 = torch.prim.ListConstruct %int2_955 : (!torch.int) -> !torch.list<int>
    %918 = torch.prims.squeeze %916, %917 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_956 = torch.constant.int 3
    %919 = torch.prim.ListConstruct %int3_956 : (!torch.int) -> !torch.list<int>
    %920 = torch.prims.squeeze %914, %919 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_957 = torch.constant.int 2
    %921 = torch.prim.ListConstruct %int2_957 : (!torch.int) -> !torch.list<int>
    %922 = torch.prims.squeeze %920, %921 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %923 = torch.aten.detach %918 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %924 = torch.aten.detach %922 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %925 = torch.aten.silu %912 : !torch.vtensor<[1,256,512,512],f16> -> !torch.vtensor<[1,256,512,512],f16>
    %none_958 = torch.constant.none
    %926 = torch.aten.clone %925, %none_958 : !torch.vtensor<[1,256,512,512],f16>, !torch.none -> !torch.vtensor<[1,256,512,512],f16>
    %_params.vae.decoder.up_blocks.2.resnets.0.conv2.weight = util.global.load @_params.vae.decoder.up_blocks.2.resnets.0.conv2.weight : tensor<256x256x3x3xf16>
    %927 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.0.conv2.weight : tensor<256x256x3x3xf16> -> !torch.vtensor<[256,256,3,3],f16>
    %_params.vae.decoder.up_blocks.2.resnets.0.conv2.bias = util.global.load @_params.vae.decoder.up_blocks.2.resnets.0.conv2.bias : tensor<256xf16>
    %928 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.0.conv2.bias : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int1_959 = torch.constant.int 1
    %int1_960 = torch.constant.int 1
    %929 = torch.prim.ListConstruct %int1_959, %int1_960 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_961 = torch.constant.int 1
    %int1_962 = torch.constant.int 1
    %930 = torch.prim.ListConstruct %int1_961, %int1_962 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_963 = torch.constant.int 1
    %int1_964 = torch.constant.int 1
    %931 = torch.prim.ListConstruct %int1_963, %int1_964 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_965 = torch.constant.bool false
    %int0_966 = torch.constant.int 0
    %int0_967 = torch.constant.int 0
    %932 = torch.prim.ListConstruct %int0_966, %int0_967 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_968 = torch.constant.int 1
    %933 = torch.aten.convolution %926, %927, %928, %929, %930, %931, %false_965, %932, %int1_968 : !torch.vtensor<[1,256,512,512],f16>, !torch.vtensor<[256,256,3,3],f16>, !torch.vtensor<[256],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %_params.vae.decoder.up_blocks.2.resnets.0.conv_shortcut.weight = util.global.load @_params.vae.decoder.up_blocks.2.resnets.0.conv_shortcut.weight : tensor<256x512x1x1xf16>
    %934 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.0.conv_shortcut.weight : tensor<256x512x1x1xf16> -> !torch.vtensor<[256,512,1,1],f16>
    %_params.vae.decoder.up_blocks.2.resnets.0.conv_shortcut.bias = util.global.load @_params.vae.decoder.up_blocks.2.resnets.0.conv_shortcut.bias : tensor<256xf16>
    %935 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.0.conv_shortcut.bias : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int1_969 = torch.constant.int 1
    %int1_970 = torch.constant.int 1
    %936 = torch.prim.ListConstruct %int1_969, %int1_970 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_971 = torch.constant.int 0
    %int0_972 = torch.constant.int 0
    %937 = torch.prim.ListConstruct %int0_971, %int0_972 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_973 = torch.constant.int 1
    %int1_974 = torch.constant.int 1
    %938 = torch.prim.ListConstruct %int1_973, %int1_974 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_975 = torch.constant.bool false
    %int0_976 = torch.constant.int 0
    %int0_977 = torch.constant.int 0
    %939 = torch.prim.ListConstruct %int0_976, %int0_977 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_978 = torch.constant.int 1
    %940 = torch.aten.convolution %848, %934, %935, %936, %937, %938, %false_975, %939, %int1_978 : !torch.vtensor<[1,512,512,512],f16>, !torch.vtensor<[256,512,1,1],f16>, !torch.vtensor<[256],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int1_979 = torch.constant.int 1
    %941 = torch.aten.add.Tensor %940, %933, %int1_979 : !torch.vtensor<[1,256,512,512],f16>, !torch.vtensor<[1,256,512,512],f16>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %float1.000000e00_980 = torch.constant.float 1.000000e+00
    %942 = torch.aten.div.Scalar %941, %float1.000000e00_980 : !torch.vtensor<[1,256,512,512],f16>, !torch.float -> !torch.vtensor<[1,256,512,512],f16>
    %int2_981 = torch.constant.int 2
    %943 = torch.aten.clone %942, %int2_981 : !torch.vtensor<[1,256,512,512],f16>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int1_982 = torch.constant.int 1
    %int32_983 = torch.constant.int 32
    %int8_984 = torch.constant.int 8
    %int262144_985 = torch.constant.int 262144
    %944 = torch.prim.ListConstruct %int1_982, %int32_983, %int8_984, %int262144_985 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %945 = torch.aten.view %943, %944 : !torch.vtensor<[1,256,512,512],f16>, !torch.list<int> -> !torch.vtensor<[1,32,8,262144],f16>
    %int6_986 = torch.constant.int 6
    %946 = torch.prims.convert_element_type %945, %int6_986 : !torch.vtensor<[1,32,8,262144],f16>, !torch.int -> !torch.vtensor<[1,32,8,262144],f32>
    %int2_987 = torch.constant.int 2
    %int3_988 = torch.constant.int 3
    %947 = torch.prim.ListConstruct %int2_987, %int3_988 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_989 = torch.constant.int 0
    %true_990 = torch.constant.bool true
    %result0_991, %result1_992 = torch.aten.var_mean.correction %946, %947, %int0_989, %true_990 : !torch.vtensor<[1,32,8,262144],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_993 = torch.constant.float 9.9999999999999995E-7
    %int1_994 = torch.constant.int 1
    %948 = torch.aten.add.Scalar %result0_991, %float9.999990e-07_993, %int1_994 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %949 = torch.aten.rsqrt %948 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_995 = torch.constant.int 1
    %950 = torch.aten.sub.Tensor %945, %result1_992, %int1_995 : !torch.vtensor<[1,32,8,262144],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,8,262144],f32>
    %951 = torch.aten.mul.Tensor %950, %949 : !torch.vtensor<[1,32,8,262144],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,8,262144],f32>
    %int1_996 = torch.constant.int 1
    %int256_997 = torch.constant.int 256
    %int512_998 = torch.constant.int 512
    %int512_999 = torch.constant.int 512
    %952 = torch.prim.ListConstruct %int1_996, %int256_997, %int512_998, %int512_999 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %953 = torch.aten.view %951, %952 : !torch.vtensor<[1,32,8,262144],f32>, !torch.list<int> -> !torch.vtensor<[1,256,512,512],f32>
    %_params.vae.decoder.up_blocks.2.resnets.1.norm1.bias = util.global.load @_params.vae.decoder.up_blocks.2.resnets.1.norm1.bias : tensor<256xf16>
    %954 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.1.norm1.bias : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int0_1000 = torch.constant.int 0
    %955 = torch.aten.unsqueeze %954, %int0_1000 : !torch.vtensor<[256],f16>, !torch.int -> !torch.vtensor<[1,256],f16>
    %int2_1001 = torch.constant.int 2
    %956 = torch.aten.unsqueeze %955, %int2_1001 : !torch.vtensor<[1,256],f16>, !torch.int -> !torch.vtensor<[1,256,1],f16>
    %int3_1002 = torch.constant.int 3
    %957 = torch.aten.unsqueeze %956, %int3_1002 : !torch.vtensor<[1,256,1],f16>, !torch.int -> !torch.vtensor<[1,256,1,1],f16>
    %_params.vae.decoder.up_blocks.2.resnets.1.norm1.weight = util.global.load @_params.vae.decoder.up_blocks.2.resnets.1.norm1.weight : tensor<256xf16>
    %958 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.1.norm1.weight : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int0_1003 = torch.constant.int 0
    %959 = torch.aten.unsqueeze %958, %int0_1003 : !torch.vtensor<[256],f16>, !torch.int -> !torch.vtensor<[1,256],f16>
    %int2_1004 = torch.constant.int 2
    %960 = torch.aten.unsqueeze %959, %int2_1004 : !torch.vtensor<[1,256],f16>, !torch.int -> !torch.vtensor<[1,256,1],f16>
    %int3_1005 = torch.constant.int 3
    %961 = torch.aten.unsqueeze %960, %int3_1005 : !torch.vtensor<[1,256,1],f16>, !torch.int -> !torch.vtensor<[1,256,1,1],f16>
    %962 = torch.aten.mul.Tensor %953, %961 : !torch.vtensor<[1,256,512,512],f32>, !torch.vtensor<[1,256,1,1],f16> -> !torch.vtensor<[1,256,512,512],f32>
    %int1_1006 = torch.constant.int 1
    %963 = torch.aten.add.Tensor %962, %957, %int1_1006 : !torch.vtensor<[1,256,512,512],f32>, !torch.vtensor<[1,256,1,1],f16>, !torch.int -> !torch.vtensor<[1,256,512,512],f32>
    %int5_1007 = torch.constant.int 5
    %964 = torch.prims.convert_element_type %963, %int5_1007 : !torch.vtensor<[1,256,512,512],f32>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int5_1008 = torch.constant.int 5
    %965 = torch.prims.convert_element_type %result1_992, %int5_1008 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_1009 = torch.constant.int 5
    %966 = torch.prims.convert_element_type %949, %int5_1009 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_1010 = torch.constant.int 3
    %967 = torch.prim.ListConstruct %int3_1010 : (!torch.int) -> !torch.list<int>
    %968 = torch.prims.squeeze %965, %967 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1011 = torch.constant.int 2
    %969 = torch.prim.ListConstruct %int2_1011 : (!torch.int) -> !torch.list<int>
    %970 = torch.prims.squeeze %968, %969 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_1012 = torch.constant.int 3
    %971 = torch.prim.ListConstruct %int3_1012 : (!torch.int) -> !torch.list<int>
    %972 = torch.prims.squeeze %966, %971 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1013 = torch.constant.int 2
    %973 = torch.prim.ListConstruct %int2_1013 : (!torch.int) -> !torch.list<int>
    %974 = torch.prims.squeeze %972, %973 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %975 = torch.aten.detach %970 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %976 = torch.aten.detach %974 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %977 = torch.aten.silu %964 : !torch.vtensor<[1,256,512,512],f16> -> !torch.vtensor<[1,256,512,512],f16>
    %_params.vae.decoder.up_blocks.2.resnets.1.conv1.weight = util.global.load @_params.vae.decoder.up_blocks.2.resnets.1.conv1.weight : tensor<256x256x3x3xf16>
    %978 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.1.conv1.weight : tensor<256x256x3x3xf16> -> !torch.vtensor<[256,256,3,3],f16>
    %_params.vae.decoder.up_blocks.2.resnets.1.conv1.bias = util.global.load @_params.vae.decoder.up_blocks.2.resnets.1.conv1.bias : tensor<256xf16>
    %979 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.1.conv1.bias : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int1_1014 = torch.constant.int 1
    %int1_1015 = torch.constant.int 1
    %980 = torch.prim.ListConstruct %int1_1014, %int1_1015 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1016 = torch.constant.int 1
    %int1_1017 = torch.constant.int 1
    %981 = torch.prim.ListConstruct %int1_1016, %int1_1017 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1018 = torch.constant.int 1
    %int1_1019 = torch.constant.int 1
    %982 = torch.prim.ListConstruct %int1_1018, %int1_1019 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_1020 = torch.constant.bool false
    %int0_1021 = torch.constant.int 0
    %int0_1022 = torch.constant.int 0
    %983 = torch.prim.ListConstruct %int0_1021, %int0_1022 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1023 = torch.constant.int 1
    %984 = torch.aten.convolution %977, %978, %979, %980, %981, %982, %false_1020, %983, %int1_1023 : !torch.vtensor<[1,256,512,512],f16>, !torch.vtensor<[256,256,3,3],f16>, !torch.vtensor<[256],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int2_1024 = torch.constant.int 2
    %985 = torch.aten.clone %984, %int2_1024 : !torch.vtensor<[1,256,512,512],f16>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int1_1025 = torch.constant.int 1
    %int32_1026 = torch.constant.int 32
    %int8_1027 = torch.constant.int 8
    %int262144_1028 = torch.constant.int 262144
    %986 = torch.prim.ListConstruct %int1_1025, %int32_1026, %int8_1027, %int262144_1028 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %987 = torch.aten.view %985, %986 : !torch.vtensor<[1,256,512,512],f16>, !torch.list<int> -> !torch.vtensor<[1,32,8,262144],f16>
    %int6_1029 = torch.constant.int 6
    %988 = torch.prims.convert_element_type %987, %int6_1029 : !torch.vtensor<[1,32,8,262144],f16>, !torch.int -> !torch.vtensor<[1,32,8,262144],f32>
    %int2_1030 = torch.constant.int 2
    %int3_1031 = torch.constant.int 3
    %989 = torch.prim.ListConstruct %int2_1030, %int3_1031 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_1032 = torch.constant.int 0
    %true_1033 = torch.constant.bool true
    %result0_1034, %result1_1035 = torch.aten.var_mean.correction %988, %989, %int0_1032, %true_1033 : !torch.vtensor<[1,32,8,262144],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_1036 = torch.constant.float 9.9999999999999995E-7
    %int1_1037 = torch.constant.int 1
    %990 = torch.aten.add.Scalar %result0_1034, %float9.999990e-07_1036, %int1_1037 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %991 = torch.aten.rsqrt %990 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_1038 = torch.constant.int 1
    %992 = torch.aten.sub.Tensor %987, %result1_1035, %int1_1038 : !torch.vtensor<[1,32,8,262144],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,8,262144],f32>
    %993 = torch.aten.mul.Tensor %992, %991 : !torch.vtensor<[1,32,8,262144],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,8,262144],f32>
    %int1_1039 = torch.constant.int 1
    %int256_1040 = torch.constant.int 256
    %int512_1041 = torch.constant.int 512
    %int512_1042 = torch.constant.int 512
    %994 = torch.prim.ListConstruct %int1_1039, %int256_1040, %int512_1041, %int512_1042 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %995 = torch.aten.view %993, %994 : !torch.vtensor<[1,32,8,262144],f32>, !torch.list<int> -> !torch.vtensor<[1,256,512,512],f32>
    %_params.vae.decoder.up_blocks.2.resnets.1.norm2.bias = util.global.load @_params.vae.decoder.up_blocks.2.resnets.1.norm2.bias : tensor<256xf16>
    %996 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.1.norm2.bias : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int0_1043 = torch.constant.int 0
    %997 = torch.aten.unsqueeze %996, %int0_1043 : !torch.vtensor<[256],f16>, !torch.int -> !torch.vtensor<[1,256],f16>
    %int2_1044 = torch.constant.int 2
    %998 = torch.aten.unsqueeze %997, %int2_1044 : !torch.vtensor<[1,256],f16>, !torch.int -> !torch.vtensor<[1,256,1],f16>
    %int3_1045 = torch.constant.int 3
    %999 = torch.aten.unsqueeze %998, %int3_1045 : !torch.vtensor<[1,256,1],f16>, !torch.int -> !torch.vtensor<[1,256,1,1],f16>
    %_params.vae.decoder.up_blocks.2.resnets.1.norm2.weight = util.global.load @_params.vae.decoder.up_blocks.2.resnets.1.norm2.weight : tensor<256xf16>
    %1000 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.1.norm2.weight : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int0_1046 = torch.constant.int 0
    %1001 = torch.aten.unsqueeze %1000, %int0_1046 : !torch.vtensor<[256],f16>, !torch.int -> !torch.vtensor<[1,256],f16>
    %int2_1047 = torch.constant.int 2
    %1002 = torch.aten.unsqueeze %1001, %int2_1047 : !torch.vtensor<[1,256],f16>, !torch.int -> !torch.vtensor<[1,256,1],f16>
    %int3_1048 = torch.constant.int 3
    %1003 = torch.aten.unsqueeze %1002, %int3_1048 : !torch.vtensor<[1,256,1],f16>, !torch.int -> !torch.vtensor<[1,256,1,1],f16>
    %1004 = torch.aten.mul.Tensor %995, %1003 : !torch.vtensor<[1,256,512,512],f32>, !torch.vtensor<[1,256,1,1],f16> -> !torch.vtensor<[1,256,512,512],f32>
    %int1_1049 = torch.constant.int 1
    %1005 = torch.aten.add.Tensor %1004, %999, %int1_1049 : !torch.vtensor<[1,256,512,512],f32>, !torch.vtensor<[1,256,1,1],f16>, !torch.int -> !torch.vtensor<[1,256,512,512],f32>
    %int5_1050 = torch.constant.int 5
    %1006 = torch.prims.convert_element_type %1005, %int5_1050 : !torch.vtensor<[1,256,512,512],f32>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int5_1051 = torch.constant.int 5
    %1007 = torch.prims.convert_element_type %result1_1035, %int5_1051 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_1052 = torch.constant.int 5
    %1008 = torch.prims.convert_element_type %991, %int5_1052 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_1053 = torch.constant.int 3
    %1009 = torch.prim.ListConstruct %int3_1053 : (!torch.int) -> !torch.list<int>
    %1010 = torch.prims.squeeze %1007, %1009 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1054 = torch.constant.int 2
    %1011 = torch.prim.ListConstruct %int2_1054 : (!torch.int) -> !torch.list<int>
    %1012 = torch.prims.squeeze %1010, %1011 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_1055 = torch.constant.int 3
    %1013 = torch.prim.ListConstruct %int3_1055 : (!torch.int) -> !torch.list<int>
    %1014 = torch.prims.squeeze %1008, %1013 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1056 = torch.constant.int 2
    %1015 = torch.prim.ListConstruct %int2_1056 : (!torch.int) -> !torch.list<int>
    %1016 = torch.prims.squeeze %1014, %1015 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %1017 = torch.aten.detach %1012 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1018 = torch.aten.detach %1016 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1019 = torch.aten.silu %1006 : !torch.vtensor<[1,256,512,512],f16> -> !torch.vtensor<[1,256,512,512],f16>
    %none_1057 = torch.constant.none
    %1020 = torch.aten.clone %1019, %none_1057 : !torch.vtensor<[1,256,512,512],f16>, !torch.none -> !torch.vtensor<[1,256,512,512],f16>
    %_params.vae.decoder.up_blocks.2.resnets.1.conv2.weight = util.global.load @_params.vae.decoder.up_blocks.2.resnets.1.conv2.weight : tensor<256x256x3x3xf16>
    %1021 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.1.conv2.weight : tensor<256x256x3x3xf16> -> !torch.vtensor<[256,256,3,3],f16>
    %_params.vae.decoder.up_blocks.2.resnets.1.conv2.bias = util.global.load @_params.vae.decoder.up_blocks.2.resnets.1.conv2.bias : tensor<256xf16>
    %1022 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.1.conv2.bias : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int1_1058 = torch.constant.int 1
    %int1_1059 = torch.constant.int 1
    %1023 = torch.prim.ListConstruct %int1_1058, %int1_1059 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1060 = torch.constant.int 1
    %int1_1061 = torch.constant.int 1
    %1024 = torch.prim.ListConstruct %int1_1060, %int1_1061 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1062 = torch.constant.int 1
    %int1_1063 = torch.constant.int 1
    %1025 = torch.prim.ListConstruct %int1_1062, %int1_1063 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_1064 = torch.constant.bool false
    %int0_1065 = torch.constant.int 0
    %int0_1066 = torch.constant.int 0
    %1026 = torch.prim.ListConstruct %int0_1065, %int0_1066 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1067 = torch.constant.int 1
    %1027 = torch.aten.convolution %1020, %1021, %1022, %1023, %1024, %1025, %false_1064, %1026, %int1_1067 : !torch.vtensor<[1,256,512,512],f16>, !torch.vtensor<[256,256,3,3],f16>, !torch.vtensor<[256],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int1_1068 = torch.constant.int 1
    %1028 = torch.aten.add.Tensor %942, %1027, %int1_1068 : !torch.vtensor<[1,256,512,512],f16>, !torch.vtensor<[1,256,512,512],f16>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %float1.000000e00_1069 = torch.constant.float 1.000000e+00
    %1029 = torch.aten.div.Scalar %1028, %float1.000000e00_1069 : !torch.vtensor<[1,256,512,512],f16>, !torch.float -> !torch.vtensor<[1,256,512,512],f16>
    %int2_1070 = torch.constant.int 2
    %1030 = torch.aten.clone %1029, %int2_1070 : !torch.vtensor<[1,256,512,512],f16>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int1_1071 = torch.constant.int 1
    %int32_1072 = torch.constant.int 32
    %int8_1073 = torch.constant.int 8
    %int262144_1074 = torch.constant.int 262144
    %1031 = torch.prim.ListConstruct %int1_1071, %int32_1072, %int8_1073, %int262144_1074 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1032 = torch.aten.view %1030, %1031 : !torch.vtensor<[1,256,512,512],f16>, !torch.list<int> -> !torch.vtensor<[1,32,8,262144],f16>
    %int6_1075 = torch.constant.int 6
    %1033 = torch.prims.convert_element_type %1032, %int6_1075 : !torch.vtensor<[1,32,8,262144],f16>, !torch.int -> !torch.vtensor<[1,32,8,262144],f32>
    %int2_1076 = torch.constant.int 2
    %int3_1077 = torch.constant.int 3
    %1034 = torch.prim.ListConstruct %int2_1076, %int3_1077 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_1078 = torch.constant.int 0
    %true_1079 = torch.constant.bool true
    %result0_1080, %result1_1081 = torch.aten.var_mean.correction %1033, %1034, %int0_1078, %true_1079 : !torch.vtensor<[1,32,8,262144],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_1082 = torch.constant.float 9.9999999999999995E-7
    %int1_1083 = torch.constant.int 1
    %1035 = torch.aten.add.Scalar %result0_1080, %float9.999990e-07_1082, %int1_1083 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %1036 = torch.aten.rsqrt %1035 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_1084 = torch.constant.int 1
    %1037 = torch.aten.sub.Tensor %1032, %result1_1081, %int1_1084 : !torch.vtensor<[1,32,8,262144],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,8,262144],f32>
    %1038 = torch.aten.mul.Tensor %1037, %1036 : !torch.vtensor<[1,32,8,262144],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,8,262144],f32>
    %int1_1085 = torch.constant.int 1
    %int256_1086 = torch.constant.int 256
    %int512_1087 = torch.constant.int 512
    %int512_1088 = torch.constant.int 512
    %1039 = torch.prim.ListConstruct %int1_1085, %int256_1086, %int512_1087, %int512_1088 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1040 = torch.aten.view %1038, %1039 : !torch.vtensor<[1,32,8,262144],f32>, !torch.list<int> -> !torch.vtensor<[1,256,512,512],f32>
    %_params.vae.decoder.up_blocks.2.resnets.2.norm1.bias = util.global.load @_params.vae.decoder.up_blocks.2.resnets.2.norm1.bias : tensor<256xf16>
    %1041 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.2.norm1.bias : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int0_1089 = torch.constant.int 0
    %1042 = torch.aten.unsqueeze %1041, %int0_1089 : !torch.vtensor<[256],f16>, !torch.int -> !torch.vtensor<[1,256],f16>
    %int2_1090 = torch.constant.int 2
    %1043 = torch.aten.unsqueeze %1042, %int2_1090 : !torch.vtensor<[1,256],f16>, !torch.int -> !torch.vtensor<[1,256,1],f16>
    %int3_1091 = torch.constant.int 3
    %1044 = torch.aten.unsqueeze %1043, %int3_1091 : !torch.vtensor<[1,256,1],f16>, !torch.int -> !torch.vtensor<[1,256,1,1],f16>
    %_params.vae.decoder.up_blocks.2.resnets.2.norm1.weight = util.global.load @_params.vae.decoder.up_blocks.2.resnets.2.norm1.weight : tensor<256xf16>
    %1045 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.2.norm1.weight : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int0_1092 = torch.constant.int 0
    %1046 = torch.aten.unsqueeze %1045, %int0_1092 : !torch.vtensor<[256],f16>, !torch.int -> !torch.vtensor<[1,256],f16>
    %int2_1093 = torch.constant.int 2
    %1047 = torch.aten.unsqueeze %1046, %int2_1093 : !torch.vtensor<[1,256],f16>, !torch.int -> !torch.vtensor<[1,256,1],f16>
    %int3_1094 = torch.constant.int 3
    %1048 = torch.aten.unsqueeze %1047, %int3_1094 : !torch.vtensor<[1,256,1],f16>, !torch.int -> !torch.vtensor<[1,256,1,1],f16>
    %1049 = torch.aten.mul.Tensor %1040, %1048 : !torch.vtensor<[1,256,512,512],f32>, !torch.vtensor<[1,256,1,1],f16> -> !torch.vtensor<[1,256,512,512],f32>
    %int1_1095 = torch.constant.int 1
    %1050 = torch.aten.add.Tensor %1049, %1044, %int1_1095 : !torch.vtensor<[1,256,512,512],f32>, !torch.vtensor<[1,256,1,1],f16>, !torch.int -> !torch.vtensor<[1,256,512,512],f32>
    %int5_1096 = torch.constant.int 5
    %1051 = torch.prims.convert_element_type %1050, %int5_1096 : !torch.vtensor<[1,256,512,512],f32>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int5_1097 = torch.constant.int 5
    %1052 = torch.prims.convert_element_type %result1_1081, %int5_1097 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_1098 = torch.constant.int 5
    %1053 = torch.prims.convert_element_type %1036, %int5_1098 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_1099 = torch.constant.int 3
    %1054 = torch.prim.ListConstruct %int3_1099 : (!torch.int) -> !torch.list<int>
    %1055 = torch.prims.squeeze %1052, %1054 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1100 = torch.constant.int 2
    %1056 = torch.prim.ListConstruct %int2_1100 : (!torch.int) -> !torch.list<int>
    %1057 = torch.prims.squeeze %1055, %1056 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_1101 = torch.constant.int 3
    %1058 = torch.prim.ListConstruct %int3_1101 : (!torch.int) -> !torch.list<int>
    %1059 = torch.prims.squeeze %1053, %1058 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1102 = torch.constant.int 2
    %1060 = torch.prim.ListConstruct %int2_1102 : (!torch.int) -> !torch.list<int>
    %1061 = torch.prims.squeeze %1059, %1060 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %1062 = torch.aten.detach %1057 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1063 = torch.aten.detach %1061 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1064 = torch.aten.silu %1051 : !torch.vtensor<[1,256,512,512],f16> -> !torch.vtensor<[1,256,512,512],f16>
    %_params.vae.decoder.up_blocks.2.resnets.2.conv1.weight = util.global.load @_params.vae.decoder.up_blocks.2.resnets.2.conv1.weight : tensor<256x256x3x3xf16>
    %1065 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.2.conv1.weight : tensor<256x256x3x3xf16> -> !torch.vtensor<[256,256,3,3],f16>
    %_params.vae.decoder.up_blocks.2.resnets.2.conv1.bias = util.global.load @_params.vae.decoder.up_blocks.2.resnets.2.conv1.bias : tensor<256xf16>
    %1066 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.2.conv1.bias : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int1_1103 = torch.constant.int 1
    %int1_1104 = torch.constant.int 1
    %1067 = torch.prim.ListConstruct %int1_1103, %int1_1104 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1105 = torch.constant.int 1
    %int1_1106 = torch.constant.int 1
    %1068 = torch.prim.ListConstruct %int1_1105, %int1_1106 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1107 = torch.constant.int 1
    %int1_1108 = torch.constant.int 1
    %1069 = torch.prim.ListConstruct %int1_1107, %int1_1108 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_1109 = torch.constant.bool false
    %int0_1110 = torch.constant.int 0
    %int0_1111 = torch.constant.int 0
    %1070 = torch.prim.ListConstruct %int0_1110, %int0_1111 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1112 = torch.constant.int 1
    %1071 = torch.aten.convolution %1064, %1065, %1066, %1067, %1068, %1069, %false_1109, %1070, %int1_1112 : !torch.vtensor<[1,256,512,512],f16>, !torch.vtensor<[256,256,3,3],f16>, !torch.vtensor<[256],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int2_1113 = torch.constant.int 2
    %1072 = torch.aten.clone %1071, %int2_1113 : !torch.vtensor<[1,256,512,512],f16>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int1_1114 = torch.constant.int 1
    %int32_1115 = torch.constant.int 32
    %int8_1116 = torch.constant.int 8
    %int262144_1117 = torch.constant.int 262144
    %1073 = torch.prim.ListConstruct %int1_1114, %int32_1115, %int8_1116, %int262144_1117 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1074 = torch.aten.view %1072, %1073 : !torch.vtensor<[1,256,512,512],f16>, !torch.list<int> -> !torch.vtensor<[1,32,8,262144],f16>
    %int6_1118 = torch.constant.int 6
    %1075 = torch.prims.convert_element_type %1074, %int6_1118 : !torch.vtensor<[1,32,8,262144],f16>, !torch.int -> !torch.vtensor<[1,32,8,262144],f32>
    %int2_1119 = torch.constant.int 2
    %int3_1120 = torch.constant.int 3
    %1076 = torch.prim.ListConstruct %int2_1119, %int3_1120 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_1121 = torch.constant.int 0
    %true_1122 = torch.constant.bool true
    %result0_1123, %result1_1124 = torch.aten.var_mean.correction %1075, %1076, %int0_1121, %true_1122 : !torch.vtensor<[1,32,8,262144],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_1125 = torch.constant.float 9.9999999999999995E-7
    %int1_1126 = torch.constant.int 1
    %1077 = torch.aten.add.Scalar %result0_1123, %float9.999990e-07_1125, %int1_1126 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %1078 = torch.aten.rsqrt %1077 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_1127 = torch.constant.int 1
    %1079 = torch.aten.sub.Tensor %1074, %result1_1124, %int1_1127 : !torch.vtensor<[1,32,8,262144],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,8,262144],f32>
    %1080 = torch.aten.mul.Tensor %1079, %1078 : !torch.vtensor<[1,32,8,262144],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,8,262144],f32>
    %int1_1128 = torch.constant.int 1
    %int256_1129 = torch.constant.int 256
    %int512_1130 = torch.constant.int 512
    %int512_1131 = torch.constant.int 512
    %1081 = torch.prim.ListConstruct %int1_1128, %int256_1129, %int512_1130, %int512_1131 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1082 = torch.aten.view %1080, %1081 : !torch.vtensor<[1,32,8,262144],f32>, !torch.list<int> -> !torch.vtensor<[1,256,512,512],f32>
    %_params.vae.decoder.up_blocks.2.resnets.2.norm2.bias = util.global.load @_params.vae.decoder.up_blocks.2.resnets.2.norm2.bias : tensor<256xf16>
    %1083 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.2.norm2.bias : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int0_1132 = torch.constant.int 0
    %1084 = torch.aten.unsqueeze %1083, %int0_1132 : !torch.vtensor<[256],f16>, !torch.int -> !torch.vtensor<[1,256],f16>
    %int2_1133 = torch.constant.int 2
    %1085 = torch.aten.unsqueeze %1084, %int2_1133 : !torch.vtensor<[1,256],f16>, !torch.int -> !torch.vtensor<[1,256,1],f16>
    %int3_1134 = torch.constant.int 3
    %1086 = torch.aten.unsqueeze %1085, %int3_1134 : !torch.vtensor<[1,256,1],f16>, !torch.int -> !torch.vtensor<[1,256,1,1],f16>
    %_params.vae.decoder.up_blocks.2.resnets.2.norm2.weight = util.global.load @_params.vae.decoder.up_blocks.2.resnets.2.norm2.weight : tensor<256xf16>
    %1087 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.2.norm2.weight : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int0_1135 = torch.constant.int 0
    %1088 = torch.aten.unsqueeze %1087, %int0_1135 : !torch.vtensor<[256],f16>, !torch.int -> !torch.vtensor<[1,256],f16>
    %int2_1136 = torch.constant.int 2
    %1089 = torch.aten.unsqueeze %1088, %int2_1136 : !torch.vtensor<[1,256],f16>, !torch.int -> !torch.vtensor<[1,256,1],f16>
    %int3_1137 = torch.constant.int 3
    %1090 = torch.aten.unsqueeze %1089, %int3_1137 : !torch.vtensor<[1,256,1],f16>, !torch.int -> !torch.vtensor<[1,256,1,1],f16>
    %1091 = torch.aten.mul.Tensor %1082, %1090 : !torch.vtensor<[1,256,512,512],f32>, !torch.vtensor<[1,256,1,1],f16> -> !torch.vtensor<[1,256,512,512],f32>
    %int1_1138 = torch.constant.int 1
    %1092 = torch.aten.add.Tensor %1091, %1086, %int1_1138 : !torch.vtensor<[1,256,512,512],f32>, !torch.vtensor<[1,256,1,1],f16>, !torch.int -> !torch.vtensor<[1,256,512,512],f32>
    %int5_1139 = torch.constant.int 5
    %1093 = torch.prims.convert_element_type %1092, %int5_1139 : !torch.vtensor<[1,256,512,512],f32>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int5_1140 = torch.constant.int 5
    %1094 = torch.prims.convert_element_type %result1_1124, %int5_1140 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_1141 = torch.constant.int 5
    %1095 = torch.prims.convert_element_type %1078, %int5_1141 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_1142 = torch.constant.int 3
    %1096 = torch.prim.ListConstruct %int3_1142 : (!torch.int) -> !torch.list<int>
    %1097 = torch.prims.squeeze %1094, %1096 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1143 = torch.constant.int 2
    %1098 = torch.prim.ListConstruct %int2_1143 : (!torch.int) -> !torch.list<int>
    %1099 = torch.prims.squeeze %1097, %1098 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_1144 = torch.constant.int 3
    %1100 = torch.prim.ListConstruct %int3_1144 : (!torch.int) -> !torch.list<int>
    %1101 = torch.prims.squeeze %1095, %1100 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1145 = torch.constant.int 2
    %1102 = torch.prim.ListConstruct %int2_1145 : (!torch.int) -> !torch.list<int>
    %1103 = torch.prims.squeeze %1101, %1102 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %1104 = torch.aten.detach %1099 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1105 = torch.aten.detach %1103 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1106 = torch.aten.silu %1093 : !torch.vtensor<[1,256,512,512],f16> -> !torch.vtensor<[1,256,512,512],f16>
    %none_1146 = torch.constant.none
    %1107 = torch.aten.clone %1106, %none_1146 : !torch.vtensor<[1,256,512,512],f16>, !torch.none -> !torch.vtensor<[1,256,512,512],f16>
    %_params.vae.decoder.up_blocks.2.resnets.2.conv2.weight = util.global.load @_params.vae.decoder.up_blocks.2.resnets.2.conv2.weight : tensor<256x256x3x3xf16>
    %1108 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.2.conv2.weight : tensor<256x256x3x3xf16> -> !torch.vtensor<[256,256,3,3],f16>
    %_params.vae.decoder.up_blocks.2.resnets.2.conv2.bias = util.global.load @_params.vae.decoder.up_blocks.2.resnets.2.conv2.bias : tensor<256xf16>
    %1109 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.resnets.2.conv2.bias : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int1_1147 = torch.constant.int 1
    %int1_1148 = torch.constant.int 1
    %1110 = torch.prim.ListConstruct %int1_1147, %int1_1148 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1149 = torch.constant.int 1
    %int1_1150 = torch.constant.int 1
    %1111 = torch.prim.ListConstruct %int1_1149, %int1_1150 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1151 = torch.constant.int 1
    %int1_1152 = torch.constant.int 1
    %1112 = torch.prim.ListConstruct %int1_1151, %int1_1152 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_1153 = torch.constant.bool false
    %int0_1154 = torch.constant.int 0
    %int0_1155 = torch.constant.int 0
    %1113 = torch.prim.ListConstruct %int0_1154, %int0_1155 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1156 = torch.constant.int 1
    %1114 = torch.aten.convolution %1107, %1108, %1109, %1110, %1111, %1112, %false_1153, %1113, %int1_1156 : !torch.vtensor<[1,256,512,512],f16>, !torch.vtensor<[256,256,3,3],f16>, !torch.vtensor<[256],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %int1_1157 = torch.constant.int 1
    %1115 = torch.aten.add.Tensor %1029, %1114, %int1_1157 : !torch.vtensor<[1,256,512,512],f16>, !torch.vtensor<[1,256,512,512],f16>, !torch.int -> !torch.vtensor<[1,256,512,512],f16>
    %float1.000000e00_1158 = torch.constant.float 1.000000e+00
    %1116 = torch.aten.div.Scalar %1115, %float1.000000e00_1158 : !torch.vtensor<[1,256,512,512],f16>, !torch.float -> !torch.vtensor<[1,256,512,512],f16>
    %int6_1159 = torch.constant.int 6
    %1117 = torch.prims.convert_element_type %1116, %int6_1159 : !torch.vtensor<[1,256,512,512],f16>, !torch.int -> !torch.vtensor<[1,256,512,512],f32>
    %int1024 = torch.constant.int 1024
    %int6_1160 = torch.constant.int 6
    %none_1161 = torch.constant.none
    %cpu_1162 = torch.constant.device "cpu"
    %false_1163 = torch.constant.bool false
    %1118 = torch.aten.arange %int1024, %int6_1160, %none_1161, %cpu_1162, %false_1163 : !torch.int, !torch.int, !torch.none, !torch.Device, !torch.bool -> !torch.vtensor<[1024],f32>
    %float0.000000e00_1164 = torch.constant.float 0.000000e+00
    %int1_1165 = torch.constant.int 1
    %1119 = torch.aten.add.Scalar %1118, %float0.000000e00_1164, %int1_1165 : !torch.vtensor<[1024],f32>, !torch.float, !torch.int -> !torch.vtensor<[1024],f32>
    %float5.000000e-01_1166 = torch.constant.float 5.000000e-01
    %1120 = torch.aten.mul.Scalar %1119, %float5.000000e-01_1166 : !torch.vtensor<[1024],f32>, !torch.float -> !torch.vtensor<[1024],f32>
    %int4_1167 = torch.constant.int 4
    %1121 = torch.prims.convert_element_type %1120, %int4_1167 : !torch.vtensor<[1024],f32>, !torch.int -> !torch.vtensor<[1024],si64>
    %int-1_1168 = torch.constant.int -1
    %1122 = torch.aten.unsqueeze %1121, %int-1_1168 : !torch.vtensor<[1024],si64>, !torch.int -> !torch.vtensor<[1024,1],si64>
    %int1024_1169 = torch.constant.int 1024
    %int6_1170 = torch.constant.int 6
    %none_1171 = torch.constant.none
    %cpu_1172 = torch.constant.device "cpu"
    %false_1173 = torch.constant.bool false
    %1123 = torch.aten.arange %int1024_1169, %int6_1170, %none_1171, %cpu_1172, %false_1173 : !torch.int, !torch.int, !torch.none, !torch.Device, !torch.bool -> !torch.vtensor<[1024],f32>
    %float0.000000e00_1174 = torch.constant.float 0.000000e+00
    %int1_1175 = torch.constant.int 1
    %1124 = torch.aten.add.Scalar %1123, %float0.000000e00_1174, %int1_1175 : !torch.vtensor<[1024],f32>, !torch.float, !torch.int -> !torch.vtensor<[1024],f32>
    %float5.000000e-01_1176 = torch.constant.float 5.000000e-01
    %1125 = torch.aten.mul.Scalar %1124, %float5.000000e-01_1176 : !torch.vtensor<[1024],f32>, !torch.float -> !torch.vtensor<[1024],f32>
    %int4_1177 = torch.constant.int 4
    %1126 = torch.prims.convert_element_type %1125, %int4_1177 : !torch.vtensor<[1024],f32>, !torch.int -> !torch.vtensor<[1024],si64>
    %none_1178 = torch.constant.none
    %none_1179 = torch.constant.none
    %1127 = torch.prim.ListConstruct %none_1178, %none_1179, %1122, %1126 : (!torch.none, !torch.none, !torch.vtensor<[1024,1],si64>, !torch.vtensor<[1024],si64>) -> !torch.list<optional<vtensor>>
    %1128 = torch.aten.index.Tensor %1117, %1127 : !torch.vtensor<[1,256,512,512],f32>, !torch.list<optional<vtensor>> -> !torch.vtensor<[1,256,1024,1024],f32>
    %int2_1180 = torch.constant.int 2
    %1129 = torch.aten.clone %1128, %int2_1180 : !torch.vtensor<[1,256,1024,1024],f32>, !torch.int -> !torch.vtensor<[1,256,1024,1024],f32>
    %int5_1181 = torch.constant.int 5
    %1130 = torch.prims.convert_element_type %1129, %int5_1181 : !torch.vtensor<[1,256,1024,1024],f32>, !torch.int -> !torch.vtensor<[1,256,1024,1024],f16>
    %_params.vae.decoder.up_blocks.2.upsamplers.0.conv.weight = util.global.load @_params.vae.decoder.up_blocks.2.upsamplers.0.conv.weight : tensor<256x256x3x3xf16>
    %1131 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.upsamplers.0.conv.weight : tensor<256x256x3x3xf16> -> !torch.vtensor<[256,256,3,3],f16>
    %_params.vae.decoder.up_blocks.2.upsamplers.0.conv.bias = util.global.load @_params.vae.decoder.up_blocks.2.upsamplers.0.conv.bias : tensor<256xf16>
    %1132 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.2.upsamplers.0.conv.bias : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int1_1182 = torch.constant.int 1
    %int1_1183 = torch.constant.int 1
    %1133 = torch.prim.ListConstruct %int1_1182, %int1_1183 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1184 = torch.constant.int 1
    %int1_1185 = torch.constant.int 1
    %1134 = torch.prim.ListConstruct %int1_1184, %int1_1185 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1186 = torch.constant.int 1
    %int1_1187 = torch.constant.int 1
    %1135 = torch.prim.ListConstruct %int1_1186, %int1_1187 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_1188 = torch.constant.bool false
    %int0_1189 = torch.constant.int 0
    %int0_1190 = torch.constant.int 0
    %1136 = torch.prim.ListConstruct %int0_1189, %int0_1190 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1191 = torch.constant.int 1
    %1137 = torch.aten.convolution %1130, %1131, %1132, %1133, %1134, %1135, %false_1188, %1136, %int1_1191 : !torch.vtensor<[1,256,1024,1024],f16>, !torch.vtensor<[256,256,3,3],f16>, !torch.vtensor<[256],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,256,1024,1024],f16>
    %int2_1192 = torch.constant.int 2
    %1138 = torch.aten.clone %1137, %int2_1192 : !torch.vtensor<[1,256,1024,1024],f16>, !torch.int -> !torch.vtensor<[1,256,1024,1024],f16>
    %int1_1193 = torch.constant.int 1
    %int32_1194 = torch.constant.int 32
    %int8_1195 = torch.constant.int 8
    %int1048576 = torch.constant.int 1048576
    %1139 = torch.prim.ListConstruct %int1_1193, %int32_1194, %int8_1195, %int1048576 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1140 = torch.aten.view %1138, %1139 : !torch.vtensor<[1,256,1024,1024],f16>, !torch.list<int> -> !torch.vtensor<[1,32,8,1048576],f16>
    %int6_1196 = torch.constant.int 6
    %1141 = torch.prims.convert_element_type %1140, %int6_1196 : !torch.vtensor<[1,32,8,1048576],f16>, !torch.int -> !torch.vtensor<[1,32,8,1048576],f32>
    %int2_1197 = torch.constant.int 2
    %int3_1198 = torch.constant.int 3
    %1142 = torch.prim.ListConstruct %int2_1197, %int3_1198 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_1199 = torch.constant.int 0
    %true_1200 = torch.constant.bool true
    %result0_1201, %result1_1202 = torch.aten.var_mean.correction %1141, %1142, %int0_1199, %true_1200 : !torch.vtensor<[1,32,8,1048576],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_1203 = torch.constant.float 9.9999999999999995E-7
    %int1_1204 = torch.constant.int 1
    %1143 = torch.aten.add.Scalar %result0_1201, %float9.999990e-07_1203, %int1_1204 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %1144 = torch.aten.rsqrt %1143 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_1205 = torch.constant.int 1
    %1145 = torch.aten.sub.Tensor %1140, %result1_1202, %int1_1205 : !torch.vtensor<[1,32,8,1048576],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,8,1048576],f32>
    %1146 = torch.aten.mul.Tensor %1145, %1144 : !torch.vtensor<[1,32,8,1048576],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,8,1048576],f32>
    %int1_1206 = torch.constant.int 1
    %int256_1207 = torch.constant.int 256
    %int1024_1208 = torch.constant.int 1024
    %int1024_1209 = torch.constant.int 1024
    %1147 = torch.prim.ListConstruct %int1_1206, %int256_1207, %int1024_1208, %int1024_1209 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1148 = torch.aten.view %1146, %1147 : !torch.vtensor<[1,32,8,1048576],f32>, !torch.list<int> -> !torch.vtensor<[1,256,1024,1024],f32>
    %_params.vae.decoder.up_blocks.3.resnets.0.norm1.bias = util.global.load @_params.vae.decoder.up_blocks.3.resnets.0.norm1.bias : tensor<256xf16>
    %1149 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.0.norm1.bias : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int0_1210 = torch.constant.int 0
    %1150 = torch.aten.unsqueeze %1149, %int0_1210 : !torch.vtensor<[256],f16>, !torch.int -> !torch.vtensor<[1,256],f16>
    %int2_1211 = torch.constant.int 2
    %1151 = torch.aten.unsqueeze %1150, %int2_1211 : !torch.vtensor<[1,256],f16>, !torch.int -> !torch.vtensor<[1,256,1],f16>
    %int3_1212 = torch.constant.int 3
    %1152 = torch.aten.unsqueeze %1151, %int3_1212 : !torch.vtensor<[1,256,1],f16>, !torch.int -> !torch.vtensor<[1,256,1,1],f16>
    %_params.vae.decoder.up_blocks.3.resnets.0.norm1.weight = util.global.load @_params.vae.decoder.up_blocks.3.resnets.0.norm1.weight : tensor<256xf16>
    %1153 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.0.norm1.weight : tensor<256xf16> -> !torch.vtensor<[256],f16>
    %int0_1213 = torch.constant.int 0
    %1154 = torch.aten.unsqueeze %1153, %int0_1213 : !torch.vtensor<[256],f16>, !torch.int -> !torch.vtensor<[1,256],f16>
    %int2_1214 = torch.constant.int 2
    %1155 = torch.aten.unsqueeze %1154, %int2_1214 : !torch.vtensor<[1,256],f16>, !torch.int -> !torch.vtensor<[1,256,1],f16>
    %int3_1215 = torch.constant.int 3
    %1156 = torch.aten.unsqueeze %1155, %int3_1215 : !torch.vtensor<[1,256,1],f16>, !torch.int -> !torch.vtensor<[1,256,1,1],f16>
    %1157 = torch.aten.mul.Tensor %1148, %1156 : !torch.vtensor<[1,256,1024,1024],f32>, !torch.vtensor<[1,256,1,1],f16> -> !torch.vtensor<[1,256,1024,1024],f32>
    %int1_1216 = torch.constant.int 1
    %1158 = torch.aten.add.Tensor %1157, %1152, %int1_1216 : !torch.vtensor<[1,256,1024,1024],f32>, !torch.vtensor<[1,256,1,1],f16>, !torch.int -> !torch.vtensor<[1,256,1024,1024],f32>
    %int5_1217 = torch.constant.int 5
    %1159 = torch.prims.convert_element_type %1158, %int5_1217 : !torch.vtensor<[1,256,1024,1024],f32>, !torch.int -> !torch.vtensor<[1,256,1024,1024],f16>
    %int5_1218 = torch.constant.int 5
    %1160 = torch.prims.convert_element_type %result1_1202, %int5_1218 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_1219 = torch.constant.int 5
    %1161 = torch.prims.convert_element_type %1144, %int5_1219 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_1220 = torch.constant.int 3
    %1162 = torch.prim.ListConstruct %int3_1220 : (!torch.int) -> !torch.list<int>
    %1163 = torch.prims.squeeze %1160, %1162 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1221 = torch.constant.int 2
    %1164 = torch.prim.ListConstruct %int2_1221 : (!torch.int) -> !torch.list<int>
    %1165 = torch.prims.squeeze %1163, %1164 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_1222 = torch.constant.int 3
    %1166 = torch.prim.ListConstruct %int3_1222 : (!torch.int) -> !torch.list<int>
    %1167 = torch.prims.squeeze %1161, %1166 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1223 = torch.constant.int 2
    %1168 = torch.prim.ListConstruct %int2_1223 : (!torch.int) -> !torch.list<int>
    %1169 = torch.prims.squeeze %1167, %1168 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %1170 = torch.aten.detach %1165 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1171 = torch.aten.detach %1169 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1172 = torch.aten.silu %1159 : !torch.vtensor<[1,256,1024,1024],f16> -> !torch.vtensor<[1,256,1024,1024],f16>
    %_params.vae.decoder.up_blocks.3.resnets.0.conv1.weight = util.global.load @_params.vae.decoder.up_blocks.3.resnets.0.conv1.weight : tensor<128x256x3x3xf16>
    %1173 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.0.conv1.weight : tensor<128x256x3x3xf16> -> !torch.vtensor<[128,256,3,3],f16>
    %_params.vae.decoder.up_blocks.3.resnets.0.conv1.bias = util.global.load @_params.vae.decoder.up_blocks.3.resnets.0.conv1.bias : tensor<128xf16>
    %1174 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.0.conv1.bias : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int1_1224 = torch.constant.int 1
    %int1_1225 = torch.constant.int 1
    %1175 = torch.prim.ListConstruct %int1_1224, %int1_1225 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1226 = torch.constant.int 1
    %int1_1227 = torch.constant.int 1
    %1176 = torch.prim.ListConstruct %int1_1226, %int1_1227 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1228 = torch.constant.int 1
    %int1_1229 = torch.constant.int 1
    %1177 = torch.prim.ListConstruct %int1_1228, %int1_1229 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_1230 = torch.constant.bool false
    %int0_1231 = torch.constant.int 0
    %int0_1232 = torch.constant.int 0
    %1178 = torch.prim.ListConstruct %int0_1231, %int0_1232 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1233 = torch.constant.int 1
    %1179 = torch.aten.convolution %1172, %1173, %1174, %1175, %1176, %1177, %false_1230, %1178, %int1_1233 : !torch.vtensor<[1,256,1024,1024],f16>, !torch.vtensor<[128,256,3,3],f16>, !torch.vtensor<[128],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int2_1234 = torch.constant.int 2
    %1180 = torch.aten.clone %1179, %int2_1234 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int1_1235 = torch.constant.int 1
    %int32_1236 = torch.constant.int 32
    %int4_1237 = torch.constant.int 4
    %int1048576_1238 = torch.constant.int 1048576
    %1181 = torch.prim.ListConstruct %int1_1235, %int32_1236, %int4_1237, %int1048576_1238 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1182 = torch.aten.view %1180, %1181 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.list<int> -> !torch.vtensor<[1,32,4,1048576],f16>
    %int6_1239 = torch.constant.int 6
    %1183 = torch.prims.convert_element_type %1182, %int6_1239 : !torch.vtensor<[1,32,4,1048576],f16>, !torch.int -> !torch.vtensor<[1,32,4,1048576],f32>
    %int2_1240 = torch.constant.int 2
    %int3_1241 = torch.constant.int 3
    %1184 = torch.prim.ListConstruct %int2_1240, %int3_1241 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_1242 = torch.constant.int 0
    %true_1243 = torch.constant.bool true
    %result0_1244, %result1_1245 = torch.aten.var_mean.correction %1183, %1184, %int0_1242, %true_1243 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_1246 = torch.constant.float 9.9999999999999995E-7
    %int1_1247 = torch.constant.int 1
    %1185 = torch.aten.add.Scalar %result0_1244, %float9.999990e-07_1246, %int1_1247 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %1186 = torch.aten.rsqrt %1185 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_1248 = torch.constant.int 1
    %1187 = torch.aten.sub.Tensor %1182, %result1_1245, %int1_1248 : !torch.vtensor<[1,32,4,1048576],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,4,1048576],f32>
    %1188 = torch.aten.mul.Tensor %1187, %1186 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,4,1048576],f32>
    %int1_1249 = torch.constant.int 1
    %int128_1250 = torch.constant.int 128
    %int1024_1251 = torch.constant.int 1024
    %int1024_1252 = torch.constant.int 1024
    %1189 = torch.prim.ListConstruct %int1_1249, %int128_1250, %int1024_1251, %int1024_1252 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1190 = torch.aten.view %1188, %1189 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.list<int> -> !torch.vtensor<[1,128,1024,1024],f32>
    %_params.vae.decoder.up_blocks.3.resnets.0.norm2.bias = util.global.load @_params.vae.decoder.up_blocks.3.resnets.0.norm2.bias : tensor<128xf16>
    %1191 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.0.norm2.bias : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int0_1253 = torch.constant.int 0
    %1192 = torch.aten.unsqueeze %1191, %int0_1253 : !torch.vtensor<[128],f16>, !torch.int -> !torch.vtensor<[1,128],f16>
    %int2_1254 = torch.constant.int 2
    %1193 = torch.aten.unsqueeze %1192, %int2_1254 : !torch.vtensor<[1,128],f16>, !torch.int -> !torch.vtensor<[1,128,1],f16>
    %int3_1255 = torch.constant.int 3
    %1194 = torch.aten.unsqueeze %1193, %int3_1255 : !torch.vtensor<[1,128,1],f16>, !torch.int -> !torch.vtensor<[1,128,1,1],f16>
    %_params.vae.decoder.up_blocks.3.resnets.0.norm2.weight = util.global.load @_params.vae.decoder.up_blocks.3.resnets.0.norm2.weight : tensor<128xf16>
    %1195 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.0.norm2.weight : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int0_1256 = torch.constant.int 0
    %1196 = torch.aten.unsqueeze %1195, %int0_1256 : !torch.vtensor<[128],f16>, !torch.int -> !torch.vtensor<[1,128],f16>
    %int2_1257 = torch.constant.int 2
    %1197 = torch.aten.unsqueeze %1196, %int2_1257 : !torch.vtensor<[1,128],f16>, !torch.int -> !torch.vtensor<[1,128,1],f16>
    %int3_1258 = torch.constant.int 3
    %1198 = torch.aten.unsqueeze %1197, %int3_1258 : !torch.vtensor<[1,128,1],f16>, !torch.int -> !torch.vtensor<[1,128,1,1],f16>
    %1199 = torch.aten.mul.Tensor %1190, %1198 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.vtensor<[1,128,1,1],f16> -> !torch.vtensor<[1,128,1024,1024],f32>
    %int1_1259 = torch.constant.int 1
    %1200 = torch.aten.add.Tensor %1199, %1194, %int1_1259 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.vtensor<[1,128,1,1],f16>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f32>
    %int5_1260 = torch.constant.int 5
    %1201 = torch.prims.convert_element_type %1200, %int5_1260 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int5_1261 = torch.constant.int 5
    %1202 = torch.prims.convert_element_type %result1_1245, %int5_1261 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_1262 = torch.constant.int 5
    %1203 = torch.prims.convert_element_type %1186, %int5_1262 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_1263 = torch.constant.int 3
    %1204 = torch.prim.ListConstruct %int3_1263 : (!torch.int) -> !torch.list<int>
    %1205 = torch.prims.squeeze %1202, %1204 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1264 = torch.constant.int 2
    %1206 = torch.prim.ListConstruct %int2_1264 : (!torch.int) -> !torch.list<int>
    %1207 = torch.prims.squeeze %1205, %1206 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_1265 = torch.constant.int 3
    %1208 = torch.prim.ListConstruct %int3_1265 : (!torch.int) -> !torch.list<int>
    %1209 = torch.prims.squeeze %1203, %1208 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1266 = torch.constant.int 2
    %1210 = torch.prim.ListConstruct %int2_1266 : (!torch.int) -> !torch.list<int>
    %1211 = torch.prims.squeeze %1209, %1210 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %1212 = torch.aten.detach %1207 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1213 = torch.aten.detach %1211 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1214 = torch.aten.silu %1201 : !torch.vtensor<[1,128,1024,1024],f16> -> !torch.vtensor<[1,128,1024,1024],f16>
    %none_1267 = torch.constant.none
    %1215 = torch.aten.clone %1214, %none_1267 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.none -> !torch.vtensor<[1,128,1024,1024],f16>
    %_params.vae.decoder.up_blocks.3.resnets.0.conv2.weight = util.global.load @_params.vae.decoder.up_blocks.3.resnets.0.conv2.weight : tensor<128x128x3x3xf16>
    %1216 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.0.conv2.weight : tensor<128x128x3x3xf16> -> !torch.vtensor<[128,128,3,3],f16>
    %_params.vae.decoder.up_blocks.3.resnets.0.conv2.bias = util.global.load @_params.vae.decoder.up_blocks.3.resnets.0.conv2.bias : tensor<128xf16>
    %1217 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.0.conv2.bias : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int1_1268 = torch.constant.int 1
    %int1_1269 = torch.constant.int 1
    %1218 = torch.prim.ListConstruct %int1_1268, %int1_1269 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1270 = torch.constant.int 1
    %int1_1271 = torch.constant.int 1
    %1219 = torch.prim.ListConstruct %int1_1270, %int1_1271 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1272 = torch.constant.int 1
    %int1_1273 = torch.constant.int 1
    %1220 = torch.prim.ListConstruct %int1_1272, %int1_1273 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_1274 = torch.constant.bool false
    %int0_1275 = torch.constant.int 0
    %int0_1276 = torch.constant.int 0
    %1221 = torch.prim.ListConstruct %int0_1275, %int0_1276 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1277 = torch.constant.int 1
    %1222 = torch.aten.convolution %1215, %1216, %1217, %1218, %1219, %1220, %false_1274, %1221, %int1_1277 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.vtensor<[128,128,3,3],f16>, !torch.vtensor<[128],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %_params.vae.decoder.up_blocks.3.resnets.0.conv_shortcut.weight = util.global.load @_params.vae.decoder.up_blocks.3.resnets.0.conv_shortcut.weight : tensor<128x256x1x1xf16>
    %1223 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.0.conv_shortcut.weight : tensor<128x256x1x1xf16> -> !torch.vtensor<[128,256,1,1],f16>
    %_params.vae.decoder.up_blocks.3.resnets.0.conv_shortcut.bias = util.global.load @_params.vae.decoder.up_blocks.3.resnets.0.conv_shortcut.bias : tensor<128xf16>
    %1224 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.0.conv_shortcut.bias : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int1_1278 = torch.constant.int 1
    %int1_1279 = torch.constant.int 1
    %1225 = torch.prim.ListConstruct %int1_1278, %int1_1279 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_1280 = torch.constant.int 0
    %int0_1281 = torch.constant.int 0
    %1226 = torch.prim.ListConstruct %int0_1280, %int0_1281 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1282 = torch.constant.int 1
    %int1_1283 = torch.constant.int 1
    %1227 = torch.prim.ListConstruct %int1_1282, %int1_1283 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_1284 = torch.constant.bool false
    %int0_1285 = torch.constant.int 0
    %int0_1286 = torch.constant.int 0
    %1228 = torch.prim.ListConstruct %int0_1285, %int0_1286 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1287 = torch.constant.int 1
    %1229 = torch.aten.convolution %1137, %1223, %1224, %1225, %1226, %1227, %false_1284, %1228, %int1_1287 : !torch.vtensor<[1,256,1024,1024],f16>, !torch.vtensor<[128,256,1,1],f16>, !torch.vtensor<[128],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int1_1288 = torch.constant.int 1
    %1230 = torch.aten.add.Tensor %1229, %1222, %int1_1288 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.vtensor<[1,128,1024,1024],f16>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %float1.000000e00_1289 = torch.constant.float 1.000000e+00
    %1231 = torch.aten.div.Scalar %1230, %float1.000000e00_1289 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.float -> !torch.vtensor<[1,128,1024,1024],f16>
    %int2_1290 = torch.constant.int 2
    %1232 = torch.aten.clone %1231, %int2_1290 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int1_1291 = torch.constant.int 1
    %int32_1292 = torch.constant.int 32
    %int4_1293 = torch.constant.int 4
    %int1048576_1294 = torch.constant.int 1048576
    %1233 = torch.prim.ListConstruct %int1_1291, %int32_1292, %int4_1293, %int1048576_1294 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1234 = torch.aten.view %1232, %1233 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.list<int> -> !torch.vtensor<[1,32,4,1048576],f16>
    %int6_1295 = torch.constant.int 6
    %1235 = torch.prims.convert_element_type %1234, %int6_1295 : !torch.vtensor<[1,32,4,1048576],f16>, !torch.int -> !torch.vtensor<[1,32,4,1048576],f32>
    %int2_1296 = torch.constant.int 2
    %int3_1297 = torch.constant.int 3
    %1236 = torch.prim.ListConstruct %int2_1296, %int3_1297 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_1298 = torch.constant.int 0
    %true_1299 = torch.constant.bool true
    %result0_1300, %result1_1301 = torch.aten.var_mean.correction %1235, %1236, %int0_1298, %true_1299 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_1302 = torch.constant.float 9.9999999999999995E-7
    %int1_1303 = torch.constant.int 1
    %1237 = torch.aten.add.Scalar %result0_1300, %float9.999990e-07_1302, %int1_1303 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %1238 = torch.aten.rsqrt %1237 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_1304 = torch.constant.int 1
    %1239 = torch.aten.sub.Tensor %1234, %result1_1301, %int1_1304 : !torch.vtensor<[1,32,4,1048576],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,4,1048576],f32>
    %1240 = torch.aten.mul.Tensor %1239, %1238 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,4,1048576],f32>
    %int1_1305 = torch.constant.int 1
    %int128_1306 = torch.constant.int 128
    %int1024_1307 = torch.constant.int 1024
    %int1024_1308 = torch.constant.int 1024
    %1241 = torch.prim.ListConstruct %int1_1305, %int128_1306, %int1024_1307, %int1024_1308 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1242 = torch.aten.view %1240, %1241 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.list<int> -> !torch.vtensor<[1,128,1024,1024],f32>
    %_params.vae.decoder.up_blocks.3.resnets.1.norm1.bias = util.global.load @_params.vae.decoder.up_blocks.3.resnets.1.norm1.bias : tensor<128xf16>
    %1243 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.1.norm1.bias : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int0_1309 = torch.constant.int 0
    %1244 = torch.aten.unsqueeze %1243, %int0_1309 : !torch.vtensor<[128],f16>, !torch.int -> !torch.vtensor<[1,128],f16>
    %int2_1310 = torch.constant.int 2
    %1245 = torch.aten.unsqueeze %1244, %int2_1310 : !torch.vtensor<[1,128],f16>, !torch.int -> !torch.vtensor<[1,128,1],f16>
    %int3_1311 = torch.constant.int 3
    %1246 = torch.aten.unsqueeze %1245, %int3_1311 : !torch.vtensor<[1,128,1],f16>, !torch.int -> !torch.vtensor<[1,128,1,1],f16>
    %_params.vae.decoder.up_blocks.3.resnets.1.norm1.weight = util.global.load @_params.vae.decoder.up_blocks.3.resnets.1.norm1.weight : tensor<128xf16>
    %1247 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.1.norm1.weight : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int0_1312 = torch.constant.int 0
    %1248 = torch.aten.unsqueeze %1247, %int0_1312 : !torch.vtensor<[128],f16>, !torch.int -> !torch.vtensor<[1,128],f16>
    %int2_1313 = torch.constant.int 2
    %1249 = torch.aten.unsqueeze %1248, %int2_1313 : !torch.vtensor<[1,128],f16>, !torch.int -> !torch.vtensor<[1,128,1],f16>
    %int3_1314 = torch.constant.int 3
    %1250 = torch.aten.unsqueeze %1249, %int3_1314 : !torch.vtensor<[1,128,1],f16>, !torch.int -> !torch.vtensor<[1,128,1,1],f16>
    %1251 = torch.aten.mul.Tensor %1242, %1250 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.vtensor<[1,128,1,1],f16> -> !torch.vtensor<[1,128,1024,1024],f32>
    %int1_1315 = torch.constant.int 1
    %1252 = torch.aten.add.Tensor %1251, %1246, %int1_1315 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.vtensor<[1,128,1,1],f16>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f32>
    %int5_1316 = torch.constant.int 5
    %1253 = torch.prims.convert_element_type %1252, %int5_1316 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int5_1317 = torch.constant.int 5
    %1254 = torch.prims.convert_element_type %result1_1301, %int5_1317 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_1318 = torch.constant.int 5
    %1255 = torch.prims.convert_element_type %1238, %int5_1318 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_1319 = torch.constant.int 3
    %1256 = torch.prim.ListConstruct %int3_1319 : (!torch.int) -> !torch.list<int>
    %1257 = torch.prims.squeeze %1254, %1256 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1320 = torch.constant.int 2
    %1258 = torch.prim.ListConstruct %int2_1320 : (!torch.int) -> !torch.list<int>
    %1259 = torch.prims.squeeze %1257, %1258 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_1321 = torch.constant.int 3
    %1260 = torch.prim.ListConstruct %int3_1321 : (!torch.int) -> !torch.list<int>
    %1261 = torch.prims.squeeze %1255, %1260 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1322 = torch.constant.int 2
    %1262 = torch.prim.ListConstruct %int2_1322 : (!torch.int) -> !torch.list<int>
    %1263 = torch.prims.squeeze %1261, %1262 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %1264 = torch.aten.detach %1259 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1265 = torch.aten.detach %1263 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1266 = torch.aten.silu %1253 : !torch.vtensor<[1,128,1024,1024],f16> -> !torch.vtensor<[1,128,1024,1024],f16>
    %_params.vae.decoder.up_blocks.3.resnets.1.conv1.weight = util.global.load @_params.vae.decoder.up_blocks.3.resnets.1.conv1.weight : tensor<128x128x3x3xf16>
    %1267 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.1.conv1.weight : tensor<128x128x3x3xf16> -> !torch.vtensor<[128,128,3,3],f16>
    %_params.vae.decoder.up_blocks.3.resnets.1.conv1.bias = util.global.load @_params.vae.decoder.up_blocks.3.resnets.1.conv1.bias : tensor<128xf16>
    %1268 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.1.conv1.bias : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int1_1323 = torch.constant.int 1
    %int1_1324 = torch.constant.int 1
    %1269 = torch.prim.ListConstruct %int1_1323, %int1_1324 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1325 = torch.constant.int 1
    %int1_1326 = torch.constant.int 1
    %1270 = torch.prim.ListConstruct %int1_1325, %int1_1326 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1327 = torch.constant.int 1
    %int1_1328 = torch.constant.int 1
    %1271 = torch.prim.ListConstruct %int1_1327, %int1_1328 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_1329 = torch.constant.bool false
    %int0_1330 = torch.constant.int 0
    %int0_1331 = torch.constant.int 0
    %1272 = torch.prim.ListConstruct %int0_1330, %int0_1331 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1332 = torch.constant.int 1
    %1273 = torch.aten.convolution %1266, %1267, %1268, %1269, %1270, %1271, %false_1329, %1272, %int1_1332 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.vtensor<[128,128,3,3],f16>, !torch.vtensor<[128],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int2_1333 = torch.constant.int 2
    %1274 = torch.aten.clone %1273, %int2_1333 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int1_1334 = torch.constant.int 1
    %int32_1335 = torch.constant.int 32
    %int4_1336 = torch.constant.int 4
    %int1048576_1337 = torch.constant.int 1048576
    %1275 = torch.prim.ListConstruct %int1_1334, %int32_1335, %int4_1336, %int1048576_1337 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1276 = torch.aten.view %1274, %1275 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.list<int> -> !torch.vtensor<[1,32,4,1048576],f16>
    %int6_1338 = torch.constant.int 6
    %1277 = torch.prims.convert_element_type %1276, %int6_1338 : !torch.vtensor<[1,32,4,1048576],f16>, !torch.int -> !torch.vtensor<[1,32,4,1048576],f32>
    %int2_1339 = torch.constant.int 2
    %int3_1340 = torch.constant.int 3
    %1278 = torch.prim.ListConstruct %int2_1339, %int3_1340 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_1341 = torch.constant.int 0
    %true_1342 = torch.constant.bool true
    %result0_1343, %result1_1344 = torch.aten.var_mean.correction %1277, %1278, %int0_1341, %true_1342 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_1345 = torch.constant.float 9.9999999999999995E-7
    %int1_1346 = torch.constant.int 1
    %1279 = torch.aten.add.Scalar %result0_1343, %float9.999990e-07_1345, %int1_1346 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %1280 = torch.aten.rsqrt %1279 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_1347 = torch.constant.int 1
    %1281 = torch.aten.sub.Tensor %1276, %result1_1344, %int1_1347 : !torch.vtensor<[1,32,4,1048576],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,4,1048576],f32>
    %1282 = torch.aten.mul.Tensor %1281, %1280 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,4,1048576],f32>
    %int1_1348 = torch.constant.int 1
    %int128_1349 = torch.constant.int 128
    %int1024_1350 = torch.constant.int 1024
    %int1024_1351 = torch.constant.int 1024
    %1283 = torch.prim.ListConstruct %int1_1348, %int128_1349, %int1024_1350, %int1024_1351 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1284 = torch.aten.view %1282, %1283 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.list<int> -> !torch.vtensor<[1,128,1024,1024],f32>
    %_params.vae.decoder.up_blocks.3.resnets.1.norm2.bias = util.global.load @_params.vae.decoder.up_blocks.3.resnets.1.norm2.bias : tensor<128xf16>
    %1285 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.1.norm2.bias : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int0_1352 = torch.constant.int 0
    %1286 = torch.aten.unsqueeze %1285, %int0_1352 : !torch.vtensor<[128],f16>, !torch.int -> !torch.vtensor<[1,128],f16>
    %int2_1353 = torch.constant.int 2
    %1287 = torch.aten.unsqueeze %1286, %int2_1353 : !torch.vtensor<[1,128],f16>, !torch.int -> !torch.vtensor<[1,128,1],f16>
    %int3_1354 = torch.constant.int 3
    %1288 = torch.aten.unsqueeze %1287, %int3_1354 : !torch.vtensor<[1,128,1],f16>, !torch.int -> !torch.vtensor<[1,128,1,1],f16>
    %_params.vae.decoder.up_blocks.3.resnets.1.norm2.weight = util.global.load @_params.vae.decoder.up_blocks.3.resnets.1.norm2.weight : tensor<128xf16>
    %1289 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.1.norm2.weight : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int0_1355 = torch.constant.int 0
    %1290 = torch.aten.unsqueeze %1289, %int0_1355 : !torch.vtensor<[128],f16>, !torch.int -> !torch.vtensor<[1,128],f16>
    %int2_1356 = torch.constant.int 2
    %1291 = torch.aten.unsqueeze %1290, %int2_1356 : !torch.vtensor<[1,128],f16>, !torch.int -> !torch.vtensor<[1,128,1],f16>
    %int3_1357 = torch.constant.int 3
    %1292 = torch.aten.unsqueeze %1291, %int3_1357 : !torch.vtensor<[1,128,1],f16>, !torch.int -> !torch.vtensor<[1,128,1,1],f16>
    %1293 = torch.aten.mul.Tensor %1284, %1292 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.vtensor<[1,128,1,1],f16> -> !torch.vtensor<[1,128,1024,1024],f32>
    %int1_1358 = torch.constant.int 1
    %1294 = torch.aten.add.Tensor %1293, %1288, %int1_1358 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.vtensor<[1,128,1,1],f16>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f32>
    %int5_1359 = torch.constant.int 5
    %1295 = torch.prims.convert_element_type %1294, %int5_1359 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int5_1360 = torch.constant.int 5
    %1296 = torch.prims.convert_element_type %result1_1344, %int5_1360 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_1361 = torch.constant.int 5
    %1297 = torch.prims.convert_element_type %1280, %int5_1361 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_1362 = torch.constant.int 3
    %1298 = torch.prim.ListConstruct %int3_1362 : (!torch.int) -> !torch.list<int>
    %1299 = torch.prims.squeeze %1296, %1298 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1363 = torch.constant.int 2
    %1300 = torch.prim.ListConstruct %int2_1363 : (!torch.int) -> !torch.list<int>
    %1301 = torch.prims.squeeze %1299, %1300 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_1364 = torch.constant.int 3
    %1302 = torch.prim.ListConstruct %int3_1364 : (!torch.int) -> !torch.list<int>
    %1303 = torch.prims.squeeze %1297, %1302 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1365 = torch.constant.int 2
    %1304 = torch.prim.ListConstruct %int2_1365 : (!torch.int) -> !torch.list<int>
    %1305 = torch.prims.squeeze %1303, %1304 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %1306 = torch.aten.detach %1301 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1307 = torch.aten.detach %1305 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1308 = torch.aten.silu %1295 : !torch.vtensor<[1,128,1024,1024],f16> -> !torch.vtensor<[1,128,1024,1024],f16>
    %none_1366 = torch.constant.none
    %1309 = torch.aten.clone %1308, %none_1366 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.none -> !torch.vtensor<[1,128,1024,1024],f16>
    %_params.vae.decoder.up_blocks.3.resnets.1.conv2.weight = util.global.load @_params.vae.decoder.up_blocks.3.resnets.1.conv2.weight : tensor<128x128x3x3xf16>
    %1310 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.1.conv2.weight : tensor<128x128x3x3xf16> -> !torch.vtensor<[128,128,3,3],f16>
    %_params.vae.decoder.up_blocks.3.resnets.1.conv2.bias = util.global.load @_params.vae.decoder.up_blocks.3.resnets.1.conv2.bias : tensor<128xf16>
    %1311 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.1.conv2.bias : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int1_1367 = torch.constant.int 1
    %int1_1368 = torch.constant.int 1
    %1312 = torch.prim.ListConstruct %int1_1367, %int1_1368 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1369 = torch.constant.int 1
    %int1_1370 = torch.constant.int 1
    %1313 = torch.prim.ListConstruct %int1_1369, %int1_1370 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1371 = torch.constant.int 1
    %int1_1372 = torch.constant.int 1
    %1314 = torch.prim.ListConstruct %int1_1371, %int1_1372 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_1373 = torch.constant.bool false
    %int0_1374 = torch.constant.int 0
    %int0_1375 = torch.constant.int 0
    %1315 = torch.prim.ListConstruct %int0_1374, %int0_1375 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1376 = torch.constant.int 1
    %1316 = torch.aten.convolution %1309, %1310, %1311, %1312, %1313, %1314, %false_1373, %1315, %int1_1376 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.vtensor<[128,128,3,3],f16>, !torch.vtensor<[128],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int1_1377 = torch.constant.int 1
    %1317 = torch.aten.add.Tensor %1231, %1316, %int1_1377 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.vtensor<[1,128,1024,1024],f16>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %float1.000000e00_1378 = torch.constant.float 1.000000e+00
    %1318 = torch.aten.div.Scalar %1317, %float1.000000e00_1378 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.float -> !torch.vtensor<[1,128,1024,1024],f16>
    %int2_1379 = torch.constant.int 2
    %1319 = torch.aten.clone %1318, %int2_1379 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int1_1380 = torch.constant.int 1
    %int32_1381 = torch.constant.int 32
    %int4_1382 = torch.constant.int 4
    %int1048576_1383 = torch.constant.int 1048576
    %1320 = torch.prim.ListConstruct %int1_1380, %int32_1381, %int4_1382, %int1048576_1383 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1321 = torch.aten.view %1319, %1320 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.list<int> -> !torch.vtensor<[1,32,4,1048576],f16>
    %int6_1384 = torch.constant.int 6
    %1322 = torch.prims.convert_element_type %1321, %int6_1384 : !torch.vtensor<[1,32,4,1048576],f16>, !torch.int -> !torch.vtensor<[1,32,4,1048576],f32>
    %int2_1385 = torch.constant.int 2
    %int3_1386 = torch.constant.int 3
    %1323 = torch.prim.ListConstruct %int2_1385, %int3_1386 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_1387 = torch.constant.int 0
    %true_1388 = torch.constant.bool true
    %result0_1389, %result1_1390 = torch.aten.var_mean.correction %1322, %1323, %int0_1387, %true_1388 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_1391 = torch.constant.float 9.9999999999999995E-7
    %int1_1392 = torch.constant.int 1
    %1324 = torch.aten.add.Scalar %result0_1389, %float9.999990e-07_1391, %int1_1392 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %1325 = torch.aten.rsqrt %1324 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_1393 = torch.constant.int 1
    %1326 = torch.aten.sub.Tensor %1321, %result1_1390, %int1_1393 : !torch.vtensor<[1,32,4,1048576],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,4,1048576],f32>
    %1327 = torch.aten.mul.Tensor %1326, %1325 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,4,1048576],f32>
    %int1_1394 = torch.constant.int 1
    %int128_1395 = torch.constant.int 128
    %int1024_1396 = torch.constant.int 1024
    %int1024_1397 = torch.constant.int 1024
    %1328 = torch.prim.ListConstruct %int1_1394, %int128_1395, %int1024_1396, %int1024_1397 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1329 = torch.aten.view %1327, %1328 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.list<int> -> !torch.vtensor<[1,128,1024,1024],f32>
    %_params.vae.decoder.up_blocks.3.resnets.2.norm1.bias = util.global.load @_params.vae.decoder.up_blocks.3.resnets.2.norm1.bias : tensor<128xf16>
    %1330 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.2.norm1.bias : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int0_1398 = torch.constant.int 0
    %1331 = torch.aten.unsqueeze %1330, %int0_1398 : !torch.vtensor<[128],f16>, !torch.int -> !torch.vtensor<[1,128],f16>
    %int2_1399 = torch.constant.int 2
    %1332 = torch.aten.unsqueeze %1331, %int2_1399 : !torch.vtensor<[1,128],f16>, !torch.int -> !torch.vtensor<[1,128,1],f16>
    %int3_1400 = torch.constant.int 3
    %1333 = torch.aten.unsqueeze %1332, %int3_1400 : !torch.vtensor<[1,128,1],f16>, !torch.int -> !torch.vtensor<[1,128,1,1],f16>
    %_params.vae.decoder.up_blocks.3.resnets.2.norm1.weight = util.global.load @_params.vae.decoder.up_blocks.3.resnets.2.norm1.weight : tensor<128xf16>
    %1334 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.2.norm1.weight : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int0_1401 = torch.constant.int 0
    %1335 = torch.aten.unsqueeze %1334, %int0_1401 : !torch.vtensor<[128],f16>, !torch.int -> !torch.vtensor<[1,128],f16>
    %int2_1402 = torch.constant.int 2
    %1336 = torch.aten.unsqueeze %1335, %int2_1402 : !torch.vtensor<[1,128],f16>, !torch.int -> !torch.vtensor<[1,128,1],f16>
    %int3_1403 = torch.constant.int 3
    %1337 = torch.aten.unsqueeze %1336, %int3_1403 : !torch.vtensor<[1,128,1],f16>, !torch.int -> !torch.vtensor<[1,128,1,1],f16>
    %1338 = torch.aten.mul.Tensor %1329, %1337 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.vtensor<[1,128,1,1],f16> -> !torch.vtensor<[1,128,1024,1024],f32>
    %int1_1404 = torch.constant.int 1
    %1339 = torch.aten.add.Tensor %1338, %1333, %int1_1404 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.vtensor<[1,128,1,1],f16>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f32>
    %int5_1405 = torch.constant.int 5
    %1340 = torch.prims.convert_element_type %1339, %int5_1405 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int5_1406 = torch.constant.int 5
    %1341 = torch.prims.convert_element_type %result1_1390, %int5_1406 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_1407 = torch.constant.int 5
    %1342 = torch.prims.convert_element_type %1325, %int5_1407 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_1408 = torch.constant.int 3
    %1343 = torch.prim.ListConstruct %int3_1408 : (!torch.int) -> !torch.list<int>
    %1344 = torch.prims.squeeze %1341, %1343 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1409 = torch.constant.int 2
    %1345 = torch.prim.ListConstruct %int2_1409 : (!torch.int) -> !torch.list<int>
    %1346 = torch.prims.squeeze %1344, %1345 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_1410 = torch.constant.int 3
    %1347 = torch.prim.ListConstruct %int3_1410 : (!torch.int) -> !torch.list<int>
    %1348 = torch.prims.squeeze %1342, %1347 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1411 = torch.constant.int 2
    %1349 = torch.prim.ListConstruct %int2_1411 : (!torch.int) -> !torch.list<int>
    %1350 = torch.prims.squeeze %1348, %1349 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %1351 = torch.aten.detach %1346 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1352 = torch.aten.detach %1350 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1353 = torch.aten.silu %1340 : !torch.vtensor<[1,128,1024,1024],f16> -> !torch.vtensor<[1,128,1024,1024],f16>
    %_params.vae.decoder.up_blocks.3.resnets.2.conv1.weight = util.global.load @_params.vae.decoder.up_blocks.3.resnets.2.conv1.weight : tensor<128x128x3x3xf16>
    %1354 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.2.conv1.weight : tensor<128x128x3x3xf16> -> !torch.vtensor<[128,128,3,3],f16>
    %_params.vae.decoder.up_blocks.3.resnets.2.conv1.bias = util.global.load @_params.vae.decoder.up_blocks.3.resnets.2.conv1.bias : tensor<128xf16>
    %1355 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.2.conv1.bias : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int1_1412 = torch.constant.int 1
    %int1_1413 = torch.constant.int 1
    %1356 = torch.prim.ListConstruct %int1_1412, %int1_1413 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1414 = torch.constant.int 1
    %int1_1415 = torch.constant.int 1
    %1357 = torch.prim.ListConstruct %int1_1414, %int1_1415 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1416 = torch.constant.int 1
    %int1_1417 = torch.constant.int 1
    %1358 = torch.prim.ListConstruct %int1_1416, %int1_1417 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_1418 = torch.constant.bool false
    %int0_1419 = torch.constant.int 0
    %int0_1420 = torch.constant.int 0
    %1359 = torch.prim.ListConstruct %int0_1419, %int0_1420 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1421 = torch.constant.int 1
    %1360 = torch.aten.convolution %1353, %1354, %1355, %1356, %1357, %1358, %false_1418, %1359, %int1_1421 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.vtensor<[128,128,3,3],f16>, !torch.vtensor<[128],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int2_1422 = torch.constant.int 2
    %1361 = torch.aten.clone %1360, %int2_1422 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int1_1423 = torch.constant.int 1
    %int32_1424 = torch.constant.int 32
    %int4_1425 = torch.constant.int 4
    %int1048576_1426 = torch.constant.int 1048576
    %1362 = torch.prim.ListConstruct %int1_1423, %int32_1424, %int4_1425, %int1048576_1426 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1363 = torch.aten.view %1361, %1362 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.list<int> -> !torch.vtensor<[1,32,4,1048576],f16>
    %int6_1427 = torch.constant.int 6
    %1364 = torch.prims.convert_element_type %1363, %int6_1427 : !torch.vtensor<[1,32,4,1048576],f16>, !torch.int -> !torch.vtensor<[1,32,4,1048576],f32>
    %int2_1428 = torch.constant.int 2
    %int3_1429 = torch.constant.int 3
    %1365 = torch.prim.ListConstruct %int2_1428, %int3_1429 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_1430 = torch.constant.int 0
    %true_1431 = torch.constant.bool true
    %result0_1432, %result1_1433 = torch.aten.var_mean.correction %1364, %1365, %int0_1430, %true_1431 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_1434 = torch.constant.float 9.9999999999999995E-7
    %int1_1435 = torch.constant.int 1
    %1366 = torch.aten.add.Scalar %result0_1432, %float9.999990e-07_1434, %int1_1435 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %1367 = torch.aten.rsqrt %1366 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_1436 = torch.constant.int 1
    %1368 = torch.aten.sub.Tensor %1363, %result1_1433, %int1_1436 : !torch.vtensor<[1,32,4,1048576],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,4,1048576],f32>
    %1369 = torch.aten.mul.Tensor %1368, %1367 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,4,1048576],f32>
    %int1_1437 = torch.constant.int 1
    %int128_1438 = torch.constant.int 128
    %int1024_1439 = torch.constant.int 1024
    %int1024_1440 = torch.constant.int 1024
    %1370 = torch.prim.ListConstruct %int1_1437, %int128_1438, %int1024_1439, %int1024_1440 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1371 = torch.aten.view %1369, %1370 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.list<int> -> !torch.vtensor<[1,128,1024,1024],f32>
    %_params.vae.decoder.up_blocks.3.resnets.2.norm2.bias = util.global.load @_params.vae.decoder.up_blocks.3.resnets.2.norm2.bias : tensor<128xf16>
    %1372 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.2.norm2.bias : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int0_1441 = torch.constant.int 0
    %1373 = torch.aten.unsqueeze %1372, %int0_1441 : !torch.vtensor<[128],f16>, !torch.int -> !torch.vtensor<[1,128],f16>
    %int2_1442 = torch.constant.int 2
    %1374 = torch.aten.unsqueeze %1373, %int2_1442 : !torch.vtensor<[1,128],f16>, !torch.int -> !torch.vtensor<[1,128,1],f16>
    %int3_1443 = torch.constant.int 3
    %1375 = torch.aten.unsqueeze %1374, %int3_1443 : !torch.vtensor<[1,128,1],f16>, !torch.int -> !torch.vtensor<[1,128,1,1],f16>
    %_params.vae.decoder.up_blocks.3.resnets.2.norm2.weight = util.global.load @_params.vae.decoder.up_blocks.3.resnets.2.norm2.weight : tensor<128xf16>
    %1376 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.2.norm2.weight : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int0_1444 = torch.constant.int 0
    %1377 = torch.aten.unsqueeze %1376, %int0_1444 : !torch.vtensor<[128],f16>, !torch.int -> !torch.vtensor<[1,128],f16>
    %int2_1445 = torch.constant.int 2
    %1378 = torch.aten.unsqueeze %1377, %int2_1445 : !torch.vtensor<[1,128],f16>, !torch.int -> !torch.vtensor<[1,128,1],f16>
    %int3_1446 = torch.constant.int 3
    %1379 = torch.aten.unsqueeze %1378, %int3_1446 : !torch.vtensor<[1,128,1],f16>, !torch.int -> !torch.vtensor<[1,128,1,1],f16>
    %1380 = torch.aten.mul.Tensor %1371, %1379 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.vtensor<[1,128,1,1],f16> -> !torch.vtensor<[1,128,1024,1024],f32>
    %int1_1447 = torch.constant.int 1
    %1381 = torch.aten.add.Tensor %1380, %1375, %int1_1447 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.vtensor<[1,128,1,1],f16>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f32>
    %int5_1448 = torch.constant.int 5
    %1382 = torch.prims.convert_element_type %1381, %int5_1448 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int5_1449 = torch.constant.int 5
    %1383 = torch.prims.convert_element_type %result1_1433, %int5_1449 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_1450 = torch.constant.int 5
    %1384 = torch.prims.convert_element_type %1367, %int5_1450 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_1451 = torch.constant.int 3
    %1385 = torch.prim.ListConstruct %int3_1451 : (!torch.int) -> !torch.list<int>
    %1386 = torch.prims.squeeze %1383, %1385 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1452 = torch.constant.int 2
    %1387 = torch.prim.ListConstruct %int2_1452 : (!torch.int) -> !torch.list<int>
    %1388 = torch.prims.squeeze %1386, %1387 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_1453 = torch.constant.int 3
    %1389 = torch.prim.ListConstruct %int3_1453 : (!torch.int) -> !torch.list<int>
    %1390 = torch.prims.squeeze %1384, %1389 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1454 = torch.constant.int 2
    %1391 = torch.prim.ListConstruct %int2_1454 : (!torch.int) -> !torch.list<int>
    %1392 = torch.prims.squeeze %1390, %1391 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %1393 = torch.aten.detach %1388 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1394 = torch.aten.detach %1392 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1395 = torch.aten.silu %1382 : !torch.vtensor<[1,128,1024,1024],f16> -> !torch.vtensor<[1,128,1024,1024],f16>
    %none_1455 = torch.constant.none
    %1396 = torch.aten.clone %1395, %none_1455 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.none -> !torch.vtensor<[1,128,1024,1024],f16>
    %_params.vae.decoder.up_blocks.3.resnets.2.conv2.weight = util.global.load @_params.vae.decoder.up_blocks.3.resnets.2.conv2.weight : tensor<128x128x3x3xf16>
    %1397 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.2.conv2.weight : tensor<128x128x3x3xf16> -> !torch.vtensor<[128,128,3,3],f16>
    %_params.vae.decoder.up_blocks.3.resnets.2.conv2.bias = util.global.load @_params.vae.decoder.up_blocks.3.resnets.2.conv2.bias : tensor<128xf16>
    %1398 = torch_c.from_builtin_tensor %_params.vae.decoder.up_blocks.3.resnets.2.conv2.bias : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int1_1456 = torch.constant.int 1
    %int1_1457 = torch.constant.int 1
    %1399 = torch.prim.ListConstruct %int1_1456, %int1_1457 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1458 = torch.constant.int 1
    %int1_1459 = torch.constant.int 1
    %1400 = torch.prim.ListConstruct %int1_1458, %int1_1459 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1460 = torch.constant.int 1
    %int1_1461 = torch.constant.int 1
    %1401 = torch.prim.ListConstruct %int1_1460, %int1_1461 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_1462 = torch.constant.bool false
    %int0_1463 = torch.constant.int 0
    %int0_1464 = torch.constant.int 0
    %1402 = torch.prim.ListConstruct %int0_1463, %int0_1464 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1465 = torch.constant.int 1
    %1403 = torch.aten.convolution %1396, %1397, %1398, %1399, %1400, %1401, %false_1462, %1402, %int1_1465 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.vtensor<[128,128,3,3],f16>, !torch.vtensor<[128],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int1_1466 = torch.constant.int 1
    %1404 = torch.aten.add.Tensor %1318, %1403, %int1_1466 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.vtensor<[1,128,1024,1024],f16>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %float1.000000e00_1467 = torch.constant.float 1.000000e+00
    %1405 = torch.aten.div.Scalar %1404, %float1.000000e00_1467 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.float -> !torch.vtensor<[1,128,1024,1024],f16>
    %int2_1468 = torch.constant.int 2
    %1406 = torch.aten.clone %1405, %int2_1468 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int1_1469 = torch.constant.int 1
    %int32_1470 = torch.constant.int 32
    %int4_1471 = torch.constant.int 4
    %int1048576_1472 = torch.constant.int 1048576
    %1407 = torch.prim.ListConstruct %int1_1469, %int32_1470, %int4_1471, %int1048576_1472 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1408 = torch.aten.view %1406, %1407 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.list<int> -> !torch.vtensor<[1,32,4,1048576],f16>
    %int6_1473 = torch.constant.int 6
    %1409 = torch.prims.convert_element_type %1408, %int6_1473 : !torch.vtensor<[1,32,4,1048576],f16>, !torch.int -> !torch.vtensor<[1,32,4,1048576],f32>
    %int2_1474 = torch.constant.int 2
    %int3_1475 = torch.constant.int 3
    %1410 = torch.prim.ListConstruct %int2_1474, %int3_1475 : (!torch.int, !torch.int) -> !torch.list<int>
    %int0_1476 = torch.constant.int 0
    %true_1477 = torch.constant.bool true
    %result0_1478, %result1_1479 = torch.aten.var_mean.correction %1409, %1410, %int0_1476, %true_1477 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.list<int>, !torch.int, !torch.bool -> !torch.vtensor<[1,32,1,1],f32>, !torch.vtensor<[1,32,1,1],f32>
    %float9.999990e-07_1480 = torch.constant.float 9.9999999999999995E-7
    %int1_1481 = torch.constant.int 1
    %1411 = torch.aten.add.Scalar %result0_1478, %float9.999990e-07_1480, %int1_1481 : !torch.vtensor<[1,32,1,1],f32>, !torch.float, !torch.int -> !torch.vtensor<[1,32,1,1],f32>
    %1412 = torch.aten.rsqrt %1411 : !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,1,1],f32>
    %int1_1482 = torch.constant.int 1
    %1413 = torch.aten.sub.Tensor %1408, %result1_1479, %int1_1482 : !torch.vtensor<[1,32,4,1048576],f16>, !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,4,1048576],f32>
    %1414 = torch.aten.mul.Tensor %1413, %1412 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.vtensor<[1,32,1,1],f32> -> !torch.vtensor<[1,32,4,1048576],f32>
    %int1_1483 = torch.constant.int 1
    %int128_1484 = torch.constant.int 128
    %int1024_1485 = torch.constant.int 1024
    %int1024_1486 = torch.constant.int 1024
    %1415 = torch.prim.ListConstruct %int1_1483, %int128_1484, %int1024_1485, %int1024_1486 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %1416 = torch.aten.view %1414, %1415 : !torch.vtensor<[1,32,4,1048576],f32>, !torch.list<int> -> !torch.vtensor<[1,128,1024,1024],f32>
    %_params.vae.decoder.conv_norm_out.bias = util.global.load @_params.vae.decoder.conv_norm_out.bias : tensor<128xf16>
    %1417 = torch_c.from_builtin_tensor %_params.vae.decoder.conv_norm_out.bias : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int0_1487 = torch.constant.int 0
    %1418 = torch.aten.unsqueeze %1417, %int0_1487 : !torch.vtensor<[128],f16>, !torch.int -> !torch.vtensor<[1,128],f16>
    %int2_1488 = torch.constant.int 2
    %1419 = torch.aten.unsqueeze %1418, %int2_1488 : !torch.vtensor<[1,128],f16>, !torch.int -> !torch.vtensor<[1,128,1],f16>
    %int3_1489 = torch.constant.int 3
    %1420 = torch.aten.unsqueeze %1419, %int3_1489 : !torch.vtensor<[1,128,1],f16>, !torch.int -> !torch.vtensor<[1,128,1,1],f16>
    %_params.vae.decoder.conv_norm_out.weight = util.global.load @_params.vae.decoder.conv_norm_out.weight : tensor<128xf16>
    %1421 = torch_c.from_builtin_tensor %_params.vae.decoder.conv_norm_out.weight : tensor<128xf16> -> !torch.vtensor<[128],f16>
    %int0_1490 = torch.constant.int 0
    %1422 = torch.aten.unsqueeze %1421, %int0_1490 : !torch.vtensor<[128],f16>, !torch.int -> !torch.vtensor<[1,128],f16>
    %int2_1491 = torch.constant.int 2
    %1423 = torch.aten.unsqueeze %1422, %int2_1491 : !torch.vtensor<[1,128],f16>, !torch.int -> !torch.vtensor<[1,128,1],f16>
    %int3_1492 = torch.constant.int 3
    %1424 = torch.aten.unsqueeze %1423, %int3_1492 : !torch.vtensor<[1,128,1],f16>, !torch.int -> !torch.vtensor<[1,128,1,1],f16>
    %1425 = torch.aten.mul.Tensor %1416, %1424 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.vtensor<[1,128,1,1],f16> -> !torch.vtensor<[1,128,1024,1024],f32>
    %int1_1493 = torch.constant.int 1
    %1426 = torch.aten.add.Tensor %1425, %1420, %int1_1493 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.vtensor<[1,128,1,1],f16>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f32>
    %int5_1494 = torch.constant.int 5
    %1427 = torch.prims.convert_element_type %1426, %int5_1494 : !torch.vtensor<[1,128,1024,1024],f32>, !torch.int -> !torch.vtensor<[1,128,1024,1024],f16>
    %int5_1495 = torch.constant.int 5
    %1428 = torch.prims.convert_element_type %result1_1479, %int5_1495 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int5_1496 = torch.constant.int 5
    %1429 = torch.prims.convert_element_type %1412, %int5_1496 : !torch.vtensor<[1,32,1,1],f32>, !torch.int -> !torch.vtensor<[1,32,1,1],f16>
    %int3_1497 = torch.constant.int 3
    %1430 = torch.prim.ListConstruct %int3_1497 : (!torch.int) -> !torch.list<int>
    %1431 = torch.prims.squeeze %1428, %1430 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1498 = torch.constant.int 2
    %1432 = torch.prim.ListConstruct %int2_1498 : (!torch.int) -> !torch.list<int>
    %1433 = torch.prims.squeeze %1431, %1432 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %int3_1499 = torch.constant.int 3
    %1434 = torch.prim.ListConstruct %int3_1499 : (!torch.int) -> !torch.list<int>
    %1435 = torch.prims.squeeze %1429, %1434 : !torch.vtensor<[1,32,1,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32,1],f16>
    %int2_1500 = torch.constant.int 2
    %1436 = torch.prim.ListConstruct %int2_1500 : (!torch.int) -> !torch.list<int>
    %1437 = torch.prims.squeeze %1435, %1436 : !torch.vtensor<[1,32,1],f16>, !torch.list<int> -> !torch.vtensor<[1,32],f16>
    %1438 = torch.aten.detach %1433 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1439 = torch.aten.detach %1437 : !torch.vtensor<[1,32],f16> -> !torch.vtensor<[1,32],f16>
    %1440 = torch.aten.silu %1427 : !torch.vtensor<[1,128,1024,1024],f16> -> !torch.vtensor<[1,128,1024,1024],f16>
    %_params.vae.decoder.conv_out.weight = util.global.load @_params.vae.decoder.conv_out.weight : tensor<3x128x3x3xf16>
    %1441 = torch_c.from_builtin_tensor %_params.vae.decoder.conv_out.weight : tensor<3x128x3x3xf16> -> !torch.vtensor<[3,128,3,3],f16>
    %_params.vae.decoder.conv_out.bias = util.global.load @_params.vae.decoder.conv_out.bias : tensor<3xf16>
    %1442 = torch_c.from_builtin_tensor %_params.vae.decoder.conv_out.bias : tensor<3xf16> -> !torch.vtensor<[3],f16>
    %int1_1501 = torch.constant.int 1
    %int1_1502 = torch.constant.int 1
    %1443 = torch.prim.ListConstruct %int1_1501, %int1_1502 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1503 = torch.constant.int 1
    %int1_1504 = torch.constant.int 1
    %1444 = torch.prim.ListConstruct %int1_1503, %int1_1504 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1505 = torch.constant.int 1
    %int1_1506 = torch.constant.int 1
    %1445 = torch.prim.ListConstruct %int1_1505, %int1_1506 : (!torch.int, !torch.int) -> !torch.list<int>
    %false_1507 = torch.constant.bool false
    %int0_1508 = torch.constant.int 0
    %int0_1509 = torch.constant.int 0
    %1446 = torch.prim.ListConstruct %int0_1508, %int0_1509 : (!torch.int, !torch.int) -> !torch.list<int>
    %int1_1510 = torch.constant.int 1
    %1447 = torch.aten.convolution %1440, %1441, %1442, %1443, %1444, %1445, %false_1507, %1446, %int1_1510 : !torch.vtensor<[1,128,1024,1024],f16>, !torch.vtensor<[3,128,3,3],f16>, !torch.vtensor<[3],f16>, !torch.list<int>, !torch.list<int>, !torch.list<int>, !torch.bool, !torch.list<int>, !torch.int -> !torch.vtensor<[1,3,1024,1024],f16>
    %int2_1511 = torch.constant.int 2
    %1448 = torch.aten.div.Scalar %1447, %int2_1511 : !torch.vtensor<[1,3,1024,1024],f16>, !torch.int -> !torch.vtensor<[1,3,1024,1024],f16>
    %float5.000000e-01_1512 = torch.constant.float 5.000000e-01
    %int1_1513 = torch.constant.int 1
    %1449 = torch.aten.add.Scalar %1448, %float5.000000e-01_1512, %int1_1513 : !torch.vtensor<[1,3,1024,1024],f16>, !torch.float, !torch.int -> !torch.vtensor<[1,3,1024,1024],f16>
    %int0_1514 = torch.constant.int 0
    %int1_1515 = torch.constant.int 1
    %1450 = torch.aten.clamp %1449, %int0_1514, %int1_1515 : !torch.vtensor<[1,3,1024,1024],f16>, !torch.int, !torch.int -> !torch.vtensor<[1,3,1024,1024],f16>
    return %1450 : !torch.vtensor<[1,3,1024,1024],f16>
  }
}
